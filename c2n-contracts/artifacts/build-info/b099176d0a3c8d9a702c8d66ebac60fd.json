{"id":"b099176d0a3c8d9a702c8d66ebac60fd","_format":"hh-sol-build-info-1","solcVersion":"0.8.26","solcLongVersion":"0.8.26+commit.8a97fa7a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20Metadata} from \"../token/ERC20/extensions/IERC20Metadata.sol\";\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guaratees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/access/Admin.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ncontract Admin {\n\n    // Listing all admins\n    address [] public admins;\n\n    // Modifier for easier checking if user is admin\n    mapping(address => bool) public isAdmin;\n\n    // Modifier restricting access to only admin\n    modifier onlyAdmin {\n        require(isAdmin[msg.sender], \"Only admin can call.\");\n        _;\n    }\n\n    // Constructor to set initial admins during deployment\n    constructor (address [] memory _admins)  {\n        for(uint i = 0; i < _admins.length; i++) {\n            admins.push(_admins[i]);\n            isAdmin[_admins[i]] = true;\n        }\n    }\n\n    function addAdmin(\n        address _adminAddress\n    )\n    external\n    onlyAdmin\n    {\n        // Can't add 0x address as an admin\n        require(_adminAddress != address(0x0), \"[RBAC] : Admin must be != than 0x0 address\");\n        // Can't add existing admin\n        require(!isAdmin[_adminAddress], \"[RBAC] : Admin already exists.\");\n        // Add admin to array of admins\n        admins.push(_adminAddress);\n        // Set mapping\n        isAdmin[_adminAddress] = true;\n    }\n\n    function removeAdmin(\n        address _adminAddress\n    )\n    external\n    onlyAdmin\n    {\n        // Admin has to exist\n        require(isAdmin[_adminAddress]);\n        require(admins.length > 1, \"Can not remove all admins since contract becomes unusable.\");\n        uint i = 0;\n\n        while(admins[i] != _adminAddress) {\n            if(i == admins.length) {\n                revert(\"Passed admin address does not exist\");\n            }\n            i++;\n        }\n\n        // Copy the last admin position to the current index\n        admins[i] = admins[admins.length-1];\n\n        isAdmin[_adminAddress] = false;\n\n        // Remove the last admin, since it's double present\n        admins.pop();\n    }\n\n    // Fetch all admins\n    function getAllAdmins()\n    external\n    view\n    returns (address [] memory)\n    {\n        return admins;\n    }\n\n}\n"},"contracts/farming/FarmingC2N.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\n// Farm distributes the ERC20 rewards based on staked LP to each user.\n//\n// Cloned from https://github.com/SashimiProject/sashimiswap/blob/master/contracts/MasterChef.sol\n// Modified by LTO Network to work for non-mintable ERC20.\n\ncontract FarmingC2N is Ownable {\n\n    using SafeERC20 for IERC20;\n\n    // 运行态用户质押信息\n    struct UserInfo {\n        uint256 amount;     // 用户提供的LP的数量\n        uint256 rewardDebt; // 用户质押总奖励数\n        //\n        // We do some fancy math here. Basically, any point in time, the amount of ERC20s\n        // entitled to a user but is pending to be distributed is:\n        //\n        //   pending reward = (user.amount * pool.accERC20PerShare) - user.rewardDebt\n        //\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\n        //   1. The pool's `accERC20PerShare` (and `lastRewardBlock`) gets updated.\n        //   2. User receives the pending reward sent to his/her address.\n        //   3. User's `amount` gets updated.\n        //   4. User's `rewardDebt` gets updated.\n    }\n\n    // 每一个LP池的信息\n    struct PoolInfo {\n        IERC20 lpToken;             // LPToken池的的地址\n        uint256 allocPoint;         // 当前LP池子的分配分数，例如有三个池子abc对应的分数为a:b:c=10:20:10 那么在进行质押计算时,a=25%,b=50%,c=25%\n        uint256 lastRewardTimestamp;    // 上次奖励发生时期\n        uint256 accERC20PerShare;   // 累积单位token质押奖励数， *1e36（为了避免小数计算导致精度降低）.\n        uint256 totalDeposits; // 总质押量\n    }\n\n\n    // Farm奖励代币地址\n    IERC20 public erc20;\n    // 奖励代币已经发出去的数量\n    uint256 public paidOut;\n    // 奖励代币每秒奖励数\n    uint256 public rewardPerSecond;\n    // 总奖励数量（最多可奖励的数量）\n    uint256 public totalRewards;\n    // LP池信息\n    PoolInfo[] public poolInfo;\n    // 每个LP池用户的质押以及奖励信息 [PoolId,[用户地址，用户信息]]\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n    // 总分配分数\n    uint256 public totalAllocPoint;\n\n    // Farming 开始时间\n    uint256 public startTimestamp;\n    // Farming 结束时间\n    uint256 public endTimestamp;\n\n    //业务事件\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n\n    //\n    constructor(IERC20 _erc20, uint256 _rewardPerSecond, uint256 _startTimestamp) Ownable(msg.sender)   {\n        erc20 = _erc20;\n        rewardPerSecond = _rewardPerSecond;\n        startTimestamp = _startTimestamp;\n        endTimestamp = _startTimestamp;\n    }\n\n    // Number of LP pools\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Fund the farm, increase the end block\n    function fund(uint256 _amount) public {\n        require(block.timestamp < endTimestamp, \"fund: too late, the farm is closed\");\n        erc20.safeTransferFrom(address(msg.sender), address(this), _amount);\n        endTimestamp += _amount/rewardPerSecond;\n        totalRewards = totalRewards+_amount;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardTimestamp = block.timestamp > startTimestamp ? block.timestamp : startTimestamp;\n        totalAllocPoint = totalAllocPoint+_allocPoint;\n        poolInfo.push(PoolInfo({\n        lpToken : _lpToken,\n        allocPoint : _allocPoint,\n        lastRewardTimestamp : lastRewardTimestamp,\n        accERC20PerShare : 0,\n        totalDeposits : 0\n        }));\n    }\n\n    // Update the given pool's ERC20 allocation point. Can only be called by the owner.\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint = totalAllocPoint-poolInfo[_pid].allocPoint+_allocPoint;\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n    // View function to see deposited LP for a user.\n    function deposited(uint256 _pid, address _user) external view returns (uint256) {\n        UserInfo storage user = userInfo[_pid][_user];\n        return user.amount;\n    }\n\n    // View function to see pending ERC20s for a user.\n    function pending(uint256 _pid, address _user) external view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accERC20PerShare = pool.accERC20PerShare;\n\n        uint256 lpSupply = pool.totalDeposits;\n\n        if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {\n            uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\n            uint256 timestampToCompare = pool.lastRewardTimestamp < endTimestamp ? pool.lastRewardTimestamp : endTimestamp;\n            uint256 nrOfSeconds = lastTimestamp-timestampToCompare;\n            uint256 erc20Reward = nrOfSeconds*rewardPerSecond*pool.allocPoint/totalAllocPoint;\n            accERC20PerShare = accERC20PerShare+(erc20Reward*1e36/lpSupply);\n        }\n        return user.amount*accERC20PerShare/1e36-user.rewardDebt;\n    }\n\n    // View function for total reward the farm has yet to pay out.\n    function totalPending() external view returns (uint256) {\n        if (block.timestamp <= startTimestamp) {\n            return 0;\n        }\n\n        uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\n        return rewardPerSecond*(lastTimestamp - startTimestamp)-paidOut;\n    }\n\n    // Update reward variables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\n\n        if (lastTimestamp <= pool.lastRewardTimestamp) {\n            return;\n        }\n        uint256 lpSupply = pool.totalDeposits;\n\n        if (lpSupply == 0) {\n            pool.lastRewardTimestamp = lastTimestamp;\n            return;\n        }\n\n        uint256 nrOfSeconds = lastTimestamp-pool.lastRewardTimestamp;\n        uint256 erc20Reward = nrOfSeconds*rewardPerSecond*pool.allocPoint-totalAllocPoint;\n\n        pool.accERC20PerShare = pool.accERC20PerShare+erc20Reward*1e36/lpSupply;\n        pool.lastRewardTimestamp = block.timestamp;\n    }\n\n    // Deposit LP tokens to Farm for ERC20 allocation.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        updatePool(_pid);\n\n        if (user.amount > 0) {\n            uint256 pendingAmount = user.amount*pool.accERC20PerShare/1e36-user.rewardDebt;\n            erc20Transfer(msg.sender, pendingAmount);\n        }\n\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n        pool.totalDeposits = pool.totalDeposits+_amount;\n\n        user.amount = user.amount+_amount;\n        user.rewardDebt = user.amount*pool.accERC20PerShare/1e36;\n        emit Deposit(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw LP tokens from Farm.\n    // 包含两个功能，收取奖励，撤回质押\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.amount >= _amount, \"withdraw: can't withdraw more than deposit\");\n        updatePool(_pid);\n\n        // 计算奖励\n        uint256 pendingAmount = user.amount*pool.accERC20PerShare/1e36-user.rewardDebt;\n\n        erc20Transfer(msg.sender, pendingAmount);\n        user.amount = user.amount-_amount;\n        user.rewardDebt = user.amount*pool.accERC20PerShare/1e36;\n        // 撤回流动性\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        pool.totalDeposits = pool.totalDeposits-_amount;\n\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\n        pool.totalDeposits = pool.totalDeposits-user.amount;\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\n        user.amount = 0;\n        user.rewardDebt = 0;\n    }\n\n    // Transfer ERC20 and update the required ERC20 to payout all rewards\n    function erc20Transfer(address _to, uint256 _amount) internal {\n        erc20.transfer(_to, _amount);\n        paidOut += _amount;\n    }\n}\n"},"contracts/interfaces/IAdmin.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ninterface IAdmin {\n    function isAdmin(address user) external view returns (bool);\n}\n"},"contracts/interfaces/IAllocationStaking.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ninterface IAllocationStaking {\n    function deposited(uint256 _pid, address _user) external view returns (uint256);\n    function setTokensUnlockTime(uint256 _pid, address _user, uint256 _tokensUnlockTime) external;\n\n}\n"},"contracts/interfaces/ISalesFactory.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\ninterface ISalesFactory {\n    function setSaleOwnerAndToken(address saleOwner, address saleToken) external;\n    function isSaleCreatedThroughFactory(address sale) external view returns (bool);\n}\n"},"contracts/sales/AllocationStaking.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"../interfaces/ISalesFactory.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\ncontract AllocationStaking is OwnableUpgradeable{\n\n    using SafeERC20 for IERC20;\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;     // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt. Current reward debt when user joined farm. See explanation below.\n        //\n        // We do some fancy math here. Basically, any point in time, the amount of ERC20s\n        // entitled to a user but is pending to be distributed is:\n        //\n        //   pending reward = (user.amount * pool.accERC20PerShare) - user.rewardDebt\n        //\n        // Whenever a user deposits or withdraws LP tokens to a pool. Here's what happens:\n        //   1. The pool's `accERC20PerShare` (and `lastRewardBlock`) gets updated.\n        //   2. User receives the pending reward sent to his/her address.\n        //   3. User's `amount` gets updated.\n        //   4. User's `rewardDebt` gets updated.\n        uint256 tokensUnlockTime; // If user registered for sale, returns when tokens are getting unlocked\n        address [] salesRegistered;\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IERC20 lpToken;             // Address of LP token contract.\n        uint256 allocPoint;         // How many allocation points assigned to this pool. ERC20s to distribute per block.\n        uint256 lastRewardTimestamp;    // Last timstamp that ERC20s distribution occurs.\n        uint256 accERC20PerShare;   // Accumulated ERC20s per share, times 1e36.\n        uint256 totalDeposits; // Total amount of tokens deposited at the moment (staked)\n    }\n\n\n    // Address of the ERC20 Token contract.\n    IERC20 public erc20;\n    // The total amount of ERC20 that's paid out as reward.\n    uint256 public paidOut;\n    // ERC20 tokens rewarded per second.\n    uint256 public rewardPerSecond;\n    // Total rewards added to farm\n    uint256 public totalRewards;\n    // Address of sales factory contract\n    ISalesFactory public salesFactory;\n    // Info of each pool.\n    PoolInfo[] public poolInfo;\n    // Info of each user that stakes LP tokens.\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\n    // Total allocation points. Must be the sum of all allocation points in all pools.\n    uint256 public totalAllocPoint;\n\n    // The timestamp when farming starts.\n    uint256 public startTimestamp;\n    // The timestamp when farming ends.\n    uint256 public endTimestamp;\n\n    // Events\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\n    event CompoundedEarnings(address indexed user, uint256 indexed pid, uint256 amountAdded, uint256 totalDeposited);\n\n    // Restricting calls to only verified sales\n    modifier onlyVerifiedSales {\n        require(salesFactory.isSaleCreatedThroughFactory(msg.sender), \"Sale not created through factory.\");\n        _;\n    }\n\n    function initialize(\n        IERC20 _erc20,\n        uint256 _rewardPerSecond,\n        uint256 _startTimestamp,\n        address _salesFactory\n    ) initializer\n    public\n    {\n        __Ownable_init(_msgSender());\n\n        erc20 = _erc20;\n        rewardPerSecond = _rewardPerSecond;\n        startTimestamp = _startTimestamp;\n        endTimestamp = _startTimestamp;\n        // Create sales factory contract\n        salesFactory = ISalesFactory(_salesFactory);\n    }\n\n    // Function where owner can set sales factory in case of upgrading some of smart-contracts\n    function setSalesFactory(address _salesFactory) external onlyOwner {\n        require(_salesFactory != address(0));\n        salesFactory = ISalesFactory(_salesFactory);\n    }\n\n    // Number of LP pools\n    function poolLength() external view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    // Fund the farm, increase the end block\n    function fund(uint256 _amount) public {\n        require(block.timestamp < endTimestamp, \"fund: too late, the farm is closed\");\n        erc20.safeTransferFrom(address(msg.sender), address(this), _amount);\n        endTimestamp += _amount/rewardPerSecond;\n        totalRewards = totalRewards+_amount;\n    }\n\n    // Add a new lp to the pool. Can only be called by the owner.\n    // DO NOT add the same LP token more than once. Rewards will be messed up if you do.\n    function add(uint256 _allocPoint, IERC20 _lpToken, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardTimestamp = block.timestamp > startTimestamp ? block.timestamp : startTimestamp;\n        totalAllocPoint = totalAllocPoint+_allocPoint;\n        // Push new PoolInfo\n        poolInfo.push(\n            PoolInfo({\n        lpToken : _lpToken,\n        allocPoint : _allocPoint,\n        lastRewardTimestamp : lastRewardTimestamp,\n        accERC20PerShare : 0,\n        totalDeposits : 0\n        })\n        );\n    }\n\n    // Update the given pool's ERC20 allocation point. Can only be called by the owner.\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        totalAllocPoint = totalAllocPoint-poolInfo[_pid].allocPoint+_allocPoint;\n        poolInfo[_pid].allocPoint = _allocPoint;\n    }\n\n    // View function to see deposited LP for a user.\n    function deposited(uint256 _pid, address _user) public view returns (uint256) {\n        UserInfo storage user = userInfo[_pid][_user];\n        return user.amount;\n    }\n\n    // View function to see pending ERC20s for a user.\n    function pending(uint256 _pid, address _user) public view returns (uint256) {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][_user];\n        uint256 accERC20PerShare = pool.accERC20PerShare;\n\n        uint256 lpSupply = pool.totalDeposits;\n\n        // Compute pending ERC20s\n        if (block.timestamp > pool.lastRewardTimestamp && lpSupply != 0) {\n            uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\n            uint256 nrOfSeconds = lastTimestamp-pool.lastRewardTimestamp;\n            uint256 erc20Reward = nrOfSeconds*rewardPerSecond*pool.allocPoint/totalAllocPoint;\n            accERC20PerShare = accERC20PerShare+(erc20Reward*1e36/lpSupply);\n        }\n        return user.amount*accERC20PerShare/1e36-user.rewardDebt;\n    }\n\n    // View function for total reward the farm has yet to pay out.\n    // NOTE: this is not necessarily the sum of all pending sums on all pools and users\n    //      example 1: when tokens have been wiped by emergency withdraw\n    //      example 2: when one pool has no LP supply\n    function totalPending() external view returns (uint256) {\n        if (block.timestamp <= startTimestamp) {\n            return 0;\n        }\n\n        uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\n        return rewardPerSecond*(lastTimestamp - startTimestamp)-paidOut;\n    }\n\n    // Update reward variables for all pools. Be careful of gas spending!\n    function massUpdatePools() public {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    function setTokensUnlockTime(uint256 _pid, address _user, uint256 _tokensUnlockTime) external onlyVerifiedSales {\n        UserInfo storage user = userInfo[_pid][_user];\n        // Require that tokens are currently unlocked\n        require(user.tokensUnlockTime <= block.timestamp);\n        user.tokensUnlockTime = _tokensUnlockTime;\n        // Add sale to the array of sales user registered for.\n        user.salesRegistered.push(msg.sender);\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n\n        uint256 lastTimestamp = block.timestamp < endTimestamp ? block.timestamp : endTimestamp;\n\n        if (lastTimestamp <= pool.lastRewardTimestamp) {\n            lastTimestamp = pool.lastRewardTimestamp;\n        }\n\n        uint256 lpSupply = pool.totalDeposits;\n\n        if (lpSupply == 0) {\n            pool.lastRewardTimestamp = lastTimestamp;\n            return;\n        }\n\n        uint256 nrOfSeconds = lastTimestamp-pool.lastRewardTimestamp;\n        uint256 erc20Reward = nrOfSeconds*rewardPerSecond*pool.allocPoint/totalAllocPoint;\n\n        // Update pool accERC20PerShare\n        pool.accERC20PerShare = pool.accERC20PerShare+erc20Reward*1e36/lpSupply;\n\n        // Update pool lastRewardTimestamp\n        pool.lastRewardTimestamp = lastTimestamp;\n    }\n\n    // Deposit LP tokens to Farm for ERC20 allocation.\n    function deposit(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        uint256 depositAmount = _amount;\n\n        // Update pool\n        updatePool(_pid);\n\n        // Transfer pending amount to user if already staking\n        if (user.amount > 0) {\n            uint256 pendingAmount = user.amount*pool.accERC20PerShare/1e36-user.rewardDebt;\n            erc20Transfer(msg.sender, pendingAmount);\n        }\n\n        // Safe transfer lpToken from user\n        pool.lpToken.safeTransferFrom(address(msg.sender), address(this), _amount);\n        // Add deposit to total deposits\n        pool.totalDeposits = pool.totalDeposits+depositAmount;\n        // Add deposit to user's amount\n        user.amount = user.amount+depositAmount;\n        // Compute reward debt\n        user.rewardDebt = user.amount*pool.accERC20PerShare/1e36;\n        // Emit relevant event\n        emit Deposit(msg.sender, _pid, depositAmount);\n    }\n\n    // Withdraw LP tokens from Farm.\n    function withdraw(uint256 _pid, uint256 _amount) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        require(user.tokensUnlockTime <= block.timestamp, \"Last sale you registered for is not finished yet.\");\n        require(user.amount >= _amount, \"withdraw: can't withdraw more than deposit\");\n\n        // Update pool\n        updatePool(_pid);\n\n        // Compute user's pending amount\n        uint256 pendingAmount = user.amount*pool.accERC20PerShare/1e36-user.rewardDebt;\n\n        // Transfer pending amount to user\n        erc20Transfer(msg.sender, pendingAmount);\n        user.amount = user.amount-_amount;\n        user.rewardDebt = user.amount*pool.accERC20PerShare/1e36;\n\n        // Transfer withdrawal amount to user\n        pool.lpToken.safeTransfer(address(msg.sender), _amount);\n        pool.totalDeposits = pool.totalDeposits-_amount;\n\n        if (_amount > 0) {\n            // Reset the tokens unlock time\n            user.tokensUnlockTime = 0;\n        }\n\n        // Emit relevant event\n        emit Withdraw(msg.sender, _pid, _amount);\n    }\n\n    // Function to compound earnings into deposit\n    function compound(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n\n        require(user.amount >= 0, \"User does not have anything staked.\");\n\n        // Update pool\n        updatePool(_pid);\n\n        uint256 pendingAmount = user.amount*pool.accERC20PerShare/1e36-user.rewardDebt;\n\n        // Increase amount user is staking\n        user.amount = user.amount+pendingAmount;\n        user.rewardDebt = user.amount*pool.accERC20PerShare/1e36;\n\n        // Increase pool's total deposits\n        pool.totalDeposits = pool.totalDeposits+pendingAmount;\n        emit CompoundedEarnings(msg.sender, _pid, pendingAmount, user.amount);\n    }\n\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\n    function emergencyWithdraw(uint256 _pid) public {\n        PoolInfo storage pool = poolInfo[_pid];\n        UserInfo storage user = userInfo[_pid][msg.sender];\n        require(user.tokensUnlockTime <= block.timestamp,\n            \"Emergency withdraw blocked during sale and cooldown period.\");\n\n        // Perform safeTransfer\n        pool.lpToken.safeTransfer(address(msg.sender), user.amount);\n        emit EmergencyWithdraw(msg.sender, _pid, user.amount);\n        // Adapt contract states\n        pool.totalDeposits = pool.totalDeposits-user.amount;\n        user.amount = 0;\n        user.rewardDebt = 0;\n        user.tokensUnlockTime = 0;\n    }\n\n    // Transfer ERC20 and update the required ERC20 to payout all rewards\n    function erc20Transfer(address _to, uint256 _amount) internal {\n        erc20.transfer(_to, _amount);\n        paidOut += _amount;\n    }\n\n    // Function to fetch deposits and earnings at one call for multiple users for passed pool id.\n    function getPendingAndDepositedForUsers(address [] memory users, uint pid)\n    external\n    view\n    returns (uint256 [] memory, uint256 [] memory)\n    {\n        uint256 [] memory deposits = new uint256[](users.length);\n        uint256 [] memory earnings = new uint256[](users.length);\n\n        // Get deposits and earnings for selected users\n        for (uint i = 0; i < users.length; i++) {\n            deposits[i] = deposited(pid, users[i]);\n            earnings[i] = pending(pid, users[i]);\n        }\n\n        return (deposits, earnings);\n    }\n\n\n}\n"},"contracts/sales/C2NSale.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IAdmin.sol\";\nimport \"../interfaces/ISalesFactory.sol\";\nimport \"../interfaces/IAllocationStaking.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\n\ncontract C2NSale {\n    using ECDSA for bytes32;\n    using MessageHashUtils for bytes32;\n    using SafeERC20 for IERC20;\n\n    // Pointer to Allocation staking contract\n    IAllocationStaking public allocationStakingContract;\n    // Pointer to sales factory contract\n    ISalesFactory public factory;\n    // Admin contract\n    IAdmin public admin;\n\n    struct Sale {\n        // Token being sold\n        IERC20 token;\n        // Is sale created\n        bool isCreated;\n        // Are earnings withdrawn\n        bool earningsWithdrawn;\n        // Is leftover withdrawn\n        bool leftoverWithdrawn;\n        // Have tokens been deposited\n        bool tokensDeposited;\n        // Address of sale owner\n        address saleOwner;\n        // Price of the token quoted in ETH\n        uint256 tokenPriceInETH;\n        // Amount of tokens to sell\n        uint256 amountOfTokensToSell;\n        // Total tokens being sold\n        uint256 totalTokensSold;\n        // Total ETH Raised\n        uint256 totalETHRaised;\n        // Sale start time\n        uint256 saleStart;\n        // Sale end time\n        uint256 saleEnd;\n        // When tokens can be withdrawn\n        uint256 tokensUnlockTime;\n        // maxParticipation\n        uint256 maxParticipation;\n    }\n\n    // Participation structure\n    struct Participation {\n        uint256 amountBought;\n        uint256 amountETHPaid;\n        uint256 timeParticipated;\n        bool[] isPortionWithdrawn;\n    }\n\n    struct Registration {\n        uint256 registrationTimeStarts;\n        uint256 registrationTimeEnds;\n        uint256 numberOfRegistrants;\n    }\n\n    // Sale\n    Sale public sale;\n    // Registration\n    Registration public registration;\n    // Number of users participated in the sale.\n    uint256 public numberOfParticipants;\n    // Mapping user to his participation\n    mapping(address => Participation) public userToParticipation;\n    // Mapping if user is registered or not\n    mapping(address => bool) public isRegistered;\n    // mapping if user is participated or not\n    mapping(address => bool) public isParticipated;\n    // Times when portions are getting unlocked\n    uint256[] public vestingPortionsUnlockTime;\n    // Percent of the participation user can withdraw\n    uint256[] public vestingPercentPerPortion;\n    //Precision for percent for portion vesting\n    uint256 public portionVestingPrecision;\n    // Max vesting time shift\n    uint256 public maxVestingTimeShift;\n\n    // Restricting calls only to sale owner\n    modifier onlySaleOwner() {\n        require(msg.sender == sale.saleOwner, \"OnlySaleOwner:: Restricted\");\n        _;\n    }\n\n    modifier onlyAdmin() {\n        require(\n            admin.isAdmin(msg.sender),\n            \"Only admin can call this function.\"\n        );\n        _;\n    }\n\n    // Events\n    event TokensSold(address user, uint256 amount);\n    event UserRegistered(address user);\n    event TokenPriceSet(uint256 newPrice);\n    event MaxParticipationSet(uint256 maxParticipation);\n    event TokensWithdrawn(address user, uint256 amount);\n    event SaleCreated(\n        address saleOwner,\n        uint256 tokenPriceInETH,\n        uint256 amountOfTokensToSell,\n        uint256 saleEnd\n    );\n    event StartTimeSet(uint256 startTime);\n    event RegistrationTimeSet(\n        uint256 registrationTimeStarts,\n        uint256 registrationTimeEnds\n    );\n\n    // Constructor, always initialized through SalesFactory\n    constructor(address _admin, address _allocationStaking) {\n        require(_admin != address(0));\n        require(_allocationStaking != address(0));\n        admin = IAdmin(_admin);\n        factory = ISalesFactory(msg.sender);\n        allocationStakingContract = IAllocationStaking(_allocationStaking);\n    }\n\n    /// @notice         Function to set vesting params\n    function setVestingParams(\n        uint256[] memory _unlockingTimes,\n        uint256[] memory _percents,\n        uint256 _maxVestingTimeShift\n    ) external onlyAdmin {\n        require(\n            vestingPercentPerPortion.length == 0 &&\n            vestingPortionsUnlockTime.length == 0\n        );\n        require(_unlockingTimes.length == _percents.length);\n        require(portionVestingPrecision > 0, \"Safeguard for making sure setSaleParams get first called.\");\n        require(_maxVestingTimeShift <= 30 days, \"Maximal shift is 30 days.\");\n\n        // Set max vesting time shift\n        maxVestingTimeShift = _maxVestingTimeShift;\n\n        uint256 sum;\n\n        for (uint256 i = 0; i < _unlockingTimes.length; i++) {\n            vestingPortionsUnlockTime.push(_unlockingTimes[i]);\n            vestingPercentPerPortion.push(_percents[i]);\n            sum += _percents[i];\n        }\n\n        require(sum == portionVestingPrecision, \"Percent distribution issue.\");\n    }\n\n    function shiftVestingUnlockingTimes(uint256 timeToShift)\n    external\n    onlyAdmin\n    {\n        require(\n            timeToShift > 0 && timeToShift < maxVestingTimeShift,\n            \"Shift must be nonzero and smaller than maxVestingTimeShift.\"\n        );\n\n        // Time can be shifted only once.\n        maxVestingTimeShift = 0;\n\n        for (uint256 i = 0; i < vestingPortionsUnlockTime.length; i++) {\n            vestingPortionsUnlockTime[i] = vestingPortionsUnlockTime[i]+ timeToShift;\n        }\n    }\n\n    /// @notice     Admin function to set sale parameters\n    function setSaleParams(\n        address _token,\n        address _saleOwner,\n        uint256 _tokenPriceInETH,\n        uint256 _amountOfTokensToSell,\n        uint256 _saleEnd,\n        uint256 _tokensUnlockTime,\n        uint256 _portionVestingPrecision,\n        uint256 _maxParticipation\n    ) external onlyAdmin {\n        require(!sale.isCreated, \"setSaleParams: Sale is already created.\");\n        require(\n            _saleOwner != address(0),\n            \"setSaleParams: Sale owner address can not be 0.\"\n        );\n        require(\n            _tokenPriceInETH != 0 &&\n            _amountOfTokensToSell != 0 &&\n            _saleEnd > block.timestamp &&\n            _tokensUnlockTime > block.timestamp &&\n            _maxParticipation > 0,\n            \"setSaleParams: Bad input\"\n        );\n        require(_portionVestingPrecision >= 100, \"Should be at least 100\");\n\n        // Set params\n        sale.token = IERC20(_token);\n        sale.isCreated = true;\n        sale.saleOwner = _saleOwner;\n        sale.tokenPriceInETH = _tokenPriceInETH;\n        sale.amountOfTokensToSell = _amountOfTokensToSell;\n        sale.saleEnd = _saleEnd;\n        sale.tokensUnlockTime = _tokensUnlockTime;\n        sale.maxParticipation = _maxParticipation;\n\n        // Set portion vesting precision\n        portionVestingPrecision = _portionVestingPrecision;\n        // Emit event\n        emit SaleCreated(\n            sale.saleOwner,\n            sale.tokenPriceInETH,\n            sale.amountOfTokensToSell,\n            sale.saleEnd\n        );\n    }\n\n    // @notice     Function to retroactively set sale token address, can be called only once,\n    //             after initial contract creation has passed. Added as an options for teams which\n    //             are not having token at the moment of sale launch.\n    function setSaleToken(\n        address saleToken\n    )\n    external\n    onlyAdmin\n    {\n        require(address(sale.token) == address(0));\n        sale.token = IERC20(saleToken);\n    }\n\n\n    /// @notice     Function to set registration period parameters\n    function setRegistrationTime(\n        uint256 _registrationTimeStarts,\n        uint256 _registrationTimeEnds\n    ) external onlyAdmin {\n        require(sale.isCreated);\n        require(registration.registrationTimeStarts == 0);\n        require(\n            _registrationTimeStarts >= block.timestamp &&\n            _registrationTimeEnds > _registrationTimeStarts\n        );\n        require(_registrationTimeEnds < sale.saleEnd);\n\n        if (sale.saleStart > 0) {\n            require(_registrationTimeEnds < sale.saleStart, \"registrationTimeEnds >= sale.saleStart is not allowed\");\n        }\n\n        registration.registrationTimeStarts = _registrationTimeStarts;\n        registration.registrationTimeEnds = _registrationTimeEnds;\n\n        emit RegistrationTimeSet(\n            registration.registrationTimeStarts,\n            registration.registrationTimeEnds\n        );\n    }\n\n    function setSaleStart(\n        uint256 starTime\n    ) external onlyAdmin {\n        require(sale.isCreated, \"sale is not created.\");\n        require(sale.saleStart == 0, \"setSaleStart: starTime is set already.\");\n        require(starTime > registration.registrationTimeEnds, \"start time should greater than registrationTimeEnds.\");\n        require(starTime < sale.saleEnd, \"start time should less than saleEnd time\");\n        require(starTime >= block.timestamp, \"start time should be in the future.\");\n        sale.saleStart = starTime;\n\n        // Fire event\n        emit StartTimeSet(sale.saleStart);\n    }\n\n    /// @notice     Registration for sale.\n    /// @param      signature is the message signed by the backend\n    function registerForSale(bytes memory signature, uint256 pid)\n    external\n    {\n        require(\n            block.timestamp >= registration.registrationTimeStarts &&\n            block.timestamp <= registration.registrationTimeEnds,\n            \"Registration gate is closed.\"\n        );\n        require(\n            checkRegistrationSignature(signature, msg.sender),\n            \"Invalid signature\"\n        );\n        require(\n            !isRegistered[msg.sender],\n            \"User can not register twice.\"\n        );\n        isRegistered[msg.sender] = true;\n\n        // Lock users stake\n        allocationStakingContract.setTokensUnlockTime(\n            pid,\n            msg.sender,\n            sale.saleEnd\n        );\n\n        // Increment number of registered users\n        registration.numberOfRegistrants++;\n        // Emit Registration event\n        emit UserRegistered(msg.sender);\n    }\n\n    /// @notice     Admin function, to update token price before sale to match the closest $ desired rate.\n    /// @dev        This will be updated with an oracle during the sale every N minutes, so the users will always\n    ///             pay initialy set $ value of the token. This is to reduce reliance on the ETH volatility.\n    function updateTokenPriceInETH(uint256 price) external onlyAdmin {\n        require(price > 0, \"Price can not be 0.\");\n        // Allowing oracle to run and change the sale value\n        sale.tokenPriceInETH = price;\n        emit TokenPriceSet(price);\n    }\n\n    /// @notice     Admin function to postpone the sale\n    function postponeSale(uint256 timeToShift) external onlyAdmin {\n        require(\n            block.timestamp < sale.saleStart,\n            \"sale already started.\"\n        );\n        //  postpone registration start time\n        sale.saleStart = sale.saleStart+timeToShift;\n        require(\n            sale.saleStart + timeToShift < sale.saleEnd,\n            \"Start time can not be greater than end time.\"\n        );\n    }\n\n    /// @notice     Function to extend registration period\n    function extendRegistrationPeriod(uint256 timeToAdd) external onlyAdmin {\n        require(\n            registration.registrationTimeEnds+timeToAdd <\n            sale.saleStart,\n            \"Registration period overflows sale start.\"\n        );\n\n        registration.registrationTimeEnds = registration.registrationTimeEnds+timeToAdd;\n    }\n\n    /// @notice     Admin function to set max participation before sale start\n    function setCap(uint256 cap)\n    external\n    onlyAdmin\n    {\n        require(\n            block.timestamp < sale.saleStart,\n            \"sale already started.\"\n        );\n\n        require(cap > 0, \"Can't set max participation to 0\");\n\n        sale.maxParticipation = cap;\n\n        emit MaxParticipationSet(sale.maxParticipation);\n    }\n\n    // Function for owner to deposit tokens, can be called only once.\n    function depositTokens() external onlySaleOwner {\n        require(\n            !sale.tokensDeposited, \"Deposit can be done only once\"\n        );\n\n        sale.tokensDeposited = true;\n\n        sale.token.safeTransferFrom(\n            msg.sender,\n            address(this),\n            sale.amountOfTokensToSell\n        );\n    }\n\n    // Function to participate in the sales\n    function participate(\n        bytes memory signature,\n        uint256 amount\n    ) external payable {\n\n        require(\n            amount <= sale.maxParticipation,\n            \"Overflowing maximal participation for sale.\"\n        );\n\n        // User must have registered for the round in advance\n        require(\n            isRegistered[msg.sender],\n            \"Not registered for this sale.\"\n        );\n\n        // Verify the signature\n        require(\n            checkParticipationSignature(\n                signature,\n                msg.sender,\n                amount\n            ),\n            \"Invalid signature. Verification failed\"\n        );\n\n        // Verify the timestamp\n        require(\n            block.timestamp >= sale.saleStart &&\n            block.timestamp < sale.saleEnd, \"sale didn't start or it's ended.\"\n        );\n\n        // Check user haven't participated before\n        require(!isParticipated[msg.sender], \"User can participate only once.\");\n\n        // Disallow contract calls.\n        require(msg.sender == tx.origin, \"Only direct contract calls.\");\n\n        // Compute the amount of tokens user is buying\n        uint256 amountOfTokensBuying =\n        (msg.value)*uint(10) ** IERC20Metadata(address(sale.token)).decimals()/sale.tokenPriceInETH;\n\n        // Must buy more than 0 tokens\n        require(amountOfTokensBuying > 0, \"Can't buy 0 tokens\");\n\n        // Check in terms of user allo\n        require(\n            amountOfTokensBuying <= amount,\n            \"Trying to buy more than allowed.\"\n        );\n\n        // Increase amount of sold tokens\n        sale.totalTokensSold = sale.totalTokensSold+amountOfTokensBuying;\n\n        // Increase amount of ETH raised\n        sale.totalETHRaised = sale.totalETHRaised+msg.value;\n\n        bool[] memory _isPortionWithdrawn = new bool[](\n            vestingPortionsUnlockTime.length\n        );\n\n        // Create participation object\n        Participation memory p = Participation({\n        amountBought : amountOfTokensBuying,\n        amountETHPaid : msg.value,\n        timeParticipated : block.timestamp,\n        isPortionWithdrawn : _isPortionWithdrawn\n        });\n\n        // Add participation for user.\n        userToParticipation[msg.sender] = p;\n        // Mark user is participated\n        isParticipated[msg.sender] = true;\n        // Increment number of participants in the Sale.\n        numberOfParticipants++;\n\n        emit TokensSold(msg.sender, amountOfTokensBuying);\n    }\n\n    /// Users can claim their participation\n    function withdrawTokens(uint256 portionId) external {\n        require(\n            block.timestamp >= sale.tokensUnlockTime,\n            \"Tokens can not be withdrawn yet.\"\n        );\n        require(\n            portionId < vestingPercentPerPortion.length,\n            \"Portion id out of range.\"\n        );\n\n        Participation storage p = userToParticipation[msg.sender];\n\n        if (\n            !p.isPortionWithdrawn[portionId] &&\n        vestingPortionsUnlockTime[portionId] <= block.timestamp\n        ) {\n            p.isPortionWithdrawn[portionId] = true;\n            uint256 amountWithdrawing = p.amountBought*vestingPercentPerPortion[portionId]/portionVestingPrecision;\n\n            // Withdraw percent which is unlocked at that portion\n            if (amountWithdrawing > 0) {\n                sale.token.safeTransfer(msg.sender, amountWithdrawing);\n                emit TokensWithdrawn(msg.sender, amountWithdrawing);\n            }\n        } else {\n            revert(\"Tokens already withdrawn or portion not unlocked yet.\");\n        }\n    }\n\n    // Expose function where user can withdraw multiple unlocked portions at once.\n    function withdrawMultiplePortions(uint256 [] calldata portionIds) external {\n        uint256 totalToWithdraw = 0;\n\n        Participation storage p = userToParticipation[msg.sender];\n\n        for (uint i = 0; i < portionIds.length; i++) {\n            uint256 portionId = portionIds[i];\n            require(portionId < vestingPercentPerPortion.length);\n\n            if (\n                !p.isPortionWithdrawn[portionId] &&\n            vestingPortionsUnlockTime[portionId] <= block.timestamp\n            ) {\n                p.isPortionWithdrawn[portionId] = true;\n                uint256 amountWithdrawing = p.amountBought*vestingPercentPerPortion[portionId]/portionVestingPrecision;\n                // Withdraw percent which is unlocked at that portion\n                totalToWithdraw = totalToWithdraw+amountWithdrawing;\n            }\n        }\n\n        if (totalToWithdraw > 0) {\n            sale.token.safeTransfer(msg.sender, totalToWithdraw);\n            emit TokensWithdrawn(msg.sender, totalToWithdraw);\n        }\n    }\n\n    // Internal function to handle safe transfer\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success,) = to.call{value : value}(new bytes(0));\n        require(success);\n    }\n\n    /// Function to withdraw all the earnings and the leftover of the sale contract.\n    function withdrawEarningsAndLeftover() external onlySaleOwner {\n        withdrawEarningsInternal();\n        withdrawLeftoverInternal();\n    }\n\n    // Function to withdraw only earnings\n    function withdrawEarnings() external onlySaleOwner {\n        withdrawEarningsInternal();\n    }\n\n    // Function to withdraw only leftover\n    function withdrawLeftover() external onlySaleOwner {\n        withdrawLeftoverInternal();\n    }\n\n    // function to withdraw earnings\n    function withdrawEarningsInternal() internal {\n        // Make sure sale ended\n        require(block.timestamp >= sale.saleEnd, \"sale is not ended yet.\");\n\n        // Make sure owner can't withdraw twice\n        require(!sale.earningsWithdrawn, \"owner can't withdraw earnings twice\");\n        sale.earningsWithdrawn = true;\n        // Earnings amount of the owner in ETH\n        uint256 totalProfit = sale.totalETHRaised;\n\n        safeTransferETH(msg.sender, totalProfit);\n    }\n\n    // Function to withdraw leftover\n    function withdrawLeftoverInternal() internal {\n        // Make sure sale ended\n        require(block.timestamp >= sale.saleEnd, \"sale is not ended yet.\");\n\n        // Make sure owner can't withdraw twice\n        require(!sale.leftoverWithdrawn, \"owner can't withdraw leftover twice\");\n        sale.leftoverWithdrawn = true;\n\n        // Amount of tokens which are not sold\n        uint256 leftover = sale.amountOfTokensToSell-sale.totalTokensSold;\n\n        if (leftover > 0) {\n            sale.token.safeTransfer(msg.sender, leftover);\n        }\n    }\n\n    /// @notice     Check signature user submits for registration.\n    /// @param      signature is the message signed by the trusted entity (backend)\n    /// @param      user is the address of user which is registering for sale\n    function checkRegistrationSignature(\n        bytes memory signature,\n        address user\n    ) public view returns (bool) {\n        bytes32 hash = keccak256(\n            abi.encodePacked(user, address(this))\n        );\n        bytes32 messageHash = hash.toEthSignedMessageHash();\n        return admin.isAdmin(messageHash.recover(signature));\n    }\n\n    // Function to check if admin was the message signer\n    function checkParticipationSignature(\n        bytes memory signature,\n        address user,\n        uint256 amount\n    ) public view returns (bool) {\n        return\n        admin.isAdmin(\n            getParticipationSigner(\n                signature,\n                user,\n                amount\n            )\n        );\n    }\n\n    /// @notice     Check who signed the message\n    /// @param      signature is the message allowing user to participate in sale\n    /// @param      user is the address of user for which we're signing the message\n    /// @param      amount is the maximal amount of tokens user can buy\n    function getParticipationSigner(\n        bytes memory signature,\n        address user,\n        uint256 amount\n    ) public view returns (address) {\n        bytes32 hash = keccak256(\n            abi.encodePacked(\n                user,\n                amount,\n                address(this)\n            )\n        );\n        bytes32 messageHash = hash.toEthSignedMessageHash();\n        return messageHash.recover(signature);\n    }\n\n    /// @notice     Function to get participation for passed user address\n    function getParticipation(address _user)\n    external\n    view\n    returns (\n        uint256,\n        uint256,\n        uint256,\n        bool[] memory\n    )\n    {\n        Participation memory p = userToParticipation[_user];\n        return (\n        p.amountBought,\n        p.amountETHPaid,\n        p.timeParticipated,\n        p.isPortionWithdrawn\n        );\n    }\n\n    /// @notice     Function to get number of registered users for sale\n    function getNumberOfRegisteredUsers() external view returns (uint256) {\n        return registration.numberOfRegistrants;\n    }\n\n    /// @notice     Function to get all info about vesting.\n    function getVestingInfo()\n    external\n    view\n    returns (uint256[] memory, uint256[] memory)\n    {\n        return (vestingPortionsUnlockTime, vestingPercentPerPortion);\n    }\n\n    // Function to act as a fallback and handle receiving ETH.\n    receive() external payable {\n\n    }\n}\n"},"contracts/sales/SalesFactory.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IAdmin.sol\";\nimport \"./C2NSale.sol\";\n\n\ncontract SalesFactory {\n\n    IAdmin public admin;\n    address public allocationStaking;\n\n    mapping (address => bool) public isSaleCreatedThroughFactory;\n\n    mapping(address => address) public saleOwnerToSale;\n    mapping(address => address) public tokenToSale;\n\n    // Expose so query can be possible only by position as well\n    address [] public allSales;\n\n    event SaleDeployed(address saleContract);\n    event SaleOwnerAndTokenSetInFactory(address sale, address saleOwner, address saleToken);\n\n    modifier onlyAdmin {\n        require(admin.isAdmin(msg.sender), \"Only Admin can deploy sales\");\n        _;\n    }\n\n    constructor (address _adminContract, address _allocationStaking)  {\n        admin = IAdmin(_adminContract);\n        allocationStaking = _allocationStaking;\n    }\n\n    // Set allocation staking contract address.\n    function setAllocationStaking(address _allocationStaking) public onlyAdmin {\n        require(_allocationStaking != address(0));\n        allocationStaking = _allocationStaking;\n    }\n\n\n    function deploySale()\n    external\n    onlyAdmin\n    {\n        C2NSale sale = new C2NSale(address(admin), allocationStaking);\n\n        isSaleCreatedThroughFactory[address(sale)] = true;\n        allSales.push(address(sale));\n\n        emit SaleDeployed(address(sale));\n    }\n\n    // Function to return number of pools deployed\n    function getNumberOfSalesDeployed() external view returns (uint) {\n        return allSales.length;\n    }\n\n    // Function\n    function getLastDeployedSale() external view returns (address) {\n        //\n        if(allSales.length > 0) {\n            return allSales[allSales.length - 1];\n        }\n        return address(0);\n    }\n\n\n    // Function to get all sales\n    function getAllSales(uint startIndex, uint endIndex) external view returns (address[] memory) {\n        require(endIndex > startIndex, \"Bad input\");\n\n        address[] memory sales = new address[](endIndex - startIndex);\n        uint index = 0;\n\n        for(uint i = startIndex; i < endIndex; i++) {\n            sales[index] = allSales[i];\n            index++;\n        }\n\n        return sales;\n    }\n\n}\n"},"contracts/token/Airdrop.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n\n\ncontract Airdrop {\n\n\n    IERC20 public airdropToken;\n    uint256 public totalTokensWithdrawn;\n\n    mapping (address => bool) public wasClaimed;\n    uint256 public constant TOKENS_PER_CLAIM = 100 * 10**18;\n\n    event TokensAirdropped(address beneficiary);\n\n    // Constructor, initial setup\n    constructor(address _airdropToken) {\n        require(_airdropToken != address(0));\n\n        airdropToken = IERC20(_airdropToken);\n    }\n\n    // Function to withdraw tokens.\n    function withdrawTokens() public {\n        require(msg.sender == tx.origin, \"Require that message sender is tx-origin.\");\n\n        address beneficiary = msg.sender;\n\n        require(!wasClaimed[beneficiary], \"Already claimed!\");\n        wasClaimed[msg.sender] = true;\n\n        bool status = airdropToken.transfer(beneficiary, TOKENS_PER_CLAIM);\n        require(status, \"Token transfer status is false.\");\n\n        totalTokensWithdrawn = totalTokensWithdrawn+TOKENS_PER_CLAIM;\n        emit TokensAirdropped(beneficiary);\n    }\n\n}\n"},"contracts/token/C2NToken.sol":{"content":"//SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n \n\ncontract C2NToken is ERC20 {\n\n    uint8 private _decimals;\n\n    constructor (string memory name_, string memory symbol_, uint256 totalSupply_, uint8 decimals_) ERC20( name_, symbol_) {\n        _decimals=decimals_;\n        _mint(_msgSender(), totalSupply_);\n    }\n\n    function decimals() public view override returns (uint8){\n        return _decimals;\n    }\n    \n    function burn(uint amount) external {\n        _burn(_msgSender(), amount);\n    }\n\n    function mint(uint amount) external {\n        _mint(_msgSender(), amount);\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","storageLayout"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[494],"Initializable":[448],"OwnableUpgradeable":[194]},"id":195,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":495,"src":"128:67:0","symbolAliases":[{"foreign":{"id":2,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"136:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":195,"sourceUnit":449,"src":"196:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"204:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["789:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"789:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"789:13:0"},{"baseName":{"id":9,"name":"ContextUpgradeable","nameLocations":["804:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"804:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"804:18:0"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"261:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":194,"linearizedBaseContracts":[194,494,448],"name":"OwnableUpgradeable","nameLocation":"767:18:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"829:65:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_owner","nameLocation":"939:6:0","nodeType":"VariableDeclaration","scope":14,"src":"931:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:0","nodeType":"StructDefinition","scope":194,"src":"899:53:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:0","nodeType":"VariableDeclaration","scope":194,"src":"1069:116:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:0","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1270:81:0","statements":[{"AST":{"nativeSrc":"1289:56:0","nodeType":"YulBlock","src":"1289:56:0","statements":[{"nativeSrc":"1303:32:0","nodeType":"YulAssignment","src":"1303:32:0","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:0","nodeType":"YulIdentifier","src":"1313:22:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:0","nodeType":"YulIdentifier","src":"1303:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1303:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1313:22:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1280:65:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1219:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1267:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1244:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"OwnableStorage","nameLocations":["1244:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1244:14:0"},"referencedDeclaration":14,"src":"1244:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:0"},"scope":194,"src":"1192:159:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":26,"nodeType":"StructuredDocumentation","src":"1357:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":30,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:0","nodeType":"ErrorDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28,"mutability":"mutable","name":"account","nameLocation":"1488:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:0"},"src":"1447:50:0"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1503:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":35,"name":"OwnableInvalidOwner","nameLocation":"1596:19:0","nodeType":"ErrorDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"owner","nameLocation":"1624:5:0","nodeType":"VariableDeclaration","scope":35,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:0"},"src":"1590:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":41,"name":"OwnershipTransferred","nameLocation":"1643:20:0","nodeType":"EventDefinition","parameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:0","nodeType":"VariableDeclaration","scope":41,"src":"1664:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:0","nodeType":"VariableDeclaration","scope":41,"src":"1695:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:0"},"src":"1637:84:0"},{"body":{"id":53,"nodeType":"Block","src":"1919:55:0","statements":[{"expression":{"arguments":[{"id":50,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1954:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":49,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"1929:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1929:38:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"1727:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":54,"implemented":true,"kind":"function","modifiers":[{"id":47,"kind":"modifierInvocation","modifierName":{"id":46,"name":"onlyInitializing","nameLocations":["1902:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"1902:16:0"},"nodeType":"ModifierInvocation","src":"1902:16:0"}],"name":"__Ownable_init","nameLocation":"1856:14:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:0","nodeType":"VariableDeclaration","scope":54,"src":"1871:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":43,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"1919:0:0"},"scope":194,"src":"1847:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":80,"nodeType":"Block","src":"2062:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":66,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2076:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":63,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:0","typeDescriptions":{}}},"id":65,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":75,"nodeType":"IfStatement","src":"2072:95:0","trueBody":{"id":74,"nodeType":"Block","src":"2104:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":70,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":69,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":68,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:0","typeDescriptions":{}}},"id":71,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":67,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2125:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":73,"nodeType":"RevertStatement","src":"2118:38:0"}]}},{"expression":{"arguments":[{"id":77,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":56,"src":"2195:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2176:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":79,"nodeType":"ExpressionStatement","src":"2176:32:0"}]},"id":81,"implemented":true,"kind":"function","modifiers":[{"id":59,"kind":"modifierInvocation","modifierName":{"id":58,"name":"onlyInitializing","nameLocations":["2045:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"2045:16:0"},"nodeType":"ModifierInvocation","src":"2045:16:0"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:0","nodeType":"FunctionDefinition","parameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:0","nodeType":"VariableDeclaration","scope":81,"src":"2014:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":55,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:0"},"returnParameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"2062:0:0"},"scope":194,"src":"1980:235:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":88,"nodeType":"Block","src":"2324:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":84,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"2334:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":85,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":86,"nodeType":"ExpressionStatement","src":"2334:13:0"},{"id":87,"nodeType":"PlaceholderStatement","src":"2357:1:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2221:77:0","text":" @dev Throws if called by any account other than the owner."},"id":89,"name":"onlyOwner","nameLocation":"2312:9:0","nodeType":"ModifierDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[],"src":"2321:2:0"},"src":"2303:62:0","virtual":false,"visibility":"internal"},{"body":{"id":104,"nodeType":"Block","src":"2496:89:0","statements":[{"assignments":[97],"declarations":[{"constant":false,"id":97,"mutability":"mutable","name":"$","nameLocation":"2529:1:0","nodeType":"VariableDeclaration","scope":104,"src":"2506:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":96,"nodeType":"UserDefinedTypeName","pathNode":{"id":95,"name":"OwnableStorage","nameLocations":["2506:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2506:14:0"},"referencedDeclaration":14,"src":"2506:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":100,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":98,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2533:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:0"},{"expression":{"expression":{"id":101,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"2570:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2570:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":94,"id":103,"nodeType":"Return","src":"2563:15:0"}]},"documentation":{"id":90,"nodeType":"StructuredDocumentation","src":"2371:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":105,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:0","nodeType":"FunctionDefinition","parameters":{"id":91,"nodeType":"ParameterList","parameters":[],"src":"2455:2:0"},"returnParameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":93,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":105,"src":"2487:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:0"},"scope":194,"src":"2441:144:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":121,"nodeType":"Block","src":"2703:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":109,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":105,"src":"2717:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":111,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2728:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2713:101:0","trueBody":{"id":119,"nodeType":"Block","src":"2742:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":115,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"2790:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2763:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":118,"nodeType":"RevertStatement","src":"2756:47:0"}]}}]},"documentation":{"id":106,"nodeType":"StructuredDocumentation","src":"2591:62:0","text":" @dev Throws if the sender is not the owner."},"id":122,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:0","nodeType":"FunctionDefinition","parameters":{"id":107,"nodeType":"ParameterList","parameters":[],"src":"2678:2:0"},"returnParameters":{"id":108,"nodeType":"ParameterList","parameters":[],"src":"2703:0:0"},"scope":194,"src":"2658:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":135,"nodeType":"Block","src":"3209:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":129,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:0","typeDescriptions":{}}},"id":132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":128,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3219:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":134,"nodeType":"ExpressionStatement","src":"3219:30:0"}]},"documentation":{"id":123,"nodeType":"StructuredDocumentation","src":"2826:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":136,"implemented":true,"kind":"function","modifiers":[{"id":126,"kind":"modifierInvocation","modifierName":{"id":125,"name":"onlyOwner","nameLocations":["3199:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3199:9:0"},"nodeType":"ModifierInvocation","src":"3199:9:0"}],"name":"renounceOwnership","nameLocation":"3164:17:0","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"3181:2:0"},"returnParameters":{"id":127,"nodeType":"ParameterList","parameters":[],"src":"3209:0:0"},"scope":194,"src":"3155:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":163,"nodeType":"Block","src":"3475:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":144,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3489:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:0","typeDescriptions":{}}},"id":148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":158,"nodeType":"IfStatement","src":"3485:91:0","trueBody":{"id":157,"nodeType":"Block","src":"3513:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":151,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:0","typeDescriptions":{}}},"id":154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":150,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"3534:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":156,"nodeType":"RevertStatement","src":"3527:38:0"}]}},{"expression":{"arguments":[{"id":160,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":139,"src":"3604:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":159,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"3585:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":162,"nodeType":"ExpressionStatement","src":"3585:28:0"}]},"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"3262:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":164,"implemented":true,"kind":"function","modifiers":[{"id":142,"kind":"modifierInvocation","modifierName":{"id":141,"name":"onlyOwner","nameLocations":["3465:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3465:9:0"},"nodeType":"ModifierInvocation","src":"3465:9:0"}],"name":"transferOwnership","nameLocation":"3414:17:0","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":139,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:0","nodeType":"VariableDeclaration","scope":164,"src":"3432:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":138,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"3475:0:0"},"scope":194,"src":"3405:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":192,"nodeType":"Block","src":"3837:185:0","statements":[{"assignments":[172],"declarations":[{"constant":false,"id":172,"mutability":"mutable","name":"$","nameLocation":"3870:1:0","nodeType":"VariableDeclaration","scope":192,"src":"3847:24:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":171,"nodeType":"UserDefinedTypeName","pathNode":{"id":170,"name":"OwnableStorage","nameLocations":["3847:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3847:14:0"},"referencedDeclaration":14,"src":"3847:14:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":175,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":173,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3874:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:0"},{"assignments":[177],"declarations":[{"constant":false,"id":177,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:0","nodeType":"VariableDeclaration","scope":192,"src":"3904:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":180,"initialValue":{"expression":{"id":178,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3923:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":179,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3923:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:0"},{"expression":{"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":181,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3941:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$14_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:0","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3941:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":184,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3952:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":186,"nodeType":"ExpressionStatement","src":"3941:19:0"},{"eventCall":{"arguments":[{"id":188,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":177,"src":"3996:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":189,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"4006:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":187,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"3975:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":191,"nodeType":"EmitStatement","src":"3970:45:0"}]},"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"3626:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":193,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:0","nodeType":"FunctionDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:0","nodeType":"VariableDeclaration","scope":193,"src":"3802:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:0"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[],"src":"3837:0:0"},"scope":194,"src":"3774:248:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":195,"src":"749:3275:0","usedErrors":[30,35,211,214],"usedEvents":[41,219]}],"src":"102:3923:0"},"id":0},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[448]},"id":449,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":196,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":197,"nodeType":"StructuredDocumentation","src":"139:2209:1","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":448,"linearizedBaseContracts":[448],"name":"Initializable","nameLocation":"2367:13:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":198,"nodeType":"StructuredDocumentation","src":"2387:293:1","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":205,"members":[{"constant":false,"id":201,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:1","nodeType":"VariableDeclaration","scope":205,"src":"2813:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":200,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:1","nodeType":"VariableDeclaration","scope":205,"src":"2950:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":203,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:1","nodeType":"StructDefinition","scope":448,"src":"2685:290:1","visibility":"public"},{"constant":true,"id":208,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:1","nodeType":"VariableDeclaration","scope":448,"src":"3098:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:1","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3220:60:1","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":211,"name":"InvalidInitialization","nameLocation":"3291:21:1","nodeType":"ErrorDefinition","parameters":{"id":210,"nodeType":"ParameterList","parameters":[],"src":"3312:2:1"},"src":"3285:30:1"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"3321:57:1","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":214,"name":"NotInitializing","nameLocation":"3389:15:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[],"src":"3404:2:1"},"src":"3383:24:1"},{"anonymous":false,"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3413:90:1","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":219,"name":"Initialized","nameLocation":"3514:11:1","nodeType":"EventDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:1","nodeType":"VariableDeclaration","scope":219,"src":"3526:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":216,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:1"},"src":"3508:34:1"},{"body":{"id":301,"nodeType":"Block","src":"4092:1081:1","statements":[{"assignments":[224],"declarations":[{"constant":false,"id":224,"mutability":"mutable","name":"$","nameLocation":"4187:1:1","nodeType":"VariableDeclaration","scope":301,"src":"4158:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":223,"nodeType":"UserDefinedTypeName","pathNode":{"id":222,"name":"InitializableStorage","nameLocations":["4158:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"4158:20:1"},"referencedDeclaration":205,"src":"4158:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":227,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"4191:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:1"},{"assignments":[229],"declarations":[{"constant":false,"id":229,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:1","nodeType":"VariableDeclaration","scope":301,"src":"4279:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":228,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":233,"initialValue":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:1","subExpression":{"expression":{"id":230,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4302:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":231,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"4302:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:1"},{"assignments":[235],"declarations":[{"constant":false,"id":235,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:1","nodeType":"VariableDeclaration","scope":301,"src":"4327:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":234,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":238,"initialValue":{"expression":{"id":236,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4348:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":237,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4348:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:1"},{"assignments":[240],"declarations":[{"constant":false,"id":240,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4706:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":239,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":246,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":241,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4726:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":244,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4746:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:1"},{"assignments":[248],"declarations":[{"constant":false,"id":248,"mutability":"mutable","name":"construction","nameLocation":"4775:12:1","nodeType":"VariableDeclaration","scope":301,"src":"4770:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":247,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":261,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":249,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":235,"src":"4790:11:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":254,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$448","typeString":"contract Initializable"}],"id":253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:1","memberName":"code","nodeType":"MemberAccess","src":"4810:18:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:1","memberName":"length","nodeType":"MemberAccess","src":"4810:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:1","subExpression":{"id":262,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":240,"src":"4856:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:1","subExpression":{"id":264,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"4873:12:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":271,"nodeType":"IfStatement","src":"4851:91:1","trueBody":{"id":270,"nodeType":"Block","src":"4887:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":267,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"4908:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":269,"nodeType":"RevertStatement","src":"4901:30:1"}]}},{"expression":{"id":276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":272,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"4951:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"4951:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":277,"nodeType":"ExpressionStatement","src":"4951:18:1"},{"condition":{"id":278,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"4983:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":286,"nodeType":"IfStatement","src":"4979:67:1","trueBody":{"id":285,"nodeType":"Block","src":"4999:47:1","statements":[{"expression":{"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":279,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5013:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":281,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5013:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":284,"nodeType":"ExpressionStatement","src":"5013:22:1"}]}},{"id":287,"nodeType":"PlaceholderStatement","src":"5055:1:1"},{"condition":{"id":288,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5070:14:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":300,"nodeType":"IfStatement","src":"5066:101:1","trueBody":{"id":299,"nodeType":"Block","src":"5086:81:1","statements":[{"expression":{"id":293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":289,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"5100:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":291,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"5100:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":294,"nodeType":"ExpressionStatement","src":"5100:23:1"},{"eventCall":{"arguments":[{"hexValue":"31","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":295,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"5142:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"5137:19:1"}]}}]},"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3548:516:1","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":302,"name":"initializer","nameLocation":"4078:11:1","nodeType":"ModifierDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[],"src":"4089:2:1"},"src":"4069:1104:1","virtual":false,"visibility":"internal"},{"body":{"id":348,"nodeType":"Block","src":"6291:392:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"6386:1:1","nodeType":"VariableDeclaration","scope":348,"src":"6357:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"InitializableStorage","nameLocations":["6357:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"6357:20:1"},"referencedDeclaration":205,"src":"6357:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"6390:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:1"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":313,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6431:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6431:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6450:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6450:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":317,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6468:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":324,"nodeType":"IfStatement","src":"6427:105:1","trueBody":{"id":323,"nodeType":"Block","src":"6477:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":320,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"6498:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":322,"nodeType":"RevertStatement","src":"6491:30:1"}]}},{"expression":{"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":325,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6541:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"6541:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":328,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6558:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":330,"nodeType":"ExpressionStatement","src":"6541:24:1"},{"expression":{"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":331,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6575:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":333,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6575:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":336,"nodeType":"ExpressionStatement","src":"6575:22:1"},{"id":337,"nodeType":"PlaceholderStatement","src":"6607:1:1"},{"expression":{"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":338,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"6618:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":340,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"6618:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":343,"nodeType":"ExpressionStatement","src":"6618:23:1"},{"eventCall":{"arguments":[{"id":345,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"6668:7:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":344,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"6656:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"EmitStatement","src":"6651:25:1"}]},"documentation":{"id":303,"nodeType":"StructuredDocumentation","src":"5179:1068:1","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":349,"name":"reinitializer","nameLocation":"6261:13:1","nodeType":"ModifierDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"version","nameLocation":"6282:7:1","nodeType":"VariableDeclaration","scope":349,"src":"6275:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":304,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:1"},"src":"6252:431:1","virtual":false,"visibility":"internal"},{"body":{"id":356,"nodeType":"Block","src":"6921:48:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":352,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"6931:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"6931:20:1"},{"id":355,"nodeType":"PlaceholderStatement","src":"6961:1:1"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"6689:199:1","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":357,"name":"onlyInitializing","nameLocation":"6902:16:1","nodeType":"ModifierDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[],"src":"6918:2:1"},"src":"6893:76:1","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"7136:89:1","statements":[{"condition":{"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":361,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"7151:15:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":368,"nodeType":"IfStatement","src":"7146:73:1","trueBody":{"id":367,"nodeType":"Block","src":"7170:49:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":364,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"7191:15:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":366,"nodeType":"RevertStatement","src":"7184:24:1"}]}}]},"documentation":{"id":358,"nodeType":"StructuredDocumentation","src":"6975:104:1","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[],"src":"7111:2:1"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[],"src":"7136:0:1"},"scope":448,"src":"7084:141:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":415,"nodeType":"Block","src":"7760:373:1","statements":[{"assignments":[376],"declarations":[{"constant":false,"id":376,"mutability":"mutable","name":"$","nameLocation":"7855:1:1","nodeType":"VariableDeclaration","scope":415,"src":"7826:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":375,"nodeType":"UserDefinedTypeName","pathNode":{"id":374,"name":"InitializableStorage","nameLocations":["7826:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"7826:20:1"},"referencedDeclaration":205,"src":"7826:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":379,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"7859:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:1"},{"condition":{"expression":{"id":380,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7900:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"7900:15:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":386,"nodeType":"IfStatement","src":"7896:76:1","trueBody":{"id":385,"nodeType":"Block","src":"7917:55:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":382,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"7938:21:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":384,"nodeType":"RevertStatement","src":"7931:30:1"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":387,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"7985:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":388,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"7985:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":390,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":389,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:1","memberName":"max","nodeType":"MemberAccess","src":"8003:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":414,"nodeType":"IfStatement","src":"7981:146:1","trueBody":{"id":413,"nodeType":"Block","src":"8021:106:1","statements":[{"expression":{"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":395,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":376,"src":"8035:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8035:14:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":399,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":398,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:1","memberName":"max","nodeType":"MemberAccess","src":"8052:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":404,"nodeType":"ExpressionStatement","src":"8035:33:1"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:1","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":407,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:1","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":406,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:1","memberName":"max","nodeType":"MemberAccess","src":"8099:16:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":405,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"8087:11:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":412,"nodeType":"EmitStatement","src":"8082:34:1"}]}}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"7231:475:1","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":416,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:1","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[],"src":"7740:2:1"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"7760:0:1"},"scope":448,"src":"7711:422:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"8308:63:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":422,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8325:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":424,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:1","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":201,"src":"8325:39:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":421,"id":425,"nodeType":"Return","src":"8318:46:1"}]},"documentation":{"id":417,"nodeType":"StructuredDocumentation","src":"8139:99:1","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:1","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[],"src":"8274:2:1"},"returnParameters":{"id":421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":427,"src":"8300:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":419,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:1"},"scope":448,"src":"8243:128:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":437,"nodeType":"Block","src":"8543:64:1","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":433,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":447,"src":"8560:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":435,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:1","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":204,"src":"8560:40:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":432,"id":436,"nodeType":"Return","src":"8553:47:1"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"8377:105:1","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":438,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:1","nodeType":"FunctionDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[],"src":"8511:2:1"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":438,"src":"8537:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":430,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:1"},"scope":448,"src":"8487:120:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":446,"nodeType":"Block","src":"8827:80:1","statements":[{"AST":{"nativeSrc":"8846:55:1","nodeType":"YulBlock","src":"8846:55:1","statements":[{"nativeSrc":"8860:31:1","nodeType":"YulAssignment","src":"8860:31:1","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:1","nodeType":"YulIdentifier","src":"8870:21:1"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:1","nodeType":"YulIdentifier","src":"8860:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":443,"isOffset":false,"isSlot":true,"src":"8860:6:1","suffix":"slot","valueSize":1},{"declaration":208,"isOffset":false,"isSlot":false,"src":"8870:21:1","valueSize":1}],"id":445,"nodeType":"InlineAssembly","src":"8837:64:1"}]},"documentation":{"id":439,"nodeType":"StructuredDocumentation","src":"8613:67:1","text":" @dev Returns a pointer to the storage namespace."},"id":447,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:1","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[],"src":"8770:2:1"},"returnParameters":{"id":444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":443,"mutability":"mutable","name":"$","nameLocation":"8824:1:1","nodeType":"VariableDeclaration","scope":447,"src":"8795:30:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":442,"nodeType":"UserDefinedTypeName","pathNode":{"id":441,"name":"InitializableStorage","nameLocations":["8795:20:1"],"nodeType":"IdentifierPath","referencedDeclaration":205,"src":"8795:20:1"},"referencedDeclaration":205,"src":"8795:20:1","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$205_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:1"},"scope":448,"src":"8737:170:1","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":449,"src":"2349:6560:1","usedErrors":[211,214],"usedEvents":[219]}],"src":"113:8797:1"},"id":1},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[494],"Initializable":[448]},"id":495,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":450,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:2"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":452,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":495,"sourceUnit":449,"src":"126:63:2","symbolAliases":[{"foreign":{"id":451,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"134:13:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":454,"name":"Initializable","nameLocations":["728:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":448,"src":"728:13:2"},"id":455,"nodeType":"InheritanceSpecifier","src":"728:13:2"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"191:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":494,"linearizedBaseContracts":[494,448],"name":"ContextUpgradeable","nameLocation":"706:18:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":460,"nodeType":"Block","src":"800:7:2","statements":[]},"id":461,"implemented":true,"kind":"function","modifiers":[{"id":458,"kind":"modifierInvocation","modifierName":{"id":457,"name":"onlyInitializing","nameLocations":["783:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"783:16:2"},"nodeType":"ModifierInvocation","src":"783:16:2"}],"name":"__Context_init","nameLocation":"757:14:2","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[],"src":"771:2:2"},"returnParameters":{"id":459,"nodeType":"ParameterList","parameters":[],"src":"800:0:2"},"scope":494,"src":"748:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":466,"nodeType":"Block","src":"875:7:2","statements":[]},"id":467,"implemented":true,"kind":"function","modifiers":[{"id":464,"kind":"modifierInvocation","modifierName":{"id":463,"name":"onlyInitializing","nameLocations":["858:16:2"],"nodeType":"IdentifierPath","referencedDeclaration":357,"src":"858:16:2"},"nodeType":"ModifierInvocation","src":"858:16:2"}],"name":"__Context_init_unchained","nameLocation":"822:24:2","nodeType":"FunctionDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[],"src":"846:2:2"},"returnParameters":{"id":465,"nodeType":"ParameterList","parameters":[],"src":"875:0:2"},"scope":494,"src":"813:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":475,"nodeType":"Block","src":"949:34:2","statements":[{"expression":{"expression":{"id":472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:2","memberName":"sender","nodeType":"MemberAccess","src":"966:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":471,"id":474,"nodeType":"Return","src":"959:17:2"}]},"id":476,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:2","nodeType":"FunctionDefinition","parameters":{"id":468,"nodeType":"ParameterList","parameters":[],"src":"906:2:2"},"returnParameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":476,"src":"940:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:2"},"scope":494,"src":"887:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"1056:32:2","statements":[{"expression":{"expression":{"id":481,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:2","memberName":"data","nodeType":"MemberAccess","src":"1073:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":480,"id":483,"nodeType":"Return","src":"1066:15:2"}]},"id":485,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:2","nodeType":"FunctionDefinition","parameters":{"id":477,"nodeType":"ParameterList","parameters":[],"src":"1006:2:2"},"returnParameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":485,"src":"1040:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":478,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:2"},"scope":494,"src":"989:99:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":492,"nodeType":"Block","src":"1166:25:2","statements":[{"expression":{"hexValue":"30","id":490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":489,"id":491,"nodeType":"Return","src":"1176:8:2"}]},"id":493,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:2","nodeType":"FunctionDefinition","parameters":{"id":486,"nodeType":"ParameterList","parameters":[],"src":"1123:2:2"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":493,"src":"1157:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":487,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:2"},"scope":494,"src":"1094:97:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":495,"src":"688:505:2","usedErrors":[211,214],"usedEvents":[219]}],"src":"101:1093:2"},"id":2},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1931],"Ownable":[642]},"id":643,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":496,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":643,"sourceUnit":1932,"src":"128:45:3","symbolAliases":[{"foreign":{"id":497,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"136:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":500,"name":"Context","nameLocations":["692:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1931,"src":"692:7:3"},"id":501,"nodeType":"InheritanceSpecifier","src":"692:7:3"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"175:487:3","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":642,"linearizedBaseContracts":[642,1931],"name":"Ownable","nameLocation":"681:7:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":503,"mutability":"mutable","name":"_owner","nameLocation":"722:6:3","nodeType":"VariableDeclaration","scope":642,"src":"706:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":502,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"735:85:3","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":508,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:3","nodeType":"ErrorDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"account","nameLocation":"866:7:3","nodeType":"VariableDeclaration","scope":508,"src":"858:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:3"},"src":"825:50:3"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"881:82:3","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":513,"name":"OwnableInvalidOwner","nameLocation":"974:19:3","nodeType":"ErrorDefinition","parameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"owner","nameLocation":"1002:5:3","nodeType":"VariableDeclaration","scope":513,"src":"994:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:3"},"src":"968:41:3"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":519,"name":"OwnershipTransferred","nameLocation":"1021:20:3","nodeType":"EventDefinition","parameters":{"id":518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":515,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:3","nodeType":"VariableDeclaration","scope":519,"src":"1042:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":517,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:3","nodeType":"VariableDeclaration","scope":519,"src":"1073:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:3"},"src":"1015:84:3"},{"body":{"id":544,"nodeType":"Block","src":"1259:153:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":525,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1273:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":526,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:3","typeDescriptions":{}}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":539,"nodeType":"IfStatement","src":"1269:95:3","trueBody":{"id":538,"nodeType":"Block","src":"1301:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":532,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:3","typeDescriptions":{}}},"id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":531,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"1322:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":537,"nodeType":"RevertStatement","src":"1315:38:3"}]}},{"expression":{"arguments":[{"id":541,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"1392:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":540,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"1373:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":543,"nodeType":"ExpressionStatement","src":"1373:32:3"}]},"documentation":{"id":520,"nodeType":"StructuredDocumentation","src":"1105:115:3","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":545,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":522,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:3","nodeType":"VariableDeclaration","scope":545,"src":"1237:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:3"},"returnParameters":{"id":524,"nodeType":"ParameterList","parameters":[],"src":"1259:0:3"},"scope":642,"src":"1225:187:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":552,"nodeType":"Block","src":"1521:41:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":548,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"1531:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":550,"nodeType":"ExpressionStatement","src":"1531:13:3"},{"id":551,"nodeType":"PlaceholderStatement","src":"1554:1:3"}]},"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"1418:77:3","text":" @dev Throws if called by any account other than the owner."},"id":553,"name":"onlyOwner","nameLocation":"1509:9:3","nodeType":"ModifierDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[],"src":"1518:2:3"},"src":"1500:62:3","virtual":false,"visibility":"internal"},{"body":{"id":561,"nodeType":"Block","src":"1693:30:3","statements":[{"expression":{"id":559,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"1710:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":558,"id":560,"nodeType":"Return","src":"1703:13:3"}]},"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"1568:65:3","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":562,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:3","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"1652:2:3"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":562,"src":"1684:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:3"},"scope":642,"src":"1638:85:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":578,"nodeType":"Block","src":"1841:117:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":566,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"1855:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":568,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"1866:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":577,"nodeType":"IfStatement","src":"1851:101:3","trueBody":{"id":576,"nodeType":"Block","src":"1880:72:3","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"1928:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":571,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":508,"src":"1901:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":575,"nodeType":"RevertStatement","src":"1894:47:3"}]}}]},"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"1729:62:3","text":" @dev Throws if the sender is not the owner."},"id":579,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:3","nodeType":"FunctionDefinition","parameters":{"id":564,"nodeType":"ParameterList","parameters":[],"src":"1816:2:3"},"returnParameters":{"id":565,"nodeType":"ParameterList","parameters":[],"src":"1841:0:3"},"scope":642,"src":"1796:162:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":592,"nodeType":"Block","src":"2347:47:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":586,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:3","typeDescriptions":{}}},"id":589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":585,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"2357:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"2357:30:3"}]},"documentation":{"id":580,"nodeType":"StructuredDocumentation","src":"1964:324:3","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":593,"implemented":true,"kind":"function","modifiers":[{"id":583,"kind":"modifierInvocation","modifierName":{"id":582,"name":"onlyOwner","nameLocations":["2337:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":553,"src":"2337:9:3"},"nodeType":"ModifierInvocation","src":"2337:9:3"}],"name":"renounceOwnership","nameLocation":"2302:17:3","nodeType":"FunctionDefinition","parameters":{"id":581,"nodeType":"ParameterList","parameters":[],"src":"2319:2:3"},"returnParameters":{"id":584,"nodeType":"ParameterList","parameters":[],"src":"2347:0:3"},"scope":642,"src":"2293:101:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":620,"nodeType":"Block","src":"2613:145:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":601,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"2627:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:3","typeDescriptions":{}}},"id":605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":615,"nodeType":"IfStatement","src":"2623:91:3","trueBody":{"id":614,"nodeType":"Block","src":"2651:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":608,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:3","typeDescriptions":{}}},"id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":607,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"2672:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":613,"nodeType":"RevertStatement","src":"2665:38:3"}]}},{"expression":{"arguments":[{"id":617,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"2742:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":616,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"2723:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":619,"nodeType":"ExpressionStatement","src":"2723:28:3"}]},"documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"2400:138:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":621,"implemented":true,"kind":"function","modifiers":[{"id":599,"kind":"modifierInvocation","modifierName":{"id":598,"name":"onlyOwner","nameLocations":["2603:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":553,"src":"2603:9:3"},"nodeType":"ModifierInvocation","src":"2603:9:3"}],"name":"transferOwnership","nameLocation":"2552:17:3","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:3","nodeType":"VariableDeclaration","scope":621,"src":"2570:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":595,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:3"},"returnParameters":{"id":600,"nodeType":"ParameterList","parameters":[],"src":"2613:0:3"},"scope":642,"src":"2543:215:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":640,"nodeType":"Block","src":"2975:124:3","statements":[{"assignments":[628],"declarations":[{"constant":false,"id":628,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:3","nodeType":"VariableDeclaration","scope":640,"src":"2985:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":630,"initialValue":{"id":629,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3004:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:3"},{"expression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":631,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":503,"src":"3020:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":632,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3029:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":634,"nodeType":"ExpressionStatement","src":"3020:17:3"},{"eventCall":{"arguments":[{"id":636,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"3073:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":637,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"3083:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":635,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3052:20:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":639,"nodeType":"EmitStatement","src":"3047:45:3"}]},"documentation":{"id":622,"nodeType":"StructuredDocumentation","src":"2764:143:3","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":641,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:3","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":624,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:3","nodeType":"VariableDeclaration","scope":641,"src":"2940:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:3"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"2975:0:3"},"scope":642,"src":"2912:187:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":643,"src":"663:2438:3","usedErrors":[508,513],"usedEvents":[519]}],"src":"102:3000:3"},"id":3},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","exportedSymbols":{"IERC1363":[724],"IERC165":[3617],"IERC20":[1466]},"id":725,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":644,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:4"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","file":"./IERC20.sol","id":646,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":725,"sourceUnit":733,"src":"133:36:4","symbolAliases":[{"foreign":{"id":645,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"141:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":648,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":725,"sourceUnit":729,"src":"170:38:4","symbolAliases":[{"foreign":{"id":647,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"178:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":650,"name":"IERC20","nameLocations":["590:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"590:6:4"},"id":651,"nodeType":"InheritanceSpecifier","src":"590:6:4"},{"baseName":{"id":652,"name":"IERC165","nameLocations":["598:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3617,"src":"598:7:4"},"id":653,"nodeType":"InheritanceSpecifier","src":"598:7:4"}],"canonicalName":"IERC1363","contractDependencies":[],"contractKind":"interface","documentation":{"id":649,"nodeType":"StructuredDocumentation","src":"210:357:4","text":" @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."},"fullyImplemented":false,"id":724,"linearizedBaseContracts":[724,3617,1466],"name":"IERC1363","nameLocation":"578:8:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":654,"nodeType":"StructuredDocumentation","src":"1148:370:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"1296ee62","id":663,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"1532:15:4","nodeType":"FunctionDefinition","parameters":{"id":659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"to","nameLocation":"1556:2:4","nodeType":"VariableDeclaration","scope":663,"src":"1548:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"1548:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":658,"mutability":"mutable","name":"value","nameLocation":"1568:5:4","nodeType":"VariableDeclaration","scope":663,"src":"1560:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":657,"name":"uint256","nodeType":"ElementaryTypeName","src":"1560:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1547:27:4"},"returnParameters":{"id":662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":661,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":663,"src":"1593:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":660,"name":"bool","nodeType":"ElementaryTypeName","src":"1593:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1592:6:4"},"scope":724,"src":"1523:76:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":664,"nodeType":"StructuredDocumentation","src":"1605:453:4","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"4000aea0","id":675,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"2072:15:4","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":666,"mutability":"mutable","name":"to","nameLocation":"2096:2:4","nodeType":"VariableDeclaration","scope":675,"src":"2088:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"2088:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"value","nameLocation":"2108:5:4","nodeType":"VariableDeclaration","scope":675,"src":"2100:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2100:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"data","nameLocation":"2130:4:4","nodeType":"VariableDeclaration","scope":675,"src":"2115:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":669,"name":"bytes","nodeType":"ElementaryTypeName","src":"2115:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2087:48:4"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":675,"src":"2154:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":672,"name":"bool","nodeType":"ElementaryTypeName","src":"2154:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2153:6:4"},"scope":724,"src":"2063:97:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":676,"nodeType":"StructuredDocumentation","src":"2166:453:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"d8fbe994","id":687,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"2633:19:4","nodeType":"FunctionDefinition","parameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"from","nameLocation":"2661:4:4","nodeType":"VariableDeclaration","scope":687,"src":"2653:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"2653:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":680,"mutability":"mutable","name":"to","nameLocation":"2675:2:4","nodeType":"VariableDeclaration","scope":687,"src":"2667:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":679,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":682,"mutability":"mutable","name":"value","nameLocation":"2687:5:4","nodeType":"VariableDeclaration","scope":687,"src":"2679:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint256","nodeType":"ElementaryTypeName","src":"2679:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2652:41:4"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":687,"src":"2712:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":684,"name":"bool","nodeType":"ElementaryTypeName","src":"2712:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2711:6:4"},"scope":724,"src":"2624:94:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"2724:536:4","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"c1d34b89","id":701,"implemented":false,"kind":"function","modifiers":[],"name":"transferFromAndCall","nameLocation":"3274:19:4","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"mutability":"mutable","name":"from","nameLocation":"3302:4:4","nodeType":"VariableDeclaration","scope":701,"src":"3294:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"3294:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":692,"mutability":"mutable","name":"to","nameLocation":"3316:2:4","nodeType":"VariableDeclaration","scope":701,"src":"3308:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"3308:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"value","nameLocation":"3328:5:4","nodeType":"VariableDeclaration","scope":701,"src":"3320:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":693,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"data","nameLocation":"3350:4:4","nodeType":"VariableDeclaration","scope":701,"src":"3335:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":695,"name":"bytes","nodeType":"ElementaryTypeName","src":"3335:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3293:62:4"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"3374:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":698,"name":"bool","nodeType":"ElementaryTypeName","src":"3374:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3373:6:4"},"scope":724,"src":"3265:115:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"3386:390:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"3177029f","id":711,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"3790:14:4","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"spender","nameLocation":"3813:7:4","nodeType":"VariableDeclaration","scope":711,"src":"3805:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"3805:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"value","nameLocation":"3830:5:4","nodeType":"VariableDeclaration","scope":711,"src":"3822:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3822:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3804:32:4"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":711,"src":"3855:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":708,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:4"},"scope":724,"src":"3781:80:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":712,"nodeType":"StructuredDocumentation","src":"3867:478:4","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."},"functionSelector":"cae9ca51","id":723,"implemented":false,"kind":"function","modifiers":[],"name":"approveAndCall","nameLocation":"4359:14:4","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":714,"mutability":"mutable","name":"spender","nameLocation":"4382:7:4","nodeType":"VariableDeclaration","scope":723,"src":"4374:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"4374:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"value","nameLocation":"4399:5:4","nodeType":"VariableDeclaration","scope":723,"src":"4391:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":715,"name":"uint256","nodeType":"ElementaryTypeName","src":"4391:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"data","nameLocation":"4421:4:4","nodeType":"VariableDeclaration","scope":723,"src":"4406:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":717,"name":"bytes","nodeType":"ElementaryTypeName","src":"4406:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4373:53:4"},"returnParameters":{"id":722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":723,"src":"4445:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":720,"name":"bool","nodeType":"ElementaryTypeName","src":"4445:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4444:6:4"},"scope":724,"src":"4350:101:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":725,"src":"568:3885:4","usedErrors":[],"usedEvents":[1400,1409]}],"src":"107:4347:4"},"id":4},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3617]},"id":729,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":726,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":728,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":729,"sourceUnit":3618,"src":"132:59:5","symbolAliases":[{"foreign":{"id":727,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"140:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"106:86:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20.sol","exportedSymbols":{"IERC20":[1466]},"id":733,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":730,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../token/ERC20/IERC20.sol","id":732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":733,"sourceUnit":1467,"src":"131:49:6","symbolAliases":[{"foreign":{"id":731,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"139:6:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"105:76:6"},"id":6},"@openzeppelin/contracts/interfaces/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20Metadata.sol","exportedSymbols":{"IERC20Metadata":[1492]},"id":737,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":734,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"../token/ERC20/extensions/IERC20Metadata.sol","id":736,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":737,"sourceUnit":1493,"src":"139:76:7","symbolAliases":[{"foreign":{"id":735,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"147:14:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"113:103:7"},"id":7},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[873],"IERC20Errors":[778],"IERC721Errors":[826]},"id":874,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":738,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":739,"nodeType":"StructuredDocumentation","src":"138:141:8","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":778,"linearizedBaseContracts":[778],"name":"IERC20Errors","nameLocation":"290:12:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":740,"nodeType":"StructuredDocumentation","src":"309:309:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":748,"name":"ERC20InsufficientBalance","nameLocation":"629:24:8","nodeType":"ErrorDefinition","parameters":{"id":747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"sender","nameLocation":"662:6:8","nodeType":"VariableDeclaration","scope":748,"src":"654:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":741,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"balance","nameLocation":"678:7:8","nodeType":"VariableDeclaration","scope":748,"src":"670:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":746,"mutability":"mutable","name":"needed","nameLocation":"695:6:8","nodeType":"VariableDeclaration","scope":748,"src":"687:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:8"},"src":"623:80:8"},{"documentation":{"id":749,"nodeType":"StructuredDocumentation","src":"709:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":753,"name":"ERC20InvalidSender","nameLocation":"872:18:8","nodeType":"ErrorDefinition","parameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"sender","nameLocation":"899:6:8","nodeType":"VariableDeclaration","scope":753,"src":"891:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":750,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:8"},"src":"866:41:8"},{"documentation":{"id":754,"nodeType":"StructuredDocumentation","src":"913:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":758,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:8","nodeType":"ErrorDefinition","parameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:8","nodeType":"VariableDeclaration","scope":758,"src":"1104:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:8"},"src":"1077:45:8"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"1128:345:8","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":767,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:8","nodeType":"ErrorDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"spender","nameLocation":"1519:7:8","nodeType":"VariableDeclaration","scope":767,"src":"1511:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:8","nodeType":"VariableDeclaration","scope":767,"src":"1528:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"needed","nameLocation":"1555:6:8","nodeType":"VariableDeclaration","scope":767,"src":"1547:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:8"},"src":"1478:85:8"},{"documentation":{"id":768,"nodeType":"StructuredDocumentation","src":"1569:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":772,"name":"ERC20InvalidApprover","nameLocation":"1754:20:8","nodeType":"ErrorDefinition","parameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"approver","nameLocation":"1783:8:8","nodeType":"VariableDeclaration","scope":772,"src":"1775:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:8"},"src":"1748:45:8"},{"documentation":{"id":773,"nodeType":"StructuredDocumentation","src":"1799:195:8","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":777,"name":"ERC20InvalidSpender","nameLocation":"2005:19:8","nodeType":"ErrorDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":775,"mutability":"mutable","name":"spender","nameLocation":"2033:7:8","nodeType":"VariableDeclaration","scope":777,"src":"2025:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:8"},"src":"1999:43:8"}],"scope":874,"src":"280:1764:8","usedErrors":[748,753,758,767,772,777],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":779,"nodeType":"StructuredDocumentation","src":"2046:143:8","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":826,"linearizedBaseContracts":[826],"name":"IERC721Errors","nameLocation":"2200:13:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"2220:219:8","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":784,"name":"ERC721InvalidOwner","nameLocation":"2450:18:8","nodeType":"ErrorDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"owner","nameLocation":"2477:5:8","nodeType":"VariableDeclaration","scope":784,"src":"2469:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:8"},"src":"2444:40:8"},{"documentation":{"id":785,"nodeType":"StructuredDocumentation","src":"2490:132:8","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":789,"name":"ERC721NonexistentToken","nameLocation":"2633:22:8","nodeType":"ErrorDefinition","parameters":{"id":788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":787,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:8","nodeType":"VariableDeclaration","scope":789,"src":"2656:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":786,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:8"},"src":"2627:46:8"},{"documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"2679:289:8","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":798,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:8","nodeType":"ErrorDefinition","parameters":{"id":797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"sender","nameLocation":"3008:6:8","nodeType":"VariableDeclaration","scope":798,"src":"3000:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:8","nodeType":"VariableDeclaration","scope":798,"src":"3016:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":796,"mutability":"mutable","name":"owner","nameLocation":"3041:5:8","nodeType":"VariableDeclaration","scope":798,"src":"3033:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:8"},"src":"2973:75:8"},{"documentation":{"id":799,"nodeType":"StructuredDocumentation","src":"3054:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":803,"name":"ERC721InvalidSender","nameLocation":"3217:19:8","nodeType":"ErrorDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"sender","nameLocation":"3245:6:8","nodeType":"VariableDeclaration","scope":803,"src":"3237:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":800,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:8"},"src":"3211:42:8"},{"documentation":{"id":804,"nodeType":"StructuredDocumentation","src":"3259:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":808,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:8","nodeType":"ErrorDefinition","parameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:8","nodeType":"VariableDeclaration","scope":808,"src":"3451:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":805,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:8"},"src":"3423:46:8"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"3475:247:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":815,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:8","nodeType":"ErrorDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"operator","nameLocation":"3768:8:8","nodeType":"VariableDeclaration","scope":815,"src":"3760:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":813,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:8","nodeType":"VariableDeclaration","scope":815,"src":"3778:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":812,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:8"},"src":"3727:68:8"},{"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"3801:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":820,"name":"ERC721InvalidApprover","nameLocation":"3986:21:8","nodeType":"ErrorDefinition","parameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"approver","nameLocation":"4016:8:8","nodeType":"VariableDeclaration","scope":820,"src":"4008:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:8"},"src":"3980:46:8"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"4032:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":825,"name":"ERC721InvalidOperator","nameLocation":"4240:21:8","nodeType":"ErrorDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"operator","nameLocation":"4270:8:8","nodeType":"VariableDeclaration","scope":825,"src":"4262:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":822,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:8"},"src":"4234:46:8"}],"scope":874,"src":"2190:2092:8","usedErrors":[784,789,798,803,808,815,820,825],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"4284:145:8","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":873,"linearizedBaseContracts":[873],"name":"IERC1155Errors","nameLocation":"4440:14:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":828,"nodeType":"StructuredDocumentation","src":"4461:361:8","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":838,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:8","nodeType":"ErrorDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"sender","nameLocation":"4868:6:8","nodeType":"VariableDeclaration","scope":838,"src":"4860:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":829,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"balance","nameLocation":"4884:7:8","nodeType":"VariableDeclaration","scope":838,"src":"4876:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":831,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"needed","nameLocation":"4901:6:8","nodeType":"VariableDeclaration","scope":838,"src":"4893:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":833,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:8","nodeType":"VariableDeclaration","scope":838,"src":"4909:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":835,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:8"},"src":"4827:99:8"},{"documentation":{"id":839,"nodeType":"StructuredDocumentation","src":"4932:152:8","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":843,"name":"ERC1155InvalidSender","nameLocation":"5095:20:8","nodeType":"ErrorDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":841,"mutability":"mutable","name":"sender","nameLocation":"5124:6:8","nodeType":"VariableDeclaration","scope":843,"src":"5116:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:8"},"src":"5089:43:8"},{"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"5138:159:8","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":848,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:8","nodeType":"ErrorDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:8","nodeType":"VariableDeclaration","scope":848,"src":"5331:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:8"},"src":"5302:47:8"},{"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"5355:256:8","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":855,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:8","nodeType":"ErrorDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"operator","nameLocation":"5659:8:8","nodeType":"VariableDeclaration","scope":855,"src":"5651:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"owner","nameLocation":"5677:5:8","nodeType":"VariableDeclaration","scope":855,"src":"5669:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":852,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:8"},"src":"5616:68:8"},{"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"5690:174:8","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":860,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:8","nodeType":"ErrorDefinition","parameters":{"id":859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"approver","nameLocation":"5906:8:8","nodeType":"VariableDeclaration","scope":860,"src":"5898:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:8"},"src":"5869:47:8"},{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"5922:197:8","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":865,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:8","nodeType":"ErrorDefinition","parameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"operator","nameLocation":"6161:8:8","nodeType":"VariableDeclaration","scope":865,"src":"6153:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:8"},"src":"6124:47:8"},{"documentation":{"id":866,"nodeType":"StructuredDocumentation","src":"6177:280:8","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":872,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:8","nodeType":"ErrorDefinition","parameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:8","nodeType":"VariableDeclaration","scope":872,"src":"6494:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":867,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:8","nodeType":"VariableDeclaration","scope":872,"src":"6513:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:8"},"src":"6462:73:8"}],"scope":874,"src":"4430:2107:8","usedErrors":[838,843,848,855,860,865,872],"usedEvents":[]}],"src":"112:6426:8"},"id":8},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1931],"ERC20":[1388],"IERC20":[1466],"IERC20Errors":[778],"IERC20Metadata":[1492]},"id":1389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":875,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":877,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1389,"sourceUnit":1467,"src":"131:36:9","symbolAliases":[{"foreign":{"id":876,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"139:6:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":879,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1389,"sourceUnit":1493,"src":"168:63:9","symbolAliases":[{"foreign":{"id":878,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"176:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":881,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1389,"sourceUnit":1932,"src":"232:48:9","symbolAliases":[{"foreign":{"id":880,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1931,"src":"240:7:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":883,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1389,"sourceUnit":874,"src":"281:65:9","symbolAliases":[{"foreign":{"id":882,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"289:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":885,"name":"Context","nameLocations":["1133:7:9"],"nodeType":"IdentifierPath","referencedDeclaration":1931,"src":"1133:7:9"},"id":886,"nodeType":"InheritanceSpecifier","src":"1133:7:9"},{"baseName":{"id":887,"name":"IERC20","nameLocations":["1142:6:9"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"1142:6:9"},"id":888,"nodeType":"InheritanceSpecifier","src":"1142:6:9"},{"baseName":{"id":889,"name":"IERC20Metadata","nameLocations":["1150:14:9"],"nodeType":"IdentifierPath","referencedDeclaration":1492,"src":"1150:14:9"},"id":890,"nodeType":"InheritanceSpecifier","src":"1150:14:9"},{"baseName":{"id":891,"name":"IERC20Errors","nameLocations":["1166:12:9"],"nodeType":"IdentifierPath","referencedDeclaration":778,"src":"1166:12:9"},"id":892,"nodeType":"InheritanceSpecifier","src":"1166:12:9"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"348:757:9","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":1388,"linearizedBaseContracts":[1388,778,1492,1466,1931],"name":"ERC20","nameLocation":"1124:5:9","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":896,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:9","nodeType":"VariableDeclaration","scope":1388,"src":"1185:53:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":895,"keyName":"account","keyNameLocation":"1201:7:9","keyType":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":902,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:9","nodeType":"VariableDeclaration","scope":1388,"src":"1245:83:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":901,"keyName":"account","keyNameLocation":"1261:7:9","keyType":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":900,"keyName":"spender","keyNameLocation":"1288:7:9","keyType":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":904,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:9","nodeType":"VariableDeclaration","scope":1388,"src":"1335:28:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":906,"mutability":"mutable","name":"_name","nameLocation":"1385:5:9","nodeType":"VariableDeclaration","scope":1388,"src":"1370:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":905,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":908,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:9","nodeType":"VariableDeclaration","scope":1388,"src":"1396:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":907,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":924,"nodeType":"Block","src":"1657:57:9","statements":[{"expression":{"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":916,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"1667:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":917,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":911,"src":"1675:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1667:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":919,"nodeType":"ExpressionStatement","src":"1667:13:9"},{"expression":{"id":922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":920,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"1690:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":921,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":913,"src":"1700:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1690:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":923,"nodeType":"ExpressionStatement","src":"1690:17:9"}]},"documentation":{"id":909,"nodeType":"StructuredDocumentation","src":"1425:171:9","text":" @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."},"id":925,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"name_","nameLocation":"1627:5:9","nodeType":"VariableDeclaration","scope":925,"src":"1613:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":910,"name":"string","nodeType":"ElementaryTypeName","src":"1613:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"symbol_","nameLocation":"1648:7:9","nodeType":"VariableDeclaration","scope":925,"src":"1634:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":912,"name":"string","nodeType":"ElementaryTypeName","src":"1634:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1612:44:9"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[],"src":"1657:0:9"},"scope":1388,"src":"1601:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1479],"body":{"id":933,"nodeType":"Block","src":"1839:29:9","statements":[{"expression":{"id":931,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"1856:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":930,"id":932,"nodeType":"Return","src":"1849:12:9"}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"1720:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":934,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1788:4:9","nodeType":"FunctionDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[],"src":"1792:2:9"},"returnParameters":{"id":930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":934,"src":"1824:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":928,"name":"string","nodeType":"ElementaryTypeName","src":"1824:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1823:15:9"},"scope":1388,"src":"1779:89:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1485],"body":{"id":942,"nodeType":"Block","src":"2043:31:9","statements":[{"expression":{"id":940,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"2060:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":939,"id":941,"nodeType":"Return","src":"2053:14:9"}]},"documentation":{"id":935,"nodeType":"StructuredDocumentation","src":"1874:102:9","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":943,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1990:6:9","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[],"src":"1996:2:9"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":943,"src":"2028:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":937,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2027:15:9"},"scope":1388,"src":"1981:93:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1491],"body":{"id":951,"nodeType":"Block","src":"2763:26:9","statements":[{"expression":{"hexValue":"3138","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:2:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":948,"id":950,"nodeType":"Return","src":"2773:9:9"}]},"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"2080:622:9","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":952,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2716:8:9","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[],"src":"2724:2:9"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":952,"src":"2756:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":946,"name":"uint8","nodeType":"ElementaryTypeName","src":"2756:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2755:7:9"},"scope":1388,"src":"2707:82:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1415],"body":{"id":960,"nodeType":"Block","src":"2910:36:9","statements":[{"expression":{"id":958,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"2927:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":957,"id":959,"nodeType":"Return","src":"2920:19:9"}]},"documentation":{"id":953,"nodeType":"StructuredDocumentation","src":"2795:49:9","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":961,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2858:11:9","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[],"src":"2869:2:9"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":961,"src":"2901:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2901:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2900:9:9"},"scope":1388,"src":"2849:97:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1423],"body":{"id":973,"nodeType":"Block","src":"3078:42:9","statements":[{"expression":{"baseExpression":{"id":969,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3095:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":971,"indexExpression":{"id":970,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"3105:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3095:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":968,"id":972,"nodeType":"Return","src":"3088:25:9"}]},"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"2952:47:9","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":974,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3013:9:9","nodeType":"FunctionDefinition","parameters":{"id":965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"account","nameLocation":"3031:7:9","nodeType":"VariableDeclaration","scope":974,"src":"3023:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"3023:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3022:17:9"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":974,"src":"3069:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3068:9:9"},"scope":1388,"src":"3004:116:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1433],"body":{"id":997,"nodeType":"Block","src":"3390:103:9","statements":[{"assignments":[985],"declarations":[{"constant":false,"id":985,"mutability":"mutable","name":"owner","nameLocation":"3408:5:9","nodeType":"VariableDeclaration","scope":997,"src":"3400:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":984,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":988,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":986,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"3416:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3400:28:9"},{"expression":{"arguments":[{"id":990,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"3448:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"3455:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":992,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":979,"src":"3459:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"3438:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3438:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"3438:27:9"},{"expression":{"hexValue":"74727565","id":995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3482:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":983,"id":996,"nodeType":"Return","src":"3475:11:9"}]},"documentation":{"id":975,"nodeType":"StructuredDocumentation","src":"3126:184:9","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":998,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3324:8:9","nodeType":"FunctionDefinition","parameters":{"id":980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":977,"mutability":"mutable","name":"to","nameLocation":"3341:2:9","nodeType":"VariableDeclaration","scope":998,"src":"3333:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":976,"name":"address","nodeType":"ElementaryTypeName","src":"3333:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":979,"mutability":"mutable","name":"value","nameLocation":"3353:5:9","nodeType":"VariableDeclaration","scope":998,"src":"3345:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3345:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3332:27:9"},"returnParameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":998,"src":"3384:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":981,"name":"bool","nodeType":"ElementaryTypeName","src":"3384:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3383:6:9"},"scope":1388,"src":"3315:178:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1443],"body":{"id":1014,"nodeType":"Block","src":"3640:51:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1008,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"3657:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1010,"indexExpression":{"id":1009,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"3669:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1012,"indexExpression":{"id":1011,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"3676:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3657:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1007,"id":1013,"nodeType":"Return","src":"3650:34:9"}]},"documentation":{"id":999,"nodeType":"StructuredDocumentation","src":"3499:47:9","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":1015,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3560:9:9","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1001,"mutability":"mutable","name":"owner","nameLocation":"3578:5:9","nodeType":"VariableDeclaration","scope":1015,"src":"3570:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1000,"name":"address","nodeType":"ElementaryTypeName","src":"3570:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"spender","nameLocation":"3593:7:9","nodeType":"VariableDeclaration","scope":1015,"src":"3585:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"3585:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3569:32:9"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1015,"src":"3631:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1005,"name":"uint256","nodeType":"ElementaryTypeName","src":"3631:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3630:9:9"},"scope":1388,"src":"3551:140:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1453],"body":{"id":1038,"nodeType":"Block","src":"4077:107:9","statements":[{"assignments":[1026],"declarations":[{"constant":false,"id":1026,"mutability":"mutable","name":"owner","nameLocation":"4095:5:9","nodeType":"VariableDeclaration","scope":1038,"src":"4087:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1025,"name":"address","nodeType":"ElementaryTypeName","src":"4087:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1029,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1027,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"4103:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4103:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4087:28:9"},{"expression":{"arguments":[{"id":1031,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"4134:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1018,"src":"4141:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"4150:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1030,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1279,1339],"referencedDeclaration":1279,"src":"4125:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4125:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1035,"nodeType":"ExpressionStatement","src":"4125:31:9"},{"expression":{"hexValue":"74727565","id":1036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4173:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1024,"id":1037,"nodeType":"Return","src":"4166:11:9"}]},"documentation":{"id":1016,"nodeType":"StructuredDocumentation","src":"3697:296:9","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1039,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4007:7:9","nodeType":"FunctionDefinition","parameters":{"id":1021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"spender","nameLocation":"4023:7:9","nodeType":"VariableDeclaration","scope":1039,"src":"4015:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4015:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"value","nameLocation":"4040:5:9","nodeType":"VariableDeclaration","scope":1039,"src":"4032:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"4032:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4014:32:9"},"returnParameters":{"id":1024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1039,"src":"4071:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1022,"name":"bool","nodeType":"ElementaryTypeName","src":"4071:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4070:6:9"},"scope":1388,"src":"3998:186:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1465],"body":{"id":1070,"nodeType":"Block","src":"4869:151:9","statements":[{"assignments":[1052],"declarations":[{"constant":false,"id":1052,"mutability":"mutable","name":"spender","nameLocation":"4887:7:9","nodeType":"VariableDeclaration","scope":1070,"src":"4879:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1051,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1055,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1053,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"4897:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1054,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4897:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4879:30:9"},{"expression":{"arguments":[{"id":1057,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"4935:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1058,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4941:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4950:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1056,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"4919:15:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4919:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1061,"nodeType":"ExpressionStatement","src":"4919:37:9"},{"expression":{"arguments":[{"id":1063,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"4976:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1064,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"4982:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1046,"src":"4986:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1062,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"4966:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4966:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"ExpressionStatement","src":"4966:26:9"},{"expression":{"hexValue":"74727565","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5009:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1050,"id":1069,"nodeType":"Return","src":"5002:11:9"}]},"documentation":{"id":1040,"nodeType":"StructuredDocumentation","src":"4190:581:9","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1071,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4785:12:9","nodeType":"FunctionDefinition","parameters":{"id":1047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"from","nameLocation":"4806:4:9","nodeType":"VariableDeclaration","scope":1071,"src":"4798:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"to","nameLocation":"4820:2:9","nodeType":"VariableDeclaration","scope":1071,"src":"4812:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1046,"mutability":"mutable","name":"value","nameLocation":"4832:5:9","nodeType":"VariableDeclaration","scope":1071,"src":"4824:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1045,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4797:41:9"},"returnParameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1071,"src":"4863:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1048,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4862:6:9"},"scope":1388,"src":"4776:244:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1117,"nodeType":"Block","src":"5462:231:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1081,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"5476:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5492:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5484:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"5484:7:9","typeDescriptions":{}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5484:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5476:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1095,"nodeType":"IfStatement","src":"5472:86:9","trueBody":{"id":1094,"nodeType":"Block","src":"5496:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"5536:7:9","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1087,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"5517:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1093,"nodeType":"RevertStatement","src":"5510:37:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1096,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"5571:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5585:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5577:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1097,"name":"address","nodeType":"ElementaryTypeName","src":"5577:7:9","typeDescriptions":{}}},"id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5577:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5571:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1110,"nodeType":"IfStatement","src":"5567:86:9","trueBody":{"id":1109,"nodeType":"Block","src":"5589:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5639:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5631:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"5631:7:9","typeDescriptions":{}}},"id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5631:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1102,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"5610:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5610:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1108,"nodeType":"RevertStatement","src":"5603:39:9"}]}},{"expression":{"arguments":[{"id":1112,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"5670:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"5676:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"5680:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1111,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"5662:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5662:24:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1116,"nodeType":"ExpressionStatement","src":"5662:24:9"}]},"documentation":{"id":1072,"nodeType":"StructuredDocumentation","src":"5026:362:9","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1118,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5402:9:9","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1074,"mutability":"mutable","name":"from","nameLocation":"5420:4:9","nodeType":"VariableDeclaration","scope":1118,"src":"5412:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"5412:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"to","nameLocation":"5434:2:9","nodeType":"VariableDeclaration","scope":1118,"src":"5426:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"5426:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"value","nameLocation":"5446:5:9","nodeType":"VariableDeclaration","scope":1118,"src":"5438:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"5438:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5411:41:9"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"5462:0:9"},"scope":1388,"src":"5393:300:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1194,"nodeType":"Block","src":"6083:1032:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6097:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6113:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6105:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"6105:7:9","typeDescriptions":{}}},"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6105:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6097:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1165,"nodeType":"Block","src":"6271:362:9","statements":[{"assignments":[1140],"declarations":[{"constant":false,"id":1140,"mutability":"mutable","name":"fromBalance","nameLocation":"6293:11:9","nodeType":"VariableDeclaration","scope":1165,"src":"6285:19:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1139,"name":"uint256","nodeType":"ElementaryTypeName","src":"6285:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1144,"initialValue":{"baseExpression":{"id":1141,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"6307:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1143,"indexExpression":{"id":1142,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6317:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6307:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6285:37:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1145,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6340:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6354:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6340:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1155,"nodeType":"IfStatement","src":"6336:115:9","trueBody":{"id":1154,"nodeType":"Block","src":"6361:90:9","statements":[{"errorCall":{"arguments":[{"id":1149,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6411:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1150,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6417:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6430:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1148,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"6386:24:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6386:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1153,"nodeType":"RevertStatement","src":"6379:57:9"}]}},{"id":1164,"nodeType":"UncheckedBlock","src":"6464:159:9","statements":[{"expression":{"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1156,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"6571:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1158,"indexExpression":{"id":1157,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"6581:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6571:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1159,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"6589:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6603:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6589:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6571:37:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1163,"nodeType":"ExpressionStatement","src":"6571:37:9"}]}]},"id":1166,"nodeType":"IfStatement","src":"6093:540:9","trueBody":{"id":1138,"nodeType":"Block","src":"6117:148:9","statements":[{"expression":{"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1134,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"6233:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6249:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6233:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1137,"nodeType":"ExpressionStatement","src":"6233:21:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1167,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"6647:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6653:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"6653:7:9","typeDescriptions":{}}},"id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6653:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6647:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1186,"nodeType":"Block","src":"6862:206:9","statements":[{"id":1185,"nodeType":"UncheckedBlock","src":"6876:182:9","statements":[{"expression":{"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1179,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"7021:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1181,"indexExpression":{"id":1180,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"7031:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7021:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"7038:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7021:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1184,"nodeType":"ExpressionStatement","src":"7021:22:9"}]}]},"id":1187,"nodeType":"IfStatement","src":"6643:425:9","trueBody":{"id":1178,"nodeType":"Block","src":"6665:191:9","statements":[{"id":1177,"nodeType":"UncheckedBlock","src":"6679:167:9","statements":[{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1173,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"6810:12:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"6826:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6810:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1176,"nodeType":"ExpressionStatement","src":"6810:21:9"}]}]}},{"eventCall":{"arguments":[{"id":1189,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"7092:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1190,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"7098:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"7102:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1188,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"7083:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7083:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1193,"nodeType":"EmitStatement","src":"7078:30:9"}]},"documentation":{"id":1119,"nodeType":"StructuredDocumentation","src":"5699:304:9","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":1195,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"6017:7:9","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"from","nameLocation":"6033:4:9","nodeType":"VariableDeclaration","scope":1195,"src":"6025:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"to","nameLocation":"6047:2:9","nodeType":"VariableDeclaration","scope":1195,"src":"6039:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"6039:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"value","nameLocation":"6059:5:9","nodeType":"VariableDeclaration","scope":1195,"src":"6051:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1124,"name":"uint256","nodeType":"ElementaryTypeName","src":"6051:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6024:41:9"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"6083:0:9"},"scope":1388,"src":"6008:1107:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1227,"nodeType":"Block","src":"7514:152:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1203,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"7528:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7547:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7539:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"7539:7:9","typeDescriptions":{}}},"id":1207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7539:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7528:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1217,"nodeType":"IfStatement","src":"7524:91:9","trueBody":{"id":1216,"nodeType":"Block","src":"7551:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7601:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7593:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"7593:7:9","typeDescriptions":{}}},"id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7593:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1209,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7572:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7572:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1215,"nodeType":"RevertStatement","src":"7565:39:9"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7640:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7632:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"7632:7:9","typeDescriptions":{}}},"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7632:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1223,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"7644:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"7653:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1218,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"7624:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7624:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1226,"nodeType":"ExpressionStatement","src":"7624:35:9"}]},"documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"7121:332:9","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":1228,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7467:5:9","nodeType":"FunctionDefinition","parameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1198,"mutability":"mutable","name":"account","nameLocation":"7481:7:9","nodeType":"VariableDeclaration","scope":1228,"src":"7473:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1197,"name":"address","nodeType":"ElementaryTypeName","src":"7473:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"value","nameLocation":"7498:5:9","nodeType":"VariableDeclaration","scope":1228,"src":"7490:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1199,"name":"uint256","nodeType":"ElementaryTypeName","src":"7490:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7472:32:9"},"returnParameters":{"id":1202,"nodeType":"ParameterList","parameters":[],"src":"7514:0:9"},"scope":1388,"src":"7458:208:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1260,"nodeType":"Block","src":"8040:150:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1236,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"8054:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8073:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8065:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1237,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:9","typeDescriptions":{}}},"id":1240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8065:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8054:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1250,"nodeType":"IfStatement","src":"8050:89:9","trueBody":{"id":1249,"nodeType":"Block","src":"8077:62:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8125:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8117:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"8117:7:9","typeDescriptions":{}}},"id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1242,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"8098:18:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8098:30:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1248,"nodeType":"RevertStatement","src":"8091:37:9"}]}},{"expression":{"arguments":[{"id":1252,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"8156:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8173:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8165:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1253,"name":"address","nodeType":"ElementaryTypeName","src":"8165:7:9","typeDescriptions":{}}},"id":1256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8165:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"8177:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1251,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1195,"src":"8148:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8148:35:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"ExpressionStatement","src":"8148:35:9"}]},"documentation":{"id":1229,"nodeType":"StructuredDocumentation","src":"7672:307:9","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":1261,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7993:5:9","nodeType":"FunctionDefinition","parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1231,"mutability":"mutable","name":"account","nameLocation":"8007:7:9","nodeType":"VariableDeclaration","scope":1261,"src":"7999:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1230,"name":"address","nodeType":"ElementaryTypeName","src":"7999:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"value","nameLocation":"8024:5:9","nodeType":"VariableDeclaration","scope":1261,"src":"8016:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"8016:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7998:32:9"},"returnParameters":{"id":1235,"nodeType":"ParameterList","parameters":[],"src":"8040:0:9"},"scope":1388,"src":"7984:206:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1278,"nodeType":"Block","src":"8800:54:9","statements":[{"expression":{"arguments":[{"id":1272,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"8819:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1273,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"8826:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"8835:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8842:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1271,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1279,1339],"referencedDeclaration":1339,"src":"8810:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8810:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1277,"nodeType":"ExpressionStatement","src":"8810:37:9"}]},"documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"8196:525:9","text":" @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1279,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8735:8:9","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1264,"mutability":"mutable","name":"owner","nameLocation":"8752:5:9","nodeType":"VariableDeclaration","scope":1279,"src":"8744:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1263,"name":"address","nodeType":"ElementaryTypeName","src":"8744:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1266,"mutability":"mutable","name":"spender","nameLocation":"8767:7:9","nodeType":"VariableDeclaration","scope":1279,"src":"8759:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1265,"name":"address","nodeType":"ElementaryTypeName","src":"8759:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"value","nameLocation":"8784:5:9","nodeType":"VariableDeclaration","scope":1279,"src":"8776:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"8776:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8743:47:9"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[],"src":"8800:0:9"},"scope":1388,"src":"8726:128:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1338,"nodeType":"Block","src":"9799:334:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1291,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"9813:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9830:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9822:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"9822:7:9","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9813:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1305,"nodeType":"IfStatement","src":"9809:89:9","trueBody":{"id":1304,"nodeType":"Block","src":"9834:64:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9884:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9876:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"9876:7:9","typeDescriptions":{}}},"id":1301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1297,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":772,"src":"9855:20:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9855:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1303,"nodeType":"RevertStatement","src":"9848:39:9"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1306,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"9911:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9930:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9922:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"9922:7:9","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9922:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9911:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1320,"nodeType":"IfStatement","src":"9907:90:9","trueBody":{"id":1319,"nodeType":"Block","src":"9934:63:9","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9983:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9975:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1313,"name":"address","nodeType":"ElementaryTypeName","src":"9975:7:9","typeDescriptions":{}}},"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9975:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1312,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"9955:19:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9955:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1318,"nodeType":"RevertStatement","src":"9948:38:9"}]}},{"expression":{"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1321,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"10006:11:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1324,"indexExpression":{"id":1322,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"10018:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10006:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1325,"indexExpression":{"id":1323,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"10025:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10006:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10036:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10006:35:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1328,"nodeType":"ExpressionStatement","src":"10006:35:9"},{"condition":{"id":1329,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1288,"src":"10055:9:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1337,"nodeType":"IfStatement","src":"10051:76:9","trueBody":{"id":1336,"nodeType":"Block","src":"10066:61:9","statements":[{"eventCall":{"arguments":[{"id":1331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1282,"src":"10094:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1332,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"10101:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1333,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1286,"src":"10110:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1330,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"10085:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10085:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1335,"nodeType":"EmitStatement","src":"10080:36:9"}]}}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"8860:836:9","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":1339,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9710:8:9","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1282,"mutability":"mutable","name":"owner","nameLocation":"9727:5:9","nodeType":"VariableDeclaration","scope":1339,"src":"9719:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1281,"name":"address","nodeType":"ElementaryTypeName","src":"9719:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1284,"mutability":"mutable","name":"spender","nameLocation":"9742:7:9","nodeType":"VariableDeclaration","scope":1339,"src":"9734:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1283,"name":"address","nodeType":"ElementaryTypeName","src":"9734:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1286,"mutability":"mutable","name":"value","nameLocation":"9759:5:9","nodeType":"VariableDeclaration","scope":1339,"src":"9751:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1285,"name":"uint256","nodeType":"ElementaryTypeName","src":"9751:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"emitEvent","nameLocation":"9771:9:9","nodeType":"VariableDeclaration","scope":1339,"src":"9766:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1287,"name":"bool","nodeType":"ElementaryTypeName","src":"9766:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9718:63:9"},"returnParameters":{"id":1290,"nodeType":"ParameterList","parameters":[],"src":"9799:0:9"},"scope":1388,"src":"9701:432:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1386,"nodeType":"Block","src":"10504:387:9","statements":[{"assignments":[1350],"declarations":[{"constant":false,"id":1350,"mutability":"mutable","name":"currentAllowance","nameLocation":"10522:16:9","nodeType":"VariableDeclaration","scope":1386,"src":"10514:24:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1349,"name":"uint256","nodeType":"ElementaryTypeName","src":"10514:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1355,"initialValue":{"arguments":[{"id":1352,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"10551:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1353,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"10558:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1351,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"10541:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10541:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10514:52:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1356,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"10580:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":1359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10604:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"10604:7:9","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10599:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10599:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10613:3:9","memberName":"max","nodeType":"MemberAccess","src":"10599:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10580:36:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1385,"nodeType":"IfStatement","src":"10576:309:9","trueBody":{"id":1384,"nodeType":"Block","src":"10618:267:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1363,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"10636:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"10655:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10636:24:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1373,"nodeType":"IfStatement","src":"10632:130:9","trueBody":{"id":1372,"nodeType":"Block","src":"10662:100:9","statements":[{"errorCall":{"arguments":[{"id":1367,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"10714:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1368,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"10723:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"10741:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1366,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"10687:26:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10687:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1371,"nodeType":"RevertStatement","src":"10680:67:9"}]}},{"id":1383,"nodeType":"UncheckedBlock","src":"10775:100:9","statements":[{"expression":{"arguments":[{"id":1375,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"10812:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1376,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"10819:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1377,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1350,"src":"10828:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"10847:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10828:24:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":1380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10854:5:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1374,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1279,1339],"referencedDeclaration":1339,"src":"10803:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10803:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1382,"nodeType":"ExpressionStatement","src":"10803:57:9"}]}]}}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"10139:271:9","text":" @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10424:15:9","nodeType":"FunctionDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"owner","nameLocation":"10448:5:9","nodeType":"VariableDeclaration","scope":1387,"src":"10440:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"10440:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"spender","nameLocation":"10463:7:9","nodeType":"VariableDeclaration","scope":1387,"src":"10455:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1343,"name":"address","nodeType":"ElementaryTypeName","src":"10455:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"value","nameLocation":"10480:5:9","nodeType":"VariableDeclaration","scope":1387,"src":"10472:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"10472:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10439:47:9"},"returnParameters":{"id":1348,"nodeType":"ParameterList","parameters":[],"src":"10504:0:9"},"scope":1388,"src":"10415:476:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1389,"src":"1106:9787:9","usedErrors":[748,753,758,767,772,777],"usedEvents":[1400,1409]}],"src":"105:10789:9"},"id":9},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1466]},"id":1467,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1390,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"132:71:10","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":1466,"linearizedBaseContracts":[1466],"name":"IERC20","nameLocation":"214:6:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"227:158:10","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1400,"name":"Transfer","nameLocation":"396:8:10","nodeType":"EventDefinition","parameters":{"id":1399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1394,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"421:4:10","nodeType":"VariableDeclaration","scope":1400,"src":"405:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"405:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"443:2:10","nodeType":"VariableDeclaration","scope":1400,"src":"427:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"427:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"455:5:10","nodeType":"VariableDeclaration","scope":1400,"src":"447:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"447:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"404:57:10"},"src":"390:72:10"},{"anonymous":false,"documentation":{"id":1401,"nodeType":"StructuredDocumentation","src":"468:148:10","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1409,"name":"Approval","nameLocation":"627:8:10","nodeType":"EventDefinition","parameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1403,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"652:5:10","nodeType":"VariableDeclaration","scope":1409,"src":"636:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"636:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1405,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"675:7:10","nodeType":"VariableDeclaration","scope":1409,"src":"659:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1404,"name":"address","nodeType":"ElementaryTypeName","src":"659:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1407,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"692:5:10","nodeType":"VariableDeclaration","scope":1409,"src":"684:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1406,"name":"uint256","nodeType":"ElementaryTypeName","src":"684:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"635:63:10"},"src":"621:78:10"},{"documentation":{"id":1410,"nodeType":"StructuredDocumentation","src":"705:65:10","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":1415,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"784:11:10","nodeType":"FunctionDefinition","parameters":{"id":1411,"nodeType":"ParameterList","parameters":[],"src":"795:2:10"},"returnParameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1413,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1415,"src":"821:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"821:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"820:9:10"},"scope":1466,"src":"775:55:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"836:71:10","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":1423,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:10","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"account","nameLocation":"939:7:10","nodeType":"VariableDeclaration","scope":1423,"src":"931:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:10"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1423,"src":"971:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:10"},"scope":1466,"src":"912:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1424,"nodeType":"StructuredDocumentation","src":"986:213:10","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1433,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1213:8:10","nodeType":"FunctionDefinition","parameters":{"id":1429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1426,"mutability":"mutable","name":"to","nameLocation":"1230:2:10","nodeType":"VariableDeclaration","scope":1433,"src":"1222:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"1222:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"value","nameLocation":"1242:5:10","nodeType":"VariableDeclaration","scope":1433,"src":"1234:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"1234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1221:27:10"},"returnParameters":{"id":1432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1431,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1433,"src":"1267:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1430,"name":"bool","nodeType":"ElementaryTypeName","src":"1267:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1266:6:10"},"scope":1466,"src":"1204:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"1279:264:10","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1443,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1557:9:10","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"owner","nameLocation":"1575:5:10","nodeType":"VariableDeclaration","scope":1443,"src":"1567:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"1567:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"spender","nameLocation":"1590:7:10","nodeType":"VariableDeclaration","scope":1443,"src":"1582:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1437,"name":"address","nodeType":"ElementaryTypeName","src":"1582:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1566:32:10"},"returnParameters":{"id":1442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1441,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1443,"src":"1622:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1440,"name":"uint256","nodeType":"ElementaryTypeName","src":"1622:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1621:9:10"},"scope":1466,"src":"1548:83:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"1637:667:10","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1453,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2318:7:10","nodeType":"FunctionDefinition","parameters":{"id":1449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"spender","nameLocation":"2334:7:10","nodeType":"VariableDeclaration","scope":1453,"src":"2326:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1445,"name":"address","nodeType":"ElementaryTypeName","src":"2326:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1448,"mutability":"mutable","name":"value","nameLocation":"2351:5:10","nodeType":"VariableDeclaration","scope":1453,"src":"2343:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2325:32:10"},"returnParameters":{"id":1452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1453,"src":"2376:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1450,"name":"bool","nodeType":"ElementaryTypeName","src":"2376:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2375:6:10"},"scope":1466,"src":"2309:73:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1454,"nodeType":"StructuredDocumentation","src":"2388:297:10","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1465,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2699:12:10","nodeType":"FunctionDefinition","parameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"from","nameLocation":"2720:4:10","nodeType":"VariableDeclaration","scope":1465,"src":"2712:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1455,"name":"address","nodeType":"ElementaryTypeName","src":"2712:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"to","nameLocation":"2734:2:10","nodeType":"VariableDeclaration","scope":1465,"src":"2726:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1457,"name":"address","nodeType":"ElementaryTypeName","src":"2726:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"value","nameLocation":"2746:5:10","nodeType":"VariableDeclaration","scope":1465,"src":"2738:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"2738:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2711:41:10"},"returnParameters":{"id":1464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1465,"src":"2771:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1462,"name":"bool","nodeType":"ElementaryTypeName","src":"2771:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2770:6:10"},"scope":1466,"src":"2690:87:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1467,"src":"204:2575:10","usedErrors":[],"usedEvents":[1400,1409]}],"src":"106:2674:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1466],"IERC20Metadata":[1492]},"id":1493,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1468,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"125:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1470,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1493,"sourceUnit":1467,"src":"151:37:11","symbolAliases":[{"foreign":{"id":1469,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"159:6:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1472,"name":"IERC20","nameLocations":["306:6:11"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"306:6:11"},"id":1473,"nodeType":"InheritanceSpecifier","src":"306:6:11"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"190:87:11","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":1492,"linearizedBaseContracts":[1492,1466],"name":"IERC20Metadata","nameLocation":"288:14:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1474,"nodeType":"StructuredDocumentation","src":"319:54:11","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1479,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:11","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[],"src":"391:2:11"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1479,"src":"417:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1476,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:11"},"scope":1492,"src":"378:54:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1480,"nodeType":"StructuredDocumentation","src":"438:56:11","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1485,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:11","nodeType":"FunctionDefinition","parameters":{"id":1481,"nodeType":"ParameterList","parameters":[],"src":"514:2:11"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1485,"src":"540:13:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1482,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:11","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:11"},"scope":1492,"src":"499:56:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"561:65:11","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1491,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:11","nodeType":"FunctionDefinition","parameters":{"id":1487,"nodeType":"ParameterList","parameters":[],"src":"648:2:11"},"returnParameters":{"id":1490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1491,"src":"674:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1488,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:11"},"scope":1492,"src":"631:50:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1493,"src":"278:405:11","usedErrors":[],"usedEvents":[1400,1409]}],"src":"125:559:11"},"id":11},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","exportedSymbols":{"IERC1363":[724],"IERC20":[1466],"SafeERC20":[1901]},"id":1902,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1494,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1496,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1902,"sourceUnit":1467,"src":"141:37:12","symbolAliases":[{"foreign":{"id":1495,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"149:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1363.sol","file":"../../../interfaces/IERC1363.sol","id":1498,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1902,"sourceUnit":725,"src":"179:58:12","symbolAliases":[{"foreign":{"id":1497,"name":"IERC1363","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"187:8:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SafeERC20","contractDependencies":[],"contractKind":"library","documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"239:458:12","text":" @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":1901,"linearizedBaseContracts":[1901],"name":"SafeERC20","nameLocation":"706:9:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1500,"nodeType":"StructuredDocumentation","src":"722:65:12","text":" @dev An operation with an ERC-20 token failed."},"errorSelector":"5274afe7","id":1504,"name":"SafeERC20FailedOperation","nameLocation":"798:24:12","nodeType":"ErrorDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1502,"mutability":"mutable","name":"token","nameLocation":"831:5:12","nodeType":"VariableDeclaration","scope":1504,"src":"823:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1501,"name":"address","nodeType":"ElementaryTypeName","src":"823:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"822:15:12"},"src":"792:46:12"},{"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"844:71:12","text":" @dev Indicates a failed `decreaseAllowance` request."},"errorSelector":"e570110f","id":1513,"name":"SafeERC20FailedDecreaseAllowance","nameLocation":"926:32:12","nodeType":"ErrorDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"spender","nameLocation":"967:7:12","nodeType":"VariableDeclaration","scope":1513,"src":"959:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"959:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"currentAllowance","nameLocation":"984:16:12","nodeType":"VariableDeclaration","scope":1513,"src":"976:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1508,"name":"uint256","nodeType":"ElementaryTypeName","src":"976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"requestedDecrease","nameLocation":"1010:17:12","nodeType":"VariableDeclaration","scope":1513,"src":"1002:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"958:70:12"},"src":"920:109:12"},{"body":{"id":1536,"nodeType":"Block","src":"1291:88:12","statements":[{"expression":{"arguments":[{"id":1525,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1321:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1528,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"1343:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1349:8:12","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1433,"src":"1343:14:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1530,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"1360:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1521,"src":"1364:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1532,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1359:11:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1526,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1328:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1527,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1332:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"1328:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1328:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1524,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"1301:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1301:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1535,"nodeType":"ExpressionStatement","src":"1301:71:12"}]},"documentation":{"id":1514,"nodeType":"StructuredDocumentation","src":"1035:179:12","text":" @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."},"id":1537,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nameLocation":"1228:12:12","nodeType":"FunctionDefinition","parameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"token","nameLocation":"1248:5:12","nodeType":"VariableDeclaration","scope":1537,"src":"1241:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":1516,"nodeType":"UserDefinedTypeName","pathNode":{"id":1515,"name":"IERC20","nameLocations":["1241:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"1241:6:12"},"referencedDeclaration":1466,"src":"1241:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"to","nameLocation":"1263:2:12","nodeType":"VariableDeclaration","scope":1537,"src":"1255:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1518,"name":"address","nodeType":"ElementaryTypeName","src":"1255:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1521,"mutability":"mutable","name":"value","nameLocation":"1275:5:12","nodeType":"VariableDeclaration","scope":1537,"src":"1267:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1267:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1240:41:12"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[],"src":"1291:0:12"},"scope":1901,"src":"1219:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1563,"nodeType":"Block","src":"1708:98:12","statements":[{"expression":{"arguments":[{"id":1551,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"1738:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1554,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"1760:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:12:12","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1465,"src":"1760:18:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},{"components":[{"id":1556,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1543,"src":"1781:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1557,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1787:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"1791:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1780:17:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_address_$_t_uint256_$","typeString":"tuple(address,address,uint256)"}],"expression":{"id":1552,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1745:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1749:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"1745:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1745:53:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1550,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"1718:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:81:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1562,"nodeType":"ExpressionStatement","src":"1718:81:12"}]},"documentation":{"id":1538,"nodeType":"StructuredDocumentation","src":"1385:228:12","text":" @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."},"id":1564,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1627:16:12","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"token","nameLocation":"1651:5:12","nodeType":"VariableDeclaration","scope":1564,"src":"1644:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":1540,"nodeType":"UserDefinedTypeName","pathNode":{"id":1539,"name":"IERC20","nameLocations":["1644:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"1644:6:12"},"referencedDeclaration":1466,"src":"1644:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"from","nameLocation":"1666:4:12","nodeType":"VariableDeclaration","scope":1564,"src":"1658:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1542,"name":"address","nodeType":"ElementaryTypeName","src":"1658:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1545,"mutability":"mutable","name":"to","nameLocation":"1680:2:12","nodeType":"VariableDeclaration","scope":1564,"src":"1672:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1544,"name":"address","nodeType":"ElementaryTypeName","src":"1672:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1547,"mutability":"mutable","name":"value","nameLocation":"1692:5:12","nodeType":"VariableDeclaration","scope":1564,"src":"1684:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1546,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1643:55:12"},"returnParameters":{"id":1549,"nodeType":"ParameterList","parameters":[],"src":"1708:0:12"},"scope":1901,"src":"1618:188:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1594,"nodeType":"Block","src":"2548:139:12","statements":[{"assignments":[1576],"declarations":[{"constant":false,"id":1576,"mutability":"mutable","name":"oldAllowance","nameLocation":"2566:12:12","nodeType":"VariableDeclaration","scope":1594,"src":"2558:20:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1575,"name":"uint256","nodeType":"ElementaryTypeName","src":"2558:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1585,"initialValue":{"arguments":[{"arguments":[{"id":1581,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2605:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1901","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1901","typeString":"library SafeERC20"}],"id":1580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2597:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"2597:7:12","typeDescriptions":{}}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2597:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1583,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2612:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1577,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2581:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2587:9:12","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1443,"src":"2581:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2581:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2558:62:12"},{"expression":{"arguments":[{"id":1587,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"2643:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},{"id":1588,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1570,"src":"2650:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1589,"name":"oldAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"2659:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2674:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2659:20:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1586,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"2630:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2630:50:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1593,"nodeType":"ExpressionStatement","src":"2630:50:12"}]},"documentation":{"id":1565,"nodeType":"StructuredDocumentation","src":"1812:645:12","text":" @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1595,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nameLocation":"2471:21:12","nodeType":"FunctionDefinition","parameters":{"id":1573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"token","nameLocation":"2500:5:12","nodeType":"VariableDeclaration","scope":1595,"src":"2493:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":1567,"nodeType":"UserDefinedTypeName","pathNode":{"id":1566,"name":"IERC20","nameLocations":["2493:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"2493:6:12"},"referencedDeclaration":1466,"src":"2493:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"spender","nameLocation":"2515:7:12","nodeType":"VariableDeclaration","scope":1595,"src":"2507:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1569,"name":"address","nodeType":"ElementaryTypeName","src":"2507:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"value","nameLocation":"2532:5:12","nodeType":"VariableDeclaration","scope":1595,"src":"2524:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"2524:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2492:46:12"},"returnParameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"2548:0:12"},"scope":1901,"src":"2462:225:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1637,"nodeType":"Block","src":"3453:370:12","statements":[{"id":1636,"nodeType":"UncheckedBlock","src":"3463:354:12","statements":[{"assignments":[1607],"declarations":[{"constant":false,"id":1607,"mutability":"mutable","name":"currentAllowance","nameLocation":"3495:16:12","nodeType":"VariableDeclaration","scope":1636,"src":"3487:24:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3487:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1616,"initialValue":{"arguments":[{"arguments":[{"id":1612,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3538:4:12","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$1901","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$1901","typeString":"library SafeERC20"}],"id":1611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3530:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"3530:7:12","typeDescriptions":{}}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3530:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1614,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"3545:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1608,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"3514:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3520:9:12","memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":1443,"src":"3514:15:12","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3514:39:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3487:66:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1617,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"3571:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1618,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"3590:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3571:36:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1627,"nodeType":"IfStatement","src":"3567:160:12","trueBody":{"id":1626,"nodeType":"Block","src":"3609:118:12","statements":[{"errorCall":{"arguments":[{"id":1621,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"3667:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1622,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"3676:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1623,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"3694:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1620,"name":"SafeERC20FailedDecreaseAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3634:32:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3634:78:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1625,"nodeType":"RevertStatement","src":"3627:85:12"}]}},{"expression":{"arguments":[{"id":1629,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"3753:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},{"id":1630,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"3760:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1631,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1607,"src":"3769:16:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1632,"name":"requestedDecrease","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1603,"src":"3788:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3769:36:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"3740:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3740:66:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1635,"nodeType":"ExpressionStatement","src":"3740:66:12"}]}]},"documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"2693:657:12","text":" @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."},"id":1638,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nameLocation":"3364:21:12","nodeType":"FunctionDefinition","parameters":{"id":1604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"token","nameLocation":"3393:5:12","nodeType":"VariableDeclaration","scope":1638,"src":"3386:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":1598,"nodeType":"UserDefinedTypeName","pathNode":{"id":1597,"name":"IERC20","nameLocations":["3386:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"3386:6:12"},"referencedDeclaration":1466,"src":"3386:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1601,"mutability":"mutable","name":"spender","nameLocation":"3408:7:12","nodeType":"VariableDeclaration","scope":1638,"src":"3400:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1600,"name":"address","nodeType":"ElementaryTypeName","src":"3400:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"requestedDecrease","nameLocation":"3425:17:12","nodeType":"VariableDeclaration","scope":1638,"src":"3417:25:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1602,"name":"uint256","nodeType":"ElementaryTypeName","src":"3417:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3385:58:12"},"returnParameters":{"id":1605,"nodeType":"ParameterList","parameters":[],"src":"3453:0:12"},"scope":1901,"src":"3355:468:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1684,"nodeType":"Block","src":"4477:303:12","statements":[{"assignments":[1650],"declarations":[{"constant":false,"id":1650,"mutability":"mutable","name":"approvalCall","nameLocation":"4500:12:12","nodeType":"VariableDeclaration","scope":1684,"src":"4487:25:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1649,"name":"bytes","nodeType":"ElementaryTypeName","src":"4487:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1659,"initialValue":{"arguments":[{"expression":{"id":1653,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"4530:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4536:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"4530:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1655,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"4546:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"4555:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4545:16:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}],"expression":{"id":1651,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4515:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4519:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"4515:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4487:75:12"},{"condition":{"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4577:45:12","subExpression":{"arguments":[{"id":1661,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"4602:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},{"id":1662,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"4609:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1660,"name":"_callOptionalReturnBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1900,"src":"4578:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (contract IERC20,bytes memory) returns (bool)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4578:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1683,"nodeType":"IfStatement","src":"4573:201:12","trueBody":{"id":1682,"nodeType":"Block","src":"4624:150:12","statements":[{"expression":{"arguments":[{"id":1666,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"4658:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},{"arguments":[{"expression":{"id":1669,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"4680:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4686:7:12","memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1453,"src":"4680:13:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},{"components":[{"id":1671,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"4696:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":1672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4705:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1673,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4695:12:12","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"},{"typeIdentifier":"t_tuple$_t_address_$_t_rational_0_by_1_$","typeString":"tuple(address,int_const 0)"}],"expression":{"id":1667,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4665:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4669:10:12","memberName":"encodeCall","nodeType":"MemberAccess","src":"4665:14:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4665:43:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1665,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"4638:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4638:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1676,"nodeType":"ExpressionStatement","src":"4638:71:12"},{"expression":{"arguments":[{"id":1678,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"4743:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},{"id":1679,"name":"approvalCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"4750:12:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1677,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1859,"src":"4723:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1681,"nodeType":"ExpressionStatement","src":"4723:40:12"}]}}]},"documentation":{"id":1639,"nodeType":"StructuredDocumentation","src":"3829:566:12","text":" @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."},"id":1685,"implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"4409:12:12","nodeType":"FunctionDefinition","parameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"token","nameLocation":"4429:5:12","nodeType":"VariableDeclaration","scope":1685,"src":"4422:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":1641,"nodeType":"UserDefinedTypeName","pathNode":{"id":1640,"name":"IERC20","nameLocations":["4422:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"4422:6:12"},"referencedDeclaration":1466,"src":"4422:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"spender","nameLocation":"4444:7:12","nodeType":"VariableDeclaration","scope":1685,"src":"4436:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"4436:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1646,"mutability":"mutable","name":"value","nameLocation":"4461:5:12","nodeType":"VariableDeclaration","scope":1685,"src":"4453:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"4453:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4421:46:12"},"returnParameters":{"id":1648,"nodeType":"ParameterList","parameters":[],"src":"4477:0:12"},"scope":1901,"src":"4400:380:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1727,"nodeType":"Block","src":"5227:219:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1698,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"5241:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5244:4:12","memberName":"code","nodeType":"MemberAccess","src":"5241:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5249:6:12","memberName":"length","nodeType":"MemberAccess","src":"5241:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5259:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5241:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5327:39:12","subExpression":{"arguments":[{"id":1712,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"5350:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1713,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"5354:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1714,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"5361:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1710,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"5328:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5334:15:12","memberName":"transferAndCall","nodeType":"MemberAccess","referencedDeclaration":675,"src":"5328:21:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5328:38:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1725,"nodeType":"IfStatement","src":"5323:117:12","trueBody":{"id":1724,"nodeType":"Block","src":"5368:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1720,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"5422:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}],"id":1719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:12","typeDescriptions":{}}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1717,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"5389:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1723,"nodeType":"RevertStatement","src":"5382:47:12"}]}},"id":1726,"nodeType":"IfStatement","src":"5237:203:12","trueBody":{"id":1709,"nodeType":"Block","src":"5262:55:12","statements":[{"expression":{"arguments":[{"id":1704,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"5289:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}},{"id":1705,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"5296:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"5300:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1703,"name":"safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1537,"src":"5276:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5276:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1708,"nodeType":"ExpressionStatement","src":"5276:30:12"}]}}]},"documentation":{"id":1686,"nodeType":"StructuredDocumentation","src":"4786:333:12","text":" @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1728,"implemented":true,"kind":"function","modifiers":[],"name":"transferAndCallRelaxed","nameLocation":"5133:22:12","nodeType":"FunctionDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1689,"mutability":"mutable","name":"token","nameLocation":"5165:5:12","nodeType":"VariableDeclaration","scope":1728,"src":"5156:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"},"typeName":{"id":1688,"nodeType":"UserDefinedTypeName","pathNode":{"id":1687,"name":"IERC1363","nameLocations":["5156:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"5156:8:12"},"referencedDeclaration":724,"src":"5156:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"to","nameLocation":"5180:2:12","nodeType":"VariableDeclaration","scope":1728,"src":"5172:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1690,"name":"address","nodeType":"ElementaryTypeName","src":"5172:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"value","nameLocation":"5192:5:12","nodeType":"VariableDeclaration","scope":1728,"src":"5184:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"5184:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1695,"mutability":"mutable","name":"data","nameLocation":"5212:4:12","nodeType":"VariableDeclaration","scope":1728,"src":"5199:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1694,"name":"bytes","nodeType":"ElementaryTypeName","src":"5199:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5155:62:12"},"returnParameters":{"id":1697,"nodeType":"ParameterList","parameters":[],"src":"5227:0:12"},"scope":1901,"src":"5124:322:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1774,"nodeType":"Block","src":"5965:239:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1743,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"5979:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5982:4:12","memberName":"code","nodeType":"MemberAccess","src":"5979:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5987:6:12","memberName":"length","nodeType":"MemberAccess","src":"5979:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5997:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5979:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6075:49:12","subExpression":{"arguments":[{"id":1758,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"6102:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1759,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"6108:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6112:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1761,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"6119:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1756,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"6076:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6082:19:12","memberName":"transferFromAndCall","nodeType":"MemberAccess","referencedDeclaration":701,"src":"6076:25:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) external returns (bool)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6076:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1772,"nodeType":"IfStatement","src":"6071:127:12","trueBody":{"id":1771,"nodeType":"Block","src":"6126:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1767,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"6180:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}],"id":1766,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6172:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"6172:7:12","typeDescriptions":{}}},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6172:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1764,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"6147:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6147:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1770,"nodeType":"RevertStatement","src":"6140:47:12"}]}},"id":1773,"nodeType":"IfStatement","src":"5975:223:12","trueBody":{"id":1755,"nodeType":"Block","src":"6000:65:12","statements":[{"expression":{"arguments":[{"id":1749,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"6031:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}},{"id":1750,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"6038:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1751,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"6044:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"6048:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1748,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1564,"src":"6014:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6014:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1754,"nodeType":"ExpressionStatement","src":"6014:40:12"}]}}]},"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"5452:341:12","text":" @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."},"id":1775,"implemented":true,"kind":"function","modifiers":[],"name":"transferFromAndCallRelaxed","nameLocation":"5807:26:12","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"token","nameLocation":"5852:5:12","nodeType":"VariableDeclaration","scope":1775,"src":"5843:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"},"typeName":{"id":1731,"nodeType":"UserDefinedTypeName","pathNode":{"id":1730,"name":"IERC1363","nameLocations":["5843:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"5843:8:12"},"referencedDeclaration":724,"src":"5843:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1734,"mutability":"mutable","name":"from","nameLocation":"5875:4:12","nodeType":"VariableDeclaration","scope":1775,"src":"5867:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1733,"name":"address","nodeType":"ElementaryTypeName","src":"5867:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1736,"mutability":"mutable","name":"to","nameLocation":"5897:2:12","nodeType":"VariableDeclaration","scope":1775,"src":"5889:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1735,"name":"address","nodeType":"ElementaryTypeName","src":"5889:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"value","nameLocation":"5917:5:12","nodeType":"VariableDeclaration","scope":1775,"src":"5909:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1737,"name":"uint256","nodeType":"ElementaryTypeName","src":"5909:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"data","nameLocation":"5945:4:12","nodeType":"VariableDeclaration","scope":1775,"src":"5932:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1739,"name":"bytes","nodeType":"ElementaryTypeName","src":"5932:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5833:122:12"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"5965:0:12"},"scope":1901,"src":"5798:406:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1817,"nodeType":"Block","src":"6971:218:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1788,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"6985:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6988:4:12","memberName":"code","nodeType":"MemberAccess","src":"6985:7:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6993:6:12","memberName":"length","nodeType":"MemberAccess","src":"6985:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7003:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6985:19:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7071:38:12","subExpression":{"arguments":[{"id":1802,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"7093:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7097:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1804,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1785,"src":"7104:4:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1800,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"7072:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}},"id":1801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7078:14:12","memberName":"approveAndCall","nodeType":"MemberAccess","referencedDeclaration":723,"src":"7072:20:12","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,uint256,bytes memory) external returns (bool)"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7072:37:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1815,"nodeType":"IfStatement","src":"7067:116:12","trueBody":{"id":1814,"nodeType":"Block","src":"7111:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1810,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"7165:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}],"id":1809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7157:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"7157:7:12","typeDescriptions":{}}},"id":1811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7157:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1807,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"7132:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7132:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1813,"nodeType":"RevertStatement","src":"7125:47:12"}]}},"id":1816,"nodeType":"IfStatement","src":"6981:202:12","trueBody":{"id":1799,"nodeType":"Block","src":"7006:55:12","statements":[{"expression":{"arguments":[{"id":1794,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"7033:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}},{"id":1795,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"7040:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"7044:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1793,"name":"forceApprove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"7020:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$","typeString":"function (contract IERC20,address,uint256)"}},"id":1797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7020:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1798,"nodeType":"ExpressionStatement","src":"7020:30:12"}]}}]},"documentation":{"id":1776,"nodeType":"StructuredDocumentation","src":"6210:654:12","text":" @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."},"id":1818,"implemented":true,"kind":"function","modifiers":[],"name":"approveAndCallRelaxed","nameLocation":"6878:21:12","nodeType":"FunctionDefinition","parameters":{"id":1786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"token","nameLocation":"6909:5:12","nodeType":"VariableDeclaration","scope":1818,"src":"6900:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"},"typeName":{"id":1778,"nodeType":"UserDefinedTypeName","pathNode":{"id":1777,"name":"IERC1363","nameLocations":["6900:8:12"],"nodeType":"IdentifierPath","referencedDeclaration":724,"src":"6900:8:12"},"referencedDeclaration":724,"src":"6900:8:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1363_$724","typeString":"contract IERC1363"}},"visibility":"internal"},{"constant":false,"id":1781,"mutability":"mutable","name":"to","nameLocation":"6924:2:12","nodeType":"VariableDeclaration","scope":1818,"src":"6916:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"6916:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"value","nameLocation":"6936:5:12","nodeType":"VariableDeclaration","scope":1818,"src":"6928:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"6928:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1785,"mutability":"mutable","name":"data","nameLocation":"6956:4:12","nodeType":"VariableDeclaration","scope":1818,"src":"6943:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1784,"name":"bytes","nodeType":"ElementaryTypeName","src":"6943:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6899:62:12"},"returnParameters":{"id":1787,"nodeType":"ParameterList","parameters":[],"src":"6971:0:12"},"scope":1901,"src":"6869:320:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1858,"nodeType":"Block","src":"7756:650:12","statements":[{"assignments":[1828],"declarations":[{"constant":false,"id":1828,"mutability":"mutable","name":"returnSize","nameLocation":"7774:10:12","nodeType":"VariableDeclaration","scope":1858,"src":"7766:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"7766:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1829,"nodeType":"VariableDeclarationStatement","src":"7766:18:12"},{"assignments":[1831],"declarations":[{"constant":false,"id":1831,"mutability":"mutable","name":"returnValue","nameLocation":"7802:11:12","nodeType":"VariableDeclaration","scope":1858,"src":"7794:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"7794:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1832,"nodeType":"VariableDeclarationStatement","src":"7794:19:12"},{"AST":{"nativeSrc":"7848:396:12","nodeType":"YulBlock","src":"7848:396:12","statements":[{"nativeSrc":"7862:75:12","nodeType":"YulVariableDeclaration","src":"7862:75:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"7882:3:12","nodeType":"YulIdentifier","src":"7882:3:12"},"nativeSrc":"7882:5:12","nodeType":"YulFunctionCall","src":"7882:5:12"},{"name":"token","nativeSrc":"7889:5:12","nodeType":"YulIdentifier","src":"7889:5:12"},{"kind":"number","nativeSrc":"7896:1:12","nodeType":"YulLiteral","src":"7896:1:12","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"7903:4:12","nodeType":"YulIdentifier","src":"7903:4:12"},{"kind":"number","nativeSrc":"7909:4:12","nodeType":"YulLiteral","src":"7909:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7899:3:12","nodeType":"YulIdentifier","src":"7899:3:12"},"nativeSrc":"7899:15:12","nodeType":"YulFunctionCall","src":"7899:15:12"},{"arguments":[{"name":"data","nativeSrc":"7922:4:12","nodeType":"YulIdentifier","src":"7922:4:12"}],"functionName":{"name":"mload","nativeSrc":"7916:5:12","nodeType":"YulIdentifier","src":"7916:5:12"},"nativeSrc":"7916:11:12","nodeType":"YulFunctionCall","src":"7916:11:12"},{"kind":"number","nativeSrc":"7929:1:12","nodeType":"YulLiteral","src":"7929:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"7932:4:12","nodeType":"YulLiteral","src":"7932:4:12","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"7877:4:12","nodeType":"YulIdentifier","src":"7877:4:12"},"nativeSrc":"7877:60:12","nodeType":"YulFunctionCall","src":"7877:60:12"},"variables":[{"name":"success","nativeSrc":"7866:7:12","nodeType":"YulTypedName","src":"7866:7:12","type":""}]},{"body":{"nativeSrc":"7998:157:12","nodeType":"YulBlock","src":"7998:157:12","statements":[{"nativeSrc":"8016:22:12","nodeType":"YulVariableDeclaration","src":"8016:22:12","value":{"arguments":[{"kind":"number","nativeSrc":"8033:4:12","nodeType":"YulLiteral","src":"8033:4:12","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"8027:5:12","nodeType":"YulIdentifier","src":"8027:5:12"},"nativeSrc":"8027:11:12","nodeType":"YulFunctionCall","src":"8027:11:12"},"variables":[{"name":"ptr","nativeSrc":"8020:3:12","nodeType":"YulTypedName","src":"8020:3:12","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8070:3:12","nodeType":"YulIdentifier","src":"8070:3:12"},{"kind":"number","nativeSrc":"8075:1:12","nodeType":"YulLiteral","src":"8075:1:12","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8078:14:12","nodeType":"YulIdentifier","src":"8078:14:12"},"nativeSrc":"8078:16:12","nodeType":"YulFunctionCall","src":"8078:16:12"}],"functionName":{"name":"returndatacopy","nativeSrc":"8055:14:12","nodeType":"YulIdentifier","src":"8055:14:12"},"nativeSrc":"8055:40:12","nodeType":"YulFunctionCall","src":"8055:40:12"},"nativeSrc":"8055:40:12","nodeType":"YulExpressionStatement","src":"8055:40:12"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"8119:3:12","nodeType":"YulIdentifier","src":"8119:3:12"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8124:14:12","nodeType":"YulIdentifier","src":"8124:14:12"},"nativeSrc":"8124:16:12","nodeType":"YulFunctionCall","src":"8124:16:12"}],"functionName":{"name":"revert","nativeSrc":"8112:6:12","nodeType":"YulIdentifier","src":"8112:6:12"},"nativeSrc":"8112:29:12","nodeType":"YulFunctionCall","src":"8112:29:12"},"nativeSrc":"8112:29:12","nodeType":"YulExpressionStatement","src":"8112:29:12"}]},"condition":{"arguments":[{"name":"success","nativeSrc":"7989:7:12","nodeType":"YulIdentifier","src":"7989:7:12"}],"functionName":{"name":"iszero","nativeSrc":"7982:6:12","nodeType":"YulIdentifier","src":"7982:6:12"},"nativeSrc":"7982:15:12","nodeType":"YulFunctionCall","src":"7982:15:12"},"nativeSrc":"7979:176:12","nodeType":"YulIf","src":"7979:176:12"},{"nativeSrc":"8168:30:12","nodeType":"YulAssignment","src":"8168:30:12","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"8182:14:12","nodeType":"YulIdentifier","src":"8182:14:12"},"nativeSrc":"8182:16:12","nodeType":"YulFunctionCall","src":"8182:16:12"},"variableNames":[{"name":"returnSize","nativeSrc":"8168:10:12","nodeType":"YulIdentifier","src":"8168:10:12"}]},{"nativeSrc":"8211:23:12","nodeType":"YulAssignment","src":"8211:23:12","value":{"arguments":[{"kind":"number","nativeSrc":"8232:1:12","nodeType":"YulLiteral","src":"8232:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"8226:5:12","nodeType":"YulIdentifier","src":"8226:5:12"},"nativeSrc":"8226:8:12","nodeType":"YulFunctionCall","src":"8226:8:12"},"variableNames":[{"name":"returnValue","nativeSrc":"8211:11:12","nodeType":"YulIdentifier","src":"8211:11:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1824,"isOffset":false,"isSlot":false,"src":"7903:4:12","valueSize":1},{"declaration":1824,"isOffset":false,"isSlot":false,"src":"7922:4:12","valueSize":1},{"declaration":1828,"isOffset":false,"isSlot":false,"src":"8168:10:12","valueSize":1},{"declaration":1831,"isOffset":false,"isSlot":false,"src":"8211:11:12","valueSize":1},{"declaration":1822,"isOffset":false,"isSlot":false,"src":"7889:5:12","valueSize":1}],"flags":["memory-safe"],"id":1833,"nodeType":"InlineAssembly","src":"7823:421:12"},{"condition":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1834,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1828,"src":"8258:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8272:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8258:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1831,"src":"8310:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8325:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8310:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8258:68:12","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1839,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"8284:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}],"id":1838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8276:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1837,"name":"address","nodeType":"ElementaryTypeName","src":"8276:7:12","typeDescriptions":{}}},"id":1840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8276:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8291:4:12","memberName":"code","nodeType":"MemberAccess","src":"8276:19:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8296:6:12","memberName":"length","nodeType":"MemberAccess","src":"8276:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8306:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8276:31:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1857,"nodeType":"IfStatement","src":"8254:146:12","trueBody":{"id":1856,"nodeType":"Block","src":"8328:72:12","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":1852,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"8382:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}],"id":1851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8374:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1850,"name":"address","nodeType":"ElementaryTypeName","src":"8374:7:12","typeDescriptions":{}}},"id":1853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1849,"name":"SafeERC20FailedOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"8349:24:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8349:40:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1855,"nodeType":"RevertStatement","src":"8342:47:12"}]}}]},"documentation":{"id":1819,"nodeType":"StructuredDocumentation","src":"7195:486:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."},"id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nameLocation":"7695:19:12","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1822,"mutability":"mutable","name":"token","nameLocation":"7722:5:12","nodeType":"VariableDeclaration","scope":1859,"src":"7715:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":1821,"nodeType":"UserDefinedTypeName","pathNode":{"id":1820,"name":"IERC20","nameLocations":["7715:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"7715:6:12"},"referencedDeclaration":1466,"src":"7715:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1824,"mutability":"mutable","name":"data","nameLocation":"7742:4:12","nodeType":"VariableDeclaration","scope":1859,"src":"7729:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1823,"name":"bytes","nodeType":"ElementaryTypeName","src":"7729:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7714:33:12"},"returnParameters":{"id":1826,"nodeType":"ParameterList","parameters":[],"src":"7756:0:12"},"scope":1901,"src":"7686:720:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1899,"nodeType":"Block","src":"8997:391:12","statements":[{"assignments":[1871],"declarations":[{"constant":false,"id":1871,"mutability":"mutable","name":"success","nameLocation":"9012:7:12","nodeType":"VariableDeclaration","scope":1899,"src":"9007:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1870,"name":"bool","nodeType":"ElementaryTypeName","src":"9007:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1872,"nodeType":"VariableDeclarationStatement","src":"9007:12:12"},{"assignments":[1874],"declarations":[{"constant":false,"id":1874,"mutability":"mutable","name":"returnSize","nameLocation":"9037:10:12","nodeType":"VariableDeclaration","scope":1899,"src":"9029:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"9029:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1875,"nodeType":"VariableDeclarationStatement","src":"9029:18:12"},{"assignments":[1877],"declarations":[{"constant":false,"id":1877,"mutability":"mutable","name":"returnValue","nameLocation":"9065:11:12","nodeType":"VariableDeclaration","scope":1899,"src":"9057:19:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"9057:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1878,"nodeType":"VariableDeclarationStatement","src":"9057:19:12"},{"AST":{"nativeSrc":"9111:174:12","nodeType":"YulBlock","src":"9111:174:12","statements":[{"nativeSrc":"9125:71:12","nodeType":"YulAssignment","src":"9125:71:12","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"9141:3:12","nodeType":"YulIdentifier","src":"9141:3:12"},"nativeSrc":"9141:5:12","nodeType":"YulFunctionCall","src":"9141:5:12"},{"name":"token","nativeSrc":"9148:5:12","nodeType":"YulIdentifier","src":"9148:5:12"},{"kind":"number","nativeSrc":"9155:1:12","nodeType":"YulLiteral","src":"9155:1:12","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"9162:4:12","nodeType":"YulIdentifier","src":"9162:4:12"},{"kind":"number","nativeSrc":"9168:4:12","nodeType":"YulLiteral","src":"9168:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9158:3:12","nodeType":"YulIdentifier","src":"9158:3:12"},"nativeSrc":"9158:15:12","nodeType":"YulFunctionCall","src":"9158:15:12"},{"arguments":[{"name":"data","nativeSrc":"9181:4:12","nodeType":"YulIdentifier","src":"9181:4:12"}],"functionName":{"name":"mload","nativeSrc":"9175:5:12","nodeType":"YulIdentifier","src":"9175:5:12"},"nativeSrc":"9175:11:12","nodeType":"YulFunctionCall","src":"9175:11:12"},{"kind":"number","nativeSrc":"9188:1:12","nodeType":"YulLiteral","src":"9188:1:12","type":"","value":"0"},{"kind":"number","nativeSrc":"9191:4:12","nodeType":"YulLiteral","src":"9191:4:12","type":"","value":"0x20"}],"functionName":{"name":"call","nativeSrc":"9136:4:12","nodeType":"YulIdentifier","src":"9136:4:12"},"nativeSrc":"9136:60:12","nodeType":"YulFunctionCall","src":"9136:60:12"},"variableNames":[{"name":"success","nativeSrc":"9125:7:12","nodeType":"YulIdentifier","src":"9125:7:12"}]},{"nativeSrc":"9209:30:12","nodeType":"YulAssignment","src":"9209:30:12","value":{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"9223:14:12","nodeType":"YulIdentifier","src":"9223:14:12"},"nativeSrc":"9223:16:12","nodeType":"YulFunctionCall","src":"9223:16:12"},"variableNames":[{"name":"returnSize","nativeSrc":"9209:10:12","nodeType":"YulIdentifier","src":"9209:10:12"}]},{"nativeSrc":"9252:23:12","nodeType":"YulAssignment","src":"9252:23:12","value":{"arguments":[{"kind":"number","nativeSrc":"9273:1:12","nodeType":"YulLiteral","src":"9273:1:12","type":"","value":"0"}],"functionName":{"name":"mload","nativeSrc":"9267:5:12","nodeType":"YulIdentifier","src":"9267:5:12"},"nativeSrc":"9267:8:12","nodeType":"YulFunctionCall","src":"9267:8:12"},"variableNames":[{"name":"returnValue","nativeSrc":"9252:11:12","nodeType":"YulIdentifier","src":"9252:11:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1865,"isOffset":false,"isSlot":false,"src":"9162:4:12","valueSize":1},{"declaration":1865,"isOffset":false,"isSlot":false,"src":"9181:4:12","valueSize":1},{"declaration":1874,"isOffset":false,"isSlot":false,"src":"9209:10:12","valueSize":1},{"declaration":1877,"isOffset":false,"isSlot":false,"src":"9252:11:12","valueSize":1},{"declaration":1871,"isOffset":false,"isSlot":false,"src":"9125:7:12","valueSize":1},{"declaration":1863,"isOffset":false,"isSlot":false,"src":"9148:5:12","valueSize":1}],"flags":["memory-safe"],"id":1879,"nodeType":"InlineAssembly","src":"9086:199:12"},{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1880,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1871,"src":"9301:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"returnSize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"9313:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9327:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9313:15:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1892,"name":"returnValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"9364:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9364:16:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9313:67:12","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":1886,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1863,"src":"9339:5:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}],"id":1885,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1884,"name":"address","nodeType":"ElementaryTypeName","src":"9331:7:12","typeDescriptions":{}}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9346:4:12","memberName":"code","nodeType":"MemberAccess","src":"9331:19:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9351:6:12","memberName":"length","nodeType":"MemberAccess","src":"9331:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9360:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9331:30:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1896,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9312:69:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9301:80:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1869,"id":1898,"nodeType":"Return","src":"9294:87:12"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"8412:491:12","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."},"id":1900,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturnBool","nameLocation":"8917:23:12","nodeType":"FunctionDefinition","parameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"token","nameLocation":"8948:5:12","nodeType":"VariableDeclaration","scope":1900,"src":"8941:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":1862,"nodeType":"UserDefinedTypeName","pathNode":{"id":1861,"name":"IERC20","nameLocations":["8941:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"8941:6:12"},"referencedDeclaration":1466,"src":"8941:6:12","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":1865,"mutability":"mutable","name":"data","nameLocation":"8968:4:12","nodeType":"VariableDeclaration","scope":1900,"src":"8955:17:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1864,"name":"bytes","nodeType":"ElementaryTypeName","src":"8955:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8940:33:12"},"returnParameters":{"id":1869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1900,"src":"8991:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1867,"name":"bool","nodeType":"ElementaryTypeName","src":"8991:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8990:6:12"},"scope":1901,"src":"8908:480:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1902,"src":"698:8692:12","usedErrors":[1504,1513],"usedEvents":[]}],"src":"115:9276:12"},"id":12},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1931]},"id":1932,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1903,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"127:496:13","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1931,"linearizedBaseContracts":[1931],"name":"Context","nameLocation":"642:7:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":1912,"nodeType":"Block","src":"718:34:13","statements":[{"expression":{"expression":{"id":1909,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:13","memberName":"sender","nodeType":"MemberAccess","src":"735:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1908,"id":1911,"nodeType":"Return","src":"728:17:13"}]},"id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:13","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[],"src":"675:2:13"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1913,"src":"709:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:13"},"scope":1931,"src":"656:96:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1921,"nodeType":"Block","src":"825:32:13","statements":[{"expression":{"expression":{"id":1918,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:13","memberName":"data","nodeType":"MemberAccess","src":"842:8:13","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1917,"id":1920,"nodeType":"Return","src":"835:15:13"}]},"id":1922,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:13","nodeType":"FunctionDefinition","parameters":{"id":1914,"nodeType":"ParameterList","parameters":[],"src":"775:2:13"},"returnParameters":{"id":1917,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1922,"src":"809:14:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1915,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:13"},"scope":1931,"src":"758:99:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1929,"nodeType":"Block","src":"935:25:13","statements":[{"expression":{"hexValue":"30","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1926,"id":1928,"nodeType":"Return","src":"945:8:13"}]},"id":1930,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:13","nodeType":"FunctionDefinition","parameters":{"id":1923,"nodeType":"ParameterList","parameters":[],"src":"892:2:13"},"returnParameters":{"id":1926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1925,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1930,"src":"926:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1924,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:13"},"scope":1931,"src":"863:97:13","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1932,"src":"624:338:13","usedErrors":[],"usedEvents":[]}],"src":"101:862:13"},"id":13},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1983]},"id":1984,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1933,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1934,"nodeType":"StructuredDocumentation","src":"125:489:14","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1983,"linearizedBaseContracts":[1983],"name":"Panic","nameLocation":"665:5:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1935,"nodeType":"StructuredDocumentation","src":"677:36:14","text":"@dev generic / unspecified error"},"id":1938,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:14","nodeType":"VariableDeclaration","scope":1983,"src":"718:40:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1936,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1939,"nodeType":"StructuredDocumentation","src":"764:37:14","text":"@dev used by the assert() builtin"},"id":1942,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:14","nodeType":"VariableDeclaration","scope":1983,"src":"806:39:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1943,"nodeType":"StructuredDocumentation","src":"851:41:14","text":"@dev arithmetic underflow or overflow"},"id":1946,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:14","nodeType":"VariableDeclaration","scope":1983,"src":"897:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1944,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:14","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1947,"nodeType":"StructuredDocumentation","src":"950:35:14","text":"@dev division or modulo by zero"},"id":1950,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:14","nodeType":"VariableDeclaration","scope":1983,"src":"990:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1948,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:14","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1951,"nodeType":"StructuredDocumentation","src":"1045:30:14","text":"@dev enum conversion error"},"id":1954,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:14","nodeType":"VariableDeclaration","scope":1983,"src":"1080:54:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1952,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:14","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1955,"nodeType":"StructuredDocumentation","src":"1140:36:14","text":"@dev invalid encoding in storage"},"id":1958,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:14","nodeType":"VariableDeclaration","scope":1983,"src":"1181:55:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1956,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:14","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1959,"nodeType":"StructuredDocumentation","src":"1242:24:14","text":"@dev empty array pop"},"id":1962,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:14","nodeType":"VariableDeclaration","scope":1983,"src":"1271:48:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:14","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"1325:35:14","text":"@dev array out of bounds access"},"id":1966,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:14","nodeType":"VariableDeclaration","scope":1983,"src":"1365:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1964,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:14","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"1423:65:14","text":"@dev resource error (too large allocation or too large array)"},"id":1970,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:14","nodeType":"VariableDeclaration","scope":1983,"src":"1493:47:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1968,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:14","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1971,"nodeType":"StructuredDocumentation","src":"1546:42:14","text":"@dev calling invalid internal function"},"id":1974,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:14","nodeType":"VariableDeclaration","scope":1983,"src":"1593:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:14","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1981,"nodeType":"Block","src":"1819:151:14","statements":[{"AST":{"nativeSrc":"1854:110:14","nodeType":"YulBlock","src":"1854:110:14","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:14","nodeType":"YulLiteral","src":"1875:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:14","nodeType":"YulLiteral","src":"1881:10:14","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:14","nodeType":"YulIdentifier","src":"1868:6:14"},"nativeSrc":"1868:24:14","nodeType":"YulFunctionCall","src":"1868:24:14"},"nativeSrc":"1868:24:14","nodeType":"YulExpressionStatement","src":"1868:24:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:14","nodeType":"YulLiteral","src":"1912:4:14","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:14","nodeType":"YulIdentifier","src":"1918:4:14"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:14","nodeType":"YulIdentifier","src":"1905:6:14"},"nativeSrc":"1905:18:14","nodeType":"YulFunctionCall","src":"1905:18:14"},"nativeSrc":"1905:18:14","nodeType":"YulExpressionStatement","src":"1905:18:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:14","nodeType":"YulLiteral","src":"1943:4:14","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:14","nodeType":"YulLiteral","src":"1949:4:14","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:14","nodeType":"YulIdentifier","src":"1936:6:14"},"nativeSrc":"1936:18:14","nodeType":"YulFunctionCall","src":"1936:18:14"},"nativeSrc":"1936:18:14","nodeType":"YulExpressionStatement","src":"1936:18:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":1977,"isOffset":false,"isSlot":false,"src":"1918:4:14","valueSize":1}],"flags":["memory-safe"],"id":1980,"nodeType":"InlineAssembly","src":"1829:135:14"}]},"documentation":{"id":1975,"nodeType":"StructuredDocumentation","src":"1658:113:14","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1982,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:14","nodeType":"FunctionDefinition","parameters":{"id":1978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1977,"mutability":"mutable","name":"code","nameLocation":"1799:4:14","nodeType":"VariableDeclaration","scope":1982,"src":"1791:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1976,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:14"},"returnParameters":{"id":1979,"nodeType":"ParameterList","parameters":[],"src":"1819:0:14"},"scope":1983,"src":"1776:194:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1984,"src":"657:1315:14","usedErrors":[],"usedEvents":[]}],"src":"99:1874:14"},"id":14},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5223],"SafeCast":[6988],"SignedMath":[7132],"Strings":[3183]},"id":3184,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1985,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3184,"sourceUnit":5224,"src":"127:37:15","symbolAliases":[{"foreign":{"id":1986,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"135:4:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3184,"sourceUnit":6989,"src":"165:45:15","symbolAliases":[{"foreign":{"id":1988,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"173:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1991,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3184,"sourceUnit":7133,"src":"211:49:15","symbolAliases":[{"foreign":{"id":1990,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"219:10:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1992,"nodeType":"StructuredDocumentation","src":"262:34:15","text":" @dev String operations."},"fullyImplemented":true,"id":3183,"linearizedBaseContracts":[3183],"name":"Strings","nameLocation":"305:7:15","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1994,"libraryName":{"id":1993,"name":"SafeCast","nameLocations":["325:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":6988,"src":"325:8:15"},"nodeType":"UsingForDirective","src":"319:21:15"},{"constant":true,"id":1997,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:15","nodeType":"VariableDeclaration","scope":3183,"src":"346:56:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1995,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2000,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:15","nodeType":"VariableDeclaration","scope":3183,"src":"408:42:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1998,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:15","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"457:81:15","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2007,"name":"StringsInsufficientHexLength","nameLocation":"549:28:15","nodeType":"ErrorDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"value","nameLocation":"586:5:15","nodeType":"VariableDeclaration","scope":2007,"src":"578:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"578:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"length","nameLocation":"601:6:15","nodeType":"VariableDeclaration","scope":2007,"src":"593:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2004,"name":"uint256","nodeType":"ElementaryTypeName","src":"593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"577:31:15"},"src":"543:66:15"},{"documentation":{"id":2008,"nodeType":"StructuredDocumentation","src":"615:108:15","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2010,"name":"StringsInvalidChar","nameLocation":"734:18:15","nodeType":"ErrorDefinition","parameters":{"id":2009,"nodeType":"ParameterList","parameters":[],"src":"752:2:15"},"src":"728:27:15"},{"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"761:84:15","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2013,"name":"StringsInvalidAddressFormat","nameLocation":"856:27:15","nodeType":"ErrorDefinition","parameters":{"id":2012,"nodeType":"ParameterList","parameters":[],"src":"883:2:15"},"src":"850:36:15"},{"body":{"id":2060,"nodeType":"Block","src":"1058:561:15","statements":[{"id":2059,"nodeType":"UncheckedBlock","src":"1068:545:15","statements":[{"assignments":[2022],"declarations":[{"constant":false,"id":2022,"mutability":"mutable","name":"length","nameLocation":"1100:6:15","nodeType":"VariableDeclaration","scope":2059,"src":"1092:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"1092:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2029,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"1120:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2023,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"1109:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5223_$","typeString":"type(library Math)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1114:5:15","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4995,"src":"1109:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1109:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1129:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1109:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1092:38:15"},{"assignments":[2031],"declarations":[{"constant":false,"id":2031,"mutability":"mutable","name":"buffer","nameLocation":"1158:6:15","nodeType":"VariableDeclaration","scope":2059,"src":"1144:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2030,"name":"string","nodeType":"ElementaryTypeName","src":"1144:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2036,"initialValue":{"arguments":[{"id":2034,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2022,"src":"1178:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1167:10:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2032,"name":"string","nodeType":"ElementaryTypeName","src":"1171:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1167:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1144:41:15"},{"assignments":[2038],"declarations":[{"constant":false,"id":2038,"mutability":"mutable","name":"ptr","nameLocation":"1207:3:15","nodeType":"VariableDeclaration","scope":2059,"src":"1199:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"1199:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2039,"nodeType":"VariableDeclarationStatement","src":"1199:11:15"},{"AST":{"nativeSrc":"1249:67:15","nodeType":"YulBlock","src":"1249:67:15","statements":[{"nativeSrc":"1267:35:15","nodeType":"YulAssignment","src":"1267:35:15","value":{"arguments":[{"name":"buffer","nativeSrc":"1278:6:15","nodeType":"YulIdentifier","src":"1278:6:15"},{"arguments":[{"kind":"number","nativeSrc":"1290:2:15","nodeType":"YulLiteral","src":"1290:2:15","type":"","value":"32"},{"name":"length","nativeSrc":"1294:6:15","nodeType":"YulIdentifier","src":"1294:6:15"}],"functionName":{"name":"add","nativeSrc":"1286:3:15","nodeType":"YulIdentifier","src":"1286:3:15"},"nativeSrc":"1286:15:15","nodeType":"YulFunctionCall","src":"1286:15:15"}],"functionName":{"name":"add","nativeSrc":"1274:3:15","nodeType":"YulIdentifier","src":"1274:3:15"},"nativeSrc":"1274:28:15","nodeType":"YulFunctionCall","src":"1274:28:15"},"variableNames":[{"name":"ptr","nativeSrc":"1267:3:15","nodeType":"YulIdentifier","src":"1267:3:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2031,"isOffset":false,"isSlot":false,"src":"1278:6:15","valueSize":1},{"declaration":2022,"isOffset":false,"isSlot":false,"src":"1294:6:15","valueSize":1},{"declaration":2038,"isOffset":false,"isSlot":false,"src":"1267:3:15","valueSize":1}],"flags":["memory-safe"],"id":2040,"nodeType":"InlineAssembly","src":"1224:92:15"},{"body":{"id":2055,"nodeType":"Block","src":"1342:234:15","statements":[{"expression":{"id":2043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1360:5:15","subExpression":{"id":2042,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"1360:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2044,"nodeType":"ExpressionStatement","src":"1360:5:15"},{"AST":{"nativeSrc":"1408:86:15","nodeType":"YulBlock","src":"1408:86:15","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1438:3:15","nodeType":"YulIdentifier","src":"1438:3:15"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1452:5:15","nodeType":"YulIdentifier","src":"1452:5:15"},{"kind":"number","nativeSrc":"1459:2:15","nodeType":"YulLiteral","src":"1459:2:15","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1448:3:15","nodeType":"YulIdentifier","src":"1448:3:15"},"nativeSrc":"1448:14:15","nodeType":"YulFunctionCall","src":"1448:14:15"},{"name":"HEX_DIGITS","nativeSrc":"1464:10:15","nodeType":"YulIdentifier","src":"1464:10:15"}],"functionName":{"name":"byte","nativeSrc":"1443:4:15","nodeType":"YulIdentifier","src":"1443:4:15"},"nativeSrc":"1443:32:15","nodeType":"YulFunctionCall","src":"1443:32:15"}],"functionName":{"name":"mstore8","nativeSrc":"1430:7:15","nodeType":"YulIdentifier","src":"1430:7:15"},"nativeSrc":"1430:46:15","nodeType":"YulFunctionCall","src":"1430:46:15"},"nativeSrc":"1430:46:15","nodeType":"YulExpressionStatement","src":"1430:46:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1997,"isOffset":false,"isSlot":false,"src":"1464:10:15","valueSize":1},{"declaration":2038,"isOffset":false,"isSlot":false,"src":"1438:3:15","valueSize":1},{"declaration":2016,"isOffset":false,"isSlot":false,"src":"1452:5:15","valueSize":1}],"flags":["memory-safe"],"id":2045,"nodeType":"InlineAssembly","src":"1383:111:15"},{"expression":{"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"1511:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1520:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1511:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2049,"nodeType":"ExpressionStatement","src":"1511:11:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"1544:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1553:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1544:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2054,"nodeType":"IfStatement","src":"1540:21:15","trueBody":{"id":2053,"nodeType":"Break","src":"1556:5:15"}}]},"condition":{"hexValue":"74727565","id":2041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1336:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2056,"nodeType":"WhileStatement","src":"1329:247:15"},{"expression":{"id":2057,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"1596:6:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2020,"id":2058,"nodeType":"Return","src":"1589:13:15"}]}]},"documentation":{"id":2014,"nodeType":"StructuredDocumentation","src":"892:90:15","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2061,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"996:8:15","nodeType":"FunctionDefinition","parameters":{"id":2017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2016,"mutability":"mutable","name":"value","nameLocation":"1013:5:15","nodeType":"VariableDeclaration","scope":2061,"src":"1005:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1005:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1004:15:15"},"returnParameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2061,"src":"1043:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2018,"name":"string","nodeType":"ElementaryTypeName","src":"1043:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1042:15:15"},"scope":3183,"src":"987:632:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2086,"nodeType":"Block","src":"1795:92:15","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1826:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1834:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1826:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1844:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1826:20:15","trueExpression":{"hexValue":"2d","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1838:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1872:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2079,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7132,"src":"1857:10:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7132_$","typeString":"type(library SignedMath)"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1868:3:15","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7131,"src":"1857:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1857:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2078,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"1848:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1848:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1812:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2069,"name":"string","nodeType":"ElementaryTypeName","src":"1812:6:15","typeDescriptions":{}}},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1819:6:15","memberName":"concat","nodeType":"MemberAccess","src":"1812:13:15","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1812:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2068,"id":2085,"nodeType":"Return","src":"1805:75:15"}]},"documentation":{"id":2062,"nodeType":"StructuredDocumentation","src":"1625:89:15","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2087,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1728:14:15","nodeType":"FunctionDefinition","parameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"value","nameLocation":"1750:5:15","nodeType":"VariableDeclaration","scope":2087,"src":"1743:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2063,"name":"int256","nodeType":"ElementaryTypeName","src":"1743:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1742:14:15"},"returnParameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2087,"src":"1780:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2066,"name":"string","nodeType":"ElementaryTypeName","src":"1780:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1779:15:15"},"scope":3183,"src":"1719:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2106,"nodeType":"Block","src":"2066:100:15","statements":[{"id":2105,"nodeType":"UncheckedBlock","src":"2076:84:15","statements":[{"expression":{"arguments":[{"id":2096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"2119:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2090,"src":"2138:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2097,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"2126:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5223_$","typeString":"type(library Math)"}},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2131:6:15","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5166,"src":"2126:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2126:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2147:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2126:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2095,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2107,2190,2210],"referencedDeclaration":2190,"src":"2107:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2107:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2094,"id":2104,"nodeType":"Return","src":"2100:49:15"}]}]},"documentation":{"id":2088,"nodeType":"StructuredDocumentation","src":"1893:94:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2107,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2001:11:15","nodeType":"FunctionDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2090,"mutability":"mutable","name":"value","nameLocation":"2021:5:15","nodeType":"VariableDeclaration","scope":2107,"src":"2013:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2012:15:15"},"returnParameters":{"id":2094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2107,"src":"2051:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2092,"name":"string","nodeType":"ElementaryTypeName","src":"2051:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2050:15:15"},"scope":3183,"src":"1992:174:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2189,"nodeType":"Block","src":"2379:435:15","statements":[{"assignments":[2118],"declarations":[{"constant":false,"id":2118,"mutability":"mutable","name":"localValue","nameLocation":"2397:10:15","nodeType":"VariableDeclaration","scope":2189,"src":"2389:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2389:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2120,"initialValue":{"id":2119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"2410:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2389:26:15"},{"assignments":[2122],"declarations":[{"constant":false,"id":2122,"mutability":"mutable","name":"buffer","nameLocation":"2438:6:15","nodeType":"VariableDeclaration","scope":2189,"src":"2425:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2121,"name":"bytes","nodeType":"ElementaryTypeName","src":"2425:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2131,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2126,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2461:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2457:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2457:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2447:9:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2123,"name":"bytes","nodeType":"ElementaryTypeName","src":"2451:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2425:47:15"},{"expression":{"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2132,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2482:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2134,"indexExpression":{"hexValue":"30","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2489:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2482:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2494:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2482:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2137,"nodeType":"ExpressionStatement","src":"2482:15:15"},{"expression":{"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2138,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2507:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2140,"indexExpression":{"hexValue":"31","id":2139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2514:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2507:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2519:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2507:15:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2143,"nodeType":"ExpressionStatement","src":"2507:15:15"},{"body":{"id":2172,"nodeType":"Block","src":"2577:95:15","statements":[{"expression":{"id":2166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2158,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2591:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2160,"indexExpression":{"id":2159,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"2598:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2591:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2161,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"2603:10:15","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2165,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2162,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2614:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2627:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2614:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2603:28:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2591:40:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2167,"nodeType":"ExpressionStatement","src":"2591:40:15"},{"expression":{"id":2170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2168,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2645:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2660:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2645:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2171,"nodeType":"ExpressionStatement","src":"2645:16:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2152,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"2565:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2569:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2565:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2173,"initializationExpression":{"assignments":[2145],"declarations":[{"constant":false,"id":2145,"mutability":"mutable","name":"i","nameLocation":"2545:1:15","nodeType":"VariableDeclaration","scope":2173,"src":"2537:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2537:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2151,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2549:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2147,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2553:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2549:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2562:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2549:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2537:26:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2572:3:15","subExpression":{"id":2155,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2145,"src":"2574:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2157,"nodeType":"ExpressionStatement","src":"2572:3:15"},"nodeType":"ForStatement","src":"2532:140:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"2685:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2699:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2685:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2183,"nodeType":"IfStatement","src":"2681:96:15","trueBody":{"id":2182,"nodeType":"Block","src":"2702:75:15","statements":[{"errorCall":{"arguments":[{"id":2178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"2752:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2179,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2112,"src":"2759:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2177,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2007,"src":"2723:28:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2181,"nodeType":"RevertStatement","src":"2716:50:15"}]}},{"expression":{"arguments":[{"id":2186,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2122,"src":"2800:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2793:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2184,"name":"string","nodeType":"ElementaryTypeName","src":"2793:6:15","typeDescriptions":{}}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2793:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2116,"id":2188,"nodeType":"Return","src":"2786:21:15"}]},"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"2172:112:15","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2190,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2298:11:15","nodeType":"FunctionDefinition","parameters":{"id":2113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"value","nameLocation":"2318:5:15","nodeType":"VariableDeclaration","scope":2190,"src":"2310:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2112,"mutability":"mutable","name":"length","nameLocation":"2333:6:15","nodeType":"VariableDeclaration","scope":2190,"src":"2325:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2111,"name":"uint256","nodeType":"ElementaryTypeName","src":"2325:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2309:31:15"},"returnParameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2190,"src":"2364:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2114,"name":"string","nodeType":"ElementaryTypeName","src":"2364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2363:15:15"},"scope":3183,"src":"2289:525:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2209,"nodeType":"Block","src":"3046:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2203,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2193,"src":"3091:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3083:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2201,"name":"uint160","nodeType":"ElementaryTypeName","src":"3083:7:15","typeDescriptions":{}}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3075:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2199,"name":"uint256","nodeType":"ElementaryTypeName","src":"3075:7:15","typeDescriptions":{}}},"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2206,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"3099:14:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2198,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2107,2190,2210],"referencedDeclaration":2190,"src":"3063:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3063:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2197,"id":2208,"nodeType":"Return","src":"3056:58:15"}]},"documentation":{"id":2191,"nodeType":"StructuredDocumentation","src":"2820:148:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2982:11:15","nodeType":"FunctionDefinition","parameters":{"id":2194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2193,"mutability":"mutable","name":"addr","nameLocation":"3002:4:15","nodeType":"VariableDeclaration","scope":2210,"src":"2994:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2192,"name":"address","nodeType":"ElementaryTypeName","src":"2994:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2993:14:15"},"returnParameters":{"id":2197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"3031:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2195,"name":"string","nodeType":"ElementaryTypeName","src":"3031:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3030:15:15"},"scope":3183,"src":"2973:148:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2274,"nodeType":"Block","src":"3378:642:15","statements":[{"assignments":[2219],"declarations":[{"constant":false,"id":2219,"mutability":"mutable","name":"buffer","nameLocation":"3401:6:15","nodeType":"VariableDeclaration","scope":2274,"src":"3388:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2218,"name":"bytes","nodeType":"ElementaryTypeName","src":"3388:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2226,"initialValue":{"arguments":[{"arguments":[{"id":2223,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"3428:4:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2222,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2107,2190,2210],"referencedDeclaration":2210,"src":"3416:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3416:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3410:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2220,"name":"bytes","nodeType":"ElementaryTypeName","src":"3410:5:15","typeDescriptions":{}}},"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3410:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3388:46:15"},{"assignments":[2228],"declarations":[{"constant":false,"id":2228,"mutability":"mutable","name":"hashValue","nameLocation":"3527:9:15","nodeType":"VariableDeclaration","scope":2274,"src":"3519:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2227,"name":"uint256","nodeType":"ElementaryTypeName","src":"3519:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2229,"nodeType":"VariableDeclarationStatement","src":"3519:17:15"},{"AST":{"nativeSrc":"3571:78:15","nodeType":"YulBlock","src":"3571:78:15","statements":[{"nativeSrc":"3585:54:15","nodeType":"YulAssignment","src":"3585:54:15","value":{"arguments":[{"kind":"number","nativeSrc":"3602:2:15","nodeType":"YulLiteral","src":"3602:2:15","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3620:6:15","nodeType":"YulIdentifier","src":"3620:6:15"},{"kind":"number","nativeSrc":"3628:4:15","nodeType":"YulLiteral","src":"3628:4:15","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3616:3:15","nodeType":"YulIdentifier","src":"3616:3:15"},"nativeSrc":"3616:17:15","nodeType":"YulFunctionCall","src":"3616:17:15"},{"kind":"number","nativeSrc":"3635:2:15","nodeType":"YulLiteral","src":"3635:2:15","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3606:9:15","nodeType":"YulIdentifier","src":"3606:9:15"},"nativeSrc":"3606:32:15","nodeType":"YulFunctionCall","src":"3606:32:15"}],"functionName":{"name":"shr","nativeSrc":"3598:3:15","nodeType":"YulIdentifier","src":"3598:3:15"},"nativeSrc":"3598:41:15","nodeType":"YulFunctionCall","src":"3598:41:15"},"variableNames":[{"name":"hashValue","nativeSrc":"3585:9:15","nodeType":"YulIdentifier","src":"3585:9:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2219,"isOffset":false,"isSlot":false,"src":"3620:6:15","valueSize":1},{"declaration":2228,"isOffset":false,"isSlot":false,"src":"3585:9:15","valueSize":1}],"flags":["memory-safe"],"id":2230,"nodeType":"InlineAssembly","src":"3546:103:15"},{"body":{"id":2267,"nodeType":"Block","src":"3692:291:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2241,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"3798:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3810:3:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3798:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3816:1:15","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3798:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2248,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"3827:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2250,"indexExpression":{"id":2249,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"3834:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3827:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3821:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2246,"name":"uint8","nodeType":"ElementaryTypeName","src":"3821:5:15","typeDescriptions":{}}},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3840:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3821:21:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3798:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2262,"nodeType":"IfStatement","src":"3794:150:15","trueBody":{"id":2261,"nodeType":"Block","src":"3844:100:15","statements":[{"expression":{"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2255,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"3912:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2257,"indexExpression":{"id":2256,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"3919:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3912:9:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:4:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3912:17:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2260,"nodeType":"ExpressionStatement","src":"3912:17:15"}]}},{"expression":{"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2263,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"3957:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3971:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3957:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2266,"nodeType":"ExpressionStatement","src":"3957:15:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"3680:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3684:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3680:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2268,"initializationExpression":{"assignments":[2232],"declarations":[{"constant":false,"id":2232,"mutability":"mutable","name":"i","nameLocation":"3672:1:15","nodeType":"VariableDeclaration","scope":2268,"src":"3664:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2231,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2234,"initialValue":{"hexValue":"3431","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3676:2:15","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3664:14:15"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3687:3:15","subExpression":{"id":2238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"3689:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2240,"nodeType":"ExpressionStatement","src":"3687:3:15"},"nodeType":"ForStatement","src":"3659:324:15"},{"expression":{"arguments":[{"id":2271,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2219,"src":"4006:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3999:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2269,"name":"string","nodeType":"ElementaryTypeName","src":"3999:6:15","typeDescriptions":{}}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3999:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2217,"id":2273,"nodeType":"Return","src":"3992:21:15"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"3127:165:15","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2275,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3306:19:15","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"addr","nameLocation":"3334:4:15","nodeType":"VariableDeclaration","scope":2275,"src":"3326:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2212,"name":"address","nodeType":"ElementaryTypeName","src":"3326:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3325:14:15"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2275,"src":"3363:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2215,"name":"string","nodeType":"ElementaryTypeName","src":"3363:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3362:15:15"},"scope":3183,"src":"3297:723:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"4175:104:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"4198:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4192:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2285,"name":"bytes","nodeType":"ElementaryTypeName","src":"4192:5:15","typeDescriptions":{}}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4192:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4201:6:15","memberName":"length","nodeType":"MemberAccess","src":"4192:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2292,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4217:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4211:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2290,"name":"bytes","nodeType":"ElementaryTypeName","src":"4211:5:15","typeDescriptions":{}}},"id":2293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:6:15","memberName":"length","nodeType":"MemberAccess","src":"4211:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4192:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"4246:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4240:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2297,"name":"bytes","nodeType":"ElementaryTypeName","src":"4240:5:15","typeDescriptions":{}}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4240:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2296,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4230:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4230:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2305,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"4269:1:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4263:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2303,"name":"bytes","nodeType":"ElementaryTypeName","src":"4263:5:15","typeDescriptions":{}}},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2302,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4253:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4253:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4230:42:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4192:80:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2284,"id":2310,"nodeType":"Return","src":"4185:87:15"}]},"documentation":{"id":2276,"nodeType":"StructuredDocumentation","src":"4026:66:15","text":" @dev Returns true if the two strings are equal."},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4106:5:15","nodeType":"FunctionDefinition","parameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"a","nameLocation":"4126:1:15","nodeType":"VariableDeclaration","scope":2312,"src":"4112:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2277,"name":"string","nodeType":"ElementaryTypeName","src":"4112:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"b","nameLocation":"4143:1:15","nodeType":"VariableDeclaration","scope":2312,"src":"4129:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2279,"name":"string","nodeType":"ElementaryTypeName","src":"4129:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4111:34:15"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2312,"src":"4169:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2282,"name":"bool","nodeType":"ElementaryTypeName","src":"4169:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4168:6:15"},"scope":3183,"src":"4097:182:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2330,"nodeType":"Block","src":"4576:64:15","statements":[{"expression":{"arguments":[{"id":2321,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"4603:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4610:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2325,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"4619:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4613:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2323,"name":"bytes","nodeType":"ElementaryTypeName","src":"4613:5:15","typeDescriptions":{}}},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4613:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4626:6:15","memberName":"length","nodeType":"MemberAccess","src":"4613:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2320,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2331,2362],"referencedDeclaration":2362,"src":"4593:9:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4593:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2319,"id":2329,"nodeType":"Return","src":"4586:47:15"}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"4285:214:15","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2331,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4513:9:15","nodeType":"FunctionDefinition","parameters":{"id":2316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"input","nameLocation":"4537:5:15","nodeType":"VariableDeclaration","scope":2331,"src":"4523:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2314,"name":"string","nodeType":"ElementaryTypeName","src":"4523:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4522:21:15"},"returnParameters":{"id":2319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2318,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2331,"src":"4567:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4567:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4566:9:15"},"scope":3183,"src":"4504:136:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2361,"nodeType":"Block","src":"5038:153:15","statements":[{"assignments":[2344,2346],"declarations":[{"constant":false,"id":2344,"mutability":"mutable","name":"success","nameLocation":"5054:7:15","nodeType":"VariableDeclaration","scope":2361,"src":"5049:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2343,"name":"bool","nodeType":"ElementaryTypeName","src":"5049:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"value","nameLocation":"5071:5:15","nodeType":"VariableDeclaration","scope":2361,"src":"5063:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"5063:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2352,"initialValue":{"arguments":[{"id":2348,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2334,"src":"5093:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2349,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"5100:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2350,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"5107:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2347,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2383,2420],"referencedDeclaration":2420,"src":"5080:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5080:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5048:63:15"},{"condition":{"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5125:8:15","subExpression":{"id":2353,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2344,"src":"5126:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2358,"nodeType":"IfStatement","src":"5121:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2355,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"5142:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2357,"nodeType":"RevertStatement","src":"5135:27:15"}},{"expression":{"id":2359,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"5179:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2342,"id":2360,"nodeType":"Return","src":"5172:12:15"}]},"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"4646:287:15","text":" @dev Variant of {parseUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2362,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4947:9:15","nodeType":"FunctionDefinition","parameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"input","nameLocation":"4971:5:15","nodeType":"VariableDeclaration","scope":2362,"src":"4957:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2333,"name":"string","nodeType":"ElementaryTypeName","src":"4957:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"begin","nameLocation":"4986:5:15","nodeType":"VariableDeclaration","scope":2362,"src":"4978:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2335,"name":"uint256","nodeType":"ElementaryTypeName","src":"4978:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2338,"mutability":"mutable","name":"end","nameLocation":"5001:3:15","nodeType":"VariableDeclaration","scope":2362,"src":"4993:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2337,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4956:49:15"},"returnParameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2362,"src":"5029:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2340,"name":"uint256","nodeType":"ElementaryTypeName","src":"5029:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5028:9:15"},"scope":3183,"src":"4938:253:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2382,"nodeType":"Block","src":"5512:83:15","statements":[{"expression":{"arguments":[{"id":2373,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"5558:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2377,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"5574:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5568:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2375,"name":"bytes","nodeType":"ElementaryTypeName","src":"5568:5:15","typeDescriptions":{}}},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5568:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5581:6:15","memberName":"length","nodeType":"MemberAccess","src":"5568:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2372,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"5529:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5529:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2371,"id":2381,"nodeType":"Return","src":"5522:66:15"}]},"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"5197:215:15","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2383,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5426:12:15","nodeType":"FunctionDefinition","parameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"input","nameLocation":"5453:5:15","nodeType":"VariableDeclaration","scope":2383,"src":"5439:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2364,"name":"string","nodeType":"ElementaryTypeName","src":"5439:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5438:21:15"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2368,"mutability":"mutable","name":"success","nameLocation":"5488:7:15","nodeType":"VariableDeclaration","scope":2383,"src":"5483:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2367,"name":"bool","nodeType":"ElementaryTypeName","src":"5483:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2370,"mutability":"mutable","name":"value","nameLocation":"5505:5:15","nodeType":"VariableDeclaration","scope":2383,"src":"5497:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5497:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5482:29:15"},"scope":3183,"src":"5417:178:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2419,"nodeType":"Block","src":"5997:144:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2397,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"6011:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2400,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"6023:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6017:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2398,"name":"bytes","nodeType":"ElementaryTypeName","src":"6017:5:15","typeDescriptions":{}}},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6017:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6030:6:15","memberName":"length","nodeType":"MemberAccess","src":"6017:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6011:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2404,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"6040:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2405,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"6048:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6011:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2412,"nodeType":"IfStatement","src":"6007:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6061:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6068:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6060:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2396,"id":2411,"nodeType":"Return","src":"6053:17:15"}},{"expression":{"arguments":[{"id":2414,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"6116:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2415,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"6123:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2416,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"6130:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2413,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"6087:28:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2396,"id":2418,"nodeType":"Return","src":"6080:54:15"}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"5601:238:15","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2420,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5853:12:15","nodeType":"FunctionDefinition","parameters":{"id":2391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"input","nameLocation":"5889:5:15","nodeType":"VariableDeclaration","scope":2420,"src":"5875:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2385,"name":"string","nodeType":"ElementaryTypeName","src":"5875:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2388,"mutability":"mutable","name":"begin","nameLocation":"5912:5:15","nodeType":"VariableDeclaration","scope":2420,"src":"5904:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2387,"name":"uint256","nodeType":"ElementaryTypeName","src":"5904:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2390,"mutability":"mutable","name":"end","nameLocation":"5935:3:15","nodeType":"VariableDeclaration","scope":2420,"src":"5927:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"5927:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5865:79:15"},"returnParameters":{"id":2396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2393,"mutability":"mutable","name":"success","nameLocation":"5973:7:15","nodeType":"VariableDeclaration","scope":2420,"src":"5968:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2392,"name":"bool","nodeType":"ElementaryTypeName","src":"5968:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2395,"mutability":"mutable","name":"value","nameLocation":"5990:5:15","nodeType":"VariableDeclaration","scope":2420,"src":"5982:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2394,"name":"uint256","nodeType":"ElementaryTypeName","src":"5982:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5967:29:15"},"scope":3183,"src":"5844:297:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2489,"nodeType":"Block","src":"6521:347:15","statements":[{"assignments":[2435],"declarations":[{"constant":false,"id":2435,"mutability":"mutable","name":"buffer","nameLocation":"6544:6:15","nodeType":"VariableDeclaration","scope":2489,"src":"6531:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2434,"name":"bytes","nodeType":"ElementaryTypeName","src":"6531:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2440,"initialValue":{"arguments":[{"id":2438,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"6559:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6553:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2436,"name":"bytes","nodeType":"ElementaryTypeName","src":"6553:5:15","typeDescriptions":{}}},"id":2439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6531:34:15"},{"assignments":[2442],"declarations":[{"constant":false,"id":2442,"mutability":"mutable","name":"result","nameLocation":"6584:6:15","nodeType":"VariableDeclaration","scope":2489,"src":"6576:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"6576:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2444,"initialValue":{"hexValue":"30","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6593:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6576:18:15"},{"body":{"id":2483,"nodeType":"Block","src":"6642:189:15","statements":[{"assignments":[2456],"declarations":[{"constant":false,"id":2456,"mutability":"mutable","name":"chr","nameLocation":"6662:3:15","nodeType":"VariableDeclaration","scope":2483,"src":"6656:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2455,"name":"uint8","nodeType":"ElementaryTypeName","src":"6656:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2466,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2461,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2435,"src":"6711:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2462,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6719:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2460,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"6688:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6688:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6681:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2458,"name":"bytes1","nodeType":"ElementaryTypeName","src":"6681:6:15","typeDescriptions":{}}},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6681:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2457,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"6668:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6668:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"6656:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2467,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"6741:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6747:1:15","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"6741:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2474,"nodeType":"IfStatement","src":"6737:30:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6758:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6765:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6757:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2433,"id":2473,"nodeType":"Return","src":"6750:17:15"}},{"expression":{"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2475,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"6781:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6791:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6781:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2478,"nodeType":"ExpressionStatement","src":"6781:12:15"},{"expression":{"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"6807:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2480,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"6817:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6807:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2482,"nodeType":"ExpressionStatement","src":"6807:13:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2449,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6628:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2450,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"6632:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6628:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2484,"initializationExpression":{"assignments":[2446],"declarations":[{"constant":false,"id":2446,"mutability":"mutable","name":"i","nameLocation":"6617:1:15","nodeType":"VariableDeclaration","scope":2484,"src":"6609:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2445,"name":"uint256","nodeType":"ElementaryTypeName","src":"6609:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2448,"initialValue":{"id":2447,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"6621:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6609:17:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6637:3:15","subExpression":{"id":2452,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"6639:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2454,"nodeType":"ExpressionStatement","src":"6637:3:15"},"nodeType":"ForStatement","src":"6604:227:15"},{"expression":{"components":[{"hexValue":"74727565","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6848:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"6854:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6847:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2433,"id":2488,"nodeType":"Return","src":"6840:21:15"}]},"documentation":{"id":2421,"nodeType":"StructuredDocumentation","src":"6147:201:15","text":" @dev Implementation of {tryParseUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6362:28:15","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2423,"mutability":"mutable","name":"input","nameLocation":"6414:5:15","nodeType":"VariableDeclaration","scope":2490,"src":"6400:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2422,"name":"string","nodeType":"ElementaryTypeName","src":"6400:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2425,"mutability":"mutable","name":"begin","nameLocation":"6437:5:15","nodeType":"VariableDeclaration","scope":2490,"src":"6429:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"6429:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"end","nameLocation":"6460:3:15","nodeType":"VariableDeclaration","scope":2490,"src":"6452:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"6452:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6390:79:15"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"success","nameLocation":"6497:7:15","nodeType":"VariableDeclaration","scope":2490,"src":"6492:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2429,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"value","nameLocation":"6514:5:15","nodeType":"VariableDeclaration","scope":2490,"src":"6506:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"6506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6491:29:15"},"scope":3183,"src":"6353:515:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2508,"nodeType":"Block","src":"7165:63:15","statements":[{"expression":{"arguments":[{"id":2499,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"7191:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7198:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2503,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2493,"src":"7207:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2501,"name":"bytes","nodeType":"ElementaryTypeName","src":"7201:5:15","typeDescriptions":{}}},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7201:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7214:6:15","memberName":"length","nodeType":"MemberAccess","src":"7201:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2498,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2509,2540],"referencedDeclaration":2540,"src":"7182:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7182:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2497,"id":2507,"nodeType":"Return","src":"7175:46:15"}]},"documentation":{"id":2491,"nodeType":"StructuredDocumentation","src":"6874:216:15","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2509,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7104:8:15","nodeType":"FunctionDefinition","parameters":{"id":2494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2493,"mutability":"mutable","name":"input","nameLocation":"7127:5:15","nodeType":"VariableDeclaration","scope":2509,"src":"7113:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2492,"name":"string","nodeType":"ElementaryTypeName","src":"7113:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7112:21:15"},"returnParameters":{"id":2497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2509,"src":"7157:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2495,"name":"int256","nodeType":"ElementaryTypeName","src":"7157:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7156:8:15"},"scope":3183,"src":"7095:133:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2539,"nodeType":"Block","src":"7633:151:15","statements":[{"assignments":[2522,2524],"declarations":[{"constant":false,"id":2522,"mutability":"mutable","name":"success","nameLocation":"7649:7:15","nodeType":"VariableDeclaration","scope":2539,"src":"7644:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2521,"name":"bool","nodeType":"ElementaryTypeName","src":"7644:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2524,"mutability":"mutable","name":"value","nameLocation":"7665:5:15","nodeType":"VariableDeclaration","scope":2539,"src":"7658:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2523,"name":"int256","nodeType":"ElementaryTypeName","src":"7658:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2530,"initialValue":{"arguments":[{"id":2526,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2512,"src":"7686:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2527,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"7693:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2528,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"7700:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2525,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2561,2603],"referencedDeclaration":2603,"src":"7674:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7643:61:15"},{"condition":{"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7718:8:15","subExpression":{"id":2531,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"7719:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2536,"nodeType":"IfStatement","src":"7714:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2533,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"7735:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7735:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2535,"nodeType":"RevertStatement","src":"7728:27:15"}},{"expression":{"id":2537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2524,"src":"7772:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2520,"id":2538,"nodeType":"Return","src":"7765:12:15"}]},"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"7234:296:15","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2540,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7544:8:15","nodeType":"FunctionDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"mutability":"mutable","name":"input","nameLocation":"7567:5:15","nodeType":"VariableDeclaration","scope":2540,"src":"7553:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2511,"name":"string","nodeType":"ElementaryTypeName","src":"7553:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2514,"mutability":"mutable","name":"begin","nameLocation":"7582:5:15","nodeType":"VariableDeclaration","scope":2540,"src":"7574:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2513,"name":"uint256","nodeType":"ElementaryTypeName","src":"7574:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2516,"mutability":"mutable","name":"end","nameLocation":"7597:3:15","nodeType":"VariableDeclaration","scope":2540,"src":"7589:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"7589:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7552:49:15"},"returnParameters":{"id":2520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2540,"src":"7625:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2518,"name":"int256","nodeType":"ElementaryTypeName","src":"7625:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7624:8:15"},"scope":3183,"src":"7535:249:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2560,"nodeType":"Block","src":"8175:82:15","statements":[{"expression":{"arguments":[{"id":2551,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"8220:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8227:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2555,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2543,"src":"8236:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8230:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2553,"name":"bytes","nodeType":"ElementaryTypeName","src":"8230:5:15","typeDescriptions":{}}},"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8230:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8243:6:15","memberName":"length","nodeType":"MemberAccess","src":"8230:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2550,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8192:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8192:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2549,"id":2559,"nodeType":"Return","src":"8185:65:15"}]},"documentation":{"id":2541,"nodeType":"StructuredDocumentation","src":"7790:287:15","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2561,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8091:11:15","nodeType":"FunctionDefinition","parameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"input","nameLocation":"8117:5:15","nodeType":"VariableDeclaration","scope":2561,"src":"8103:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2542,"name":"string","nodeType":"ElementaryTypeName","src":"8103:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8102:21:15"},"returnParameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"success","nameLocation":"8152:7:15","nodeType":"VariableDeclaration","scope":2561,"src":"8147:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2545,"name":"bool","nodeType":"ElementaryTypeName","src":"8147:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"value","nameLocation":"8168:5:15","nodeType":"VariableDeclaration","scope":2561,"src":"8161:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2547,"name":"int256","nodeType":"ElementaryTypeName","src":"8161:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8146:28:15"},"scope":3183,"src":"8082:175:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2566,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8288:14:15","nodeType":"VariableDeclaration","scope":3183,"src":"8263:50:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2562,"name":"uint256","nodeType":"ElementaryTypeName","src":"8263:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8305:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8310:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8305:8:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2602,"nodeType":"Block","src":"8779:143:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2580,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"8793:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2583,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"8805:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8799:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2581,"name":"bytes","nodeType":"ElementaryTypeName","src":"8799:5:15","typeDescriptions":{}}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8799:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8812:6:15","memberName":"length","nodeType":"MemberAccess","src":"8799:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2587,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"8822:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2588,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"8830:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8822:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8793:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2595,"nodeType":"IfStatement","src":"8789:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8843:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8850:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8842:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2579,"id":2594,"nodeType":"Return","src":"8835:17:15"}},{"expression":{"arguments":[{"id":2597,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"8897:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2598,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"8904:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2599,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2573,"src":"8911:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2596,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"8869:27:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8869:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2579,"id":2601,"nodeType":"Return","src":"8862:53:15"}]},"documentation":{"id":2567,"nodeType":"StructuredDocumentation","src":"8320:303:15","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2603,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8637:11:15","nodeType":"FunctionDefinition","parameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2569,"mutability":"mutable","name":"input","nameLocation":"8672:5:15","nodeType":"VariableDeclaration","scope":2603,"src":"8658:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2568,"name":"string","nodeType":"ElementaryTypeName","src":"8658:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"begin","nameLocation":"8695:5:15","nodeType":"VariableDeclaration","scope":2603,"src":"8687:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2570,"name":"uint256","nodeType":"ElementaryTypeName","src":"8687:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2573,"mutability":"mutable","name":"end","nameLocation":"8718:3:15","nodeType":"VariableDeclaration","scope":2603,"src":"8710:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"8710:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8648:79:15"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2576,"mutability":"mutable","name":"success","nameLocation":"8756:7:15","nodeType":"VariableDeclaration","scope":2603,"src":"8751:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2575,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2578,"mutability":"mutable","name":"value","nameLocation":"8772:5:15","nodeType":"VariableDeclaration","scope":2603,"src":"8765:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2577,"name":"int256","nodeType":"ElementaryTypeName","src":"8765:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8750:28:15"},"scope":3183,"src":"8628:294:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2723,"nodeType":"Block","src":"9299:812:15","statements":[{"assignments":[2618],"declarations":[{"constant":false,"id":2618,"mutability":"mutable","name":"buffer","nameLocation":"9322:6:15","nodeType":"VariableDeclaration","scope":2723,"src":"9309:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2617,"name":"bytes","nodeType":"ElementaryTypeName","src":"9309:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2623,"initialValue":{"arguments":[{"id":2621,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"9337:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9331:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2619,"name":"bytes","nodeType":"ElementaryTypeName","src":"9331:5:15","typeDescriptions":{}}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9331:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9309:34:15"},{"assignments":[2625],"declarations":[{"constant":false,"id":2625,"mutability":"mutable","name":"sign","nameLocation":"9407:4:15","nodeType":"VariableDeclaration","scope":2723,"src":"9400:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2624,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9400:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2641,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2626,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"9414:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2627,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"9423:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9414:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2636,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"9471:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2637,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"9479:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2635,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"9448:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9448:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9441:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2633,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9441:6:15","typeDescriptions":{}}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9441:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9414:72:15","trueExpression":{"arguments":[{"hexValue":"30","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9436:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9429:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2629,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9429:6:15","typeDescriptions":{}}},"id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9429:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9400:86:15"},{"assignments":[2643],"declarations":[{"constant":false,"id":2643,"mutability":"mutable","name":"positiveSign","nameLocation":"9572:12:15","nodeType":"VariableDeclaration","scope":2723,"src":"9567:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2642,"name":"bool","nodeType":"ElementaryTypeName","src":"9567:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2650,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2644,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"9587:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9602:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9595:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2645,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9595:6:15","typeDescriptions":{}}},"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9595:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9587:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9567:39:15"},{"assignments":[2652],"declarations":[{"constant":false,"id":2652,"mutability":"mutable","name":"negativeSign","nameLocation":"9621:12:15","nodeType":"VariableDeclaration","scope":2723,"src":"9616:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2651,"name":"bool","nodeType":"ElementaryTypeName","src":"9616:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2659,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2653,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"9636:4:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9651:3:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9644:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2654,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9644:6:15","typeDescriptions":{}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9644:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9636:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9616:39:15"},{"assignments":[2661],"declarations":[{"constant":false,"id":2661,"mutability":"mutable","name":"offset","nameLocation":"9673:6:15","nodeType":"VariableDeclaration","scope":2723,"src":"9665:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2660,"name":"uint256","nodeType":"ElementaryTypeName","src":"9665:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2668,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2662,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2643,"src":"9683:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2663,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"9699:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9683:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2665,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9682:30:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9713:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"9682:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9682:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9665:56:15"},{"assignments":[2670,2672],"declarations":[{"constant":false,"id":2670,"mutability":"mutable","name":"absSuccess","nameLocation":"9738:10:15","nodeType":"VariableDeclaration","scope":2723,"src":"9733:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2669,"name":"bool","nodeType":"ElementaryTypeName","src":"9733:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"absValue","nameLocation":"9758:8:15","nodeType":"VariableDeclaration","scope":2723,"src":"9750:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"9750:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2680,"initialValue":{"arguments":[{"id":2674,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"9783:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2675,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2608,"src":"9790:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2676,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"9798:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2678,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"9806:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2673,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2383,2420],"referencedDeclaration":2420,"src":"9770:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9770:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"9732:78:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"9825:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2682,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"9839:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2683,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"9850:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9839:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9825:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2701,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"9967:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2702,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"9981:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"9997:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2705,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2566,"src":"10009:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9997:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9967:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10095:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10102:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10094:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2616,"id":2720,"nodeType":"Return","src":"10087:17:15"},"id":2721,"nodeType":"IfStatement","src":"9963:141:15","trueBody":{"id":2716,"nodeType":"Block","src":"10025:56:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10047:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10058:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2710,"name":"int256","nodeType":"ElementaryTypeName","src":"10058:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2709,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10053:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10053:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10066:3:15","memberName":"min","nodeType":"MemberAccess","src":"10053:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10046:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2616,"id":2715,"nodeType":"Return","src":"10039:31:15"}]}},"id":2722,"nodeType":"IfStatement","src":"9821:283:15","trueBody":{"id":2700,"nodeType":"Block","src":"9866:91:15","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9888:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2687,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"9894:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2695,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"9936:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9929:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2693,"name":"int256","nodeType":"ElementaryTypeName","src":"9929:6:15","typeDescriptions":{}}},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9929:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9894:51:15","trueExpression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"9909:17:15","subExpression":{"arguments":[{"id":2690,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"9917:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9910:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2688,"name":"int256","nodeType":"ElementaryTypeName","src":"9910:6:15","typeDescriptions":{}}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9910:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9887:59:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2616,"id":2699,"nodeType":"Return","src":"9880:66:15"}]}}]},"documentation":{"id":2604,"nodeType":"StructuredDocumentation","src":"8928:200:15","text":" @dev Implementation of {tryParseInt} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2724,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9142:27:15","nodeType":"FunctionDefinition","parameters":{"id":2611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2606,"mutability":"mutable","name":"input","nameLocation":"9193:5:15","nodeType":"VariableDeclaration","scope":2724,"src":"9179:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2605,"name":"string","nodeType":"ElementaryTypeName","src":"9179:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2608,"mutability":"mutable","name":"begin","nameLocation":"9216:5:15","nodeType":"VariableDeclaration","scope":2724,"src":"9208:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2607,"name":"uint256","nodeType":"ElementaryTypeName","src":"9208:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2610,"mutability":"mutable","name":"end","nameLocation":"9239:3:15","nodeType":"VariableDeclaration","scope":2724,"src":"9231:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"9231:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9169:79:15"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2613,"mutability":"mutable","name":"success","nameLocation":"9276:7:15","nodeType":"VariableDeclaration","scope":2724,"src":"9271:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2612,"name":"bool","nodeType":"ElementaryTypeName","src":"9271:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2615,"mutability":"mutable","name":"value","nameLocation":"9292:5:15","nodeType":"VariableDeclaration","scope":2724,"src":"9285:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2614,"name":"int256","nodeType":"ElementaryTypeName","src":"9285:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9270:28:15"},"scope":3183,"src":"9133:978:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2742,"nodeType":"Block","src":"10456:67:15","statements":[{"expression":{"arguments":[{"id":2733,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"10486:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10493:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2737,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2727,"src":"10502:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10496:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2735,"name":"bytes","nodeType":"ElementaryTypeName","src":"10496:5:15","typeDescriptions":{}}},"id":2738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10496:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10509:6:15","memberName":"length","nodeType":"MemberAccess","src":"10496:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2732,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2743,2774],"referencedDeclaration":2774,"src":"10473:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10473:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2731,"id":2741,"nodeType":"Return","src":"10466:50:15"}]},"documentation":{"id":2725,"nodeType":"StructuredDocumentation","src":"10117:259:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2743,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10390:12:15","nodeType":"FunctionDefinition","parameters":{"id":2728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2727,"mutability":"mutable","name":"input","nameLocation":"10417:5:15","nodeType":"VariableDeclaration","scope":2743,"src":"10403:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2726,"name":"string","nodeType":"ElementaryTypeName","src":"10403:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10402:21:15"},"returnParameters":{"id":2731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2730,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2743,"src":"10447:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2729,"name":"uint256","nodeType":"ElementaryTypeName","src":"10447:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10446:9:15"},"scope":3183,"src":"10381:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2773,"nodeType":"Block","src":"10937:156:15","statements":[{"assignments":[2756,2758],"declarations":[{"constant":false,"id":2756,"mutability":"mutable","name":"success","nameLocation":"10953:7:15","nodeType":"VariableDeclaration","scope":2773,"src":"10948:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2755,"name":"bool","nodeType":"ElementaryTypeName","src":"10948:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2758,"mutability":"mutable","name":"value","nameLocation":"10970:5:15","nodeType":"VariableDeclaration","scope":2773,"src":"10962:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"10962:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2764,"initialValue":{"arguments":[{"id":2760,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"10995:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2761,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"11002:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2762,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2750,"src":"11009:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2759,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2795,2832],"referencedDeclaration":2832,"src":"10979:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10979:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10947:66:15"},{"condition":{"id":2766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11027:8:15","subExpression":{"id":2765,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2756,"src":"11028:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2770,"nodeType":"IfStatement","src":"11023:41:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2767,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"11044:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11044:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2769,"nodeType":"RevertStatement","src":"11037:27:15"}},{"expression":{"id":2771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"11081:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2754,"id":2772,"nodeType":"Return","src":"11074:12:15"}]},"documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"10529:300:15","text":" @dev Variant of {parseHexUint} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2774,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10843:12:15","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"input","nameLocation":"10870:5:15","nodeType":"VariableDeclaration","scope":2774,"src":"10856:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2745,"name":"string","nodeType":"ElementaryTypeName","src":"10856:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2748,"mutability":"mutable","name":"begin","nameLocation":"10885:5:15","nodeType":"VariableDeclaration","scope":2774,"src":"10877:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2747,"name":"uint256","nodeType":"ElementaryTypeName","src":"10877:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2750,"mutability":"mutable","name":"end","nameLocation":"10900:3:15","nodeType":"VariableDeclaration","scope":2774,"src":"10892:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2749,"name":"uint256","nodeType":"ElementaryTypeName","src":"10892:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10855:49:15"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2774,"src":"10928:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"10928:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10927:9:15"},"scope":3183,"src":"10834:259:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2794,"nodeType":"Block","src":"11420:86:15","statements":[{"expression":{"arguments":[{"id":2785,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"11469:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11476:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2789,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"11485:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11479:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2787,"name":"bytes","nodeType":"ElementaryTypeName","src":"11479:5:15","typeDescriptions":{}}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11479:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11492:6:15","memberName":"length","nodeType":"MemberAccess","src":"11479:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2784,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"11437:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2783,"id":2793,"nodeType":"Return","src":"11430:69:15"}]},"documentation":{"id":2775,"nodeType":"StructuredDocumentation","src":"11099:218:15","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2795,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11331:15:15","nodeType":"FunctionDefinition","parameters":{"id":2778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2777,"mutability":"mutable","name":"input","nameLocation":"11361:5:15","nodeType":"VariableDeclaration","scope":2795,"src":"11347:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2776,"name":"string","nodeType":"ElementaryTypeName","src":"11347:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11346:21:15"},"returnParameters":{"id":2783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2780,"mutability":"mutable","name":"success","nameLocation":"11396:7:15","nodeType":"VariableDeclaration","scope":2795,"src":"11391:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2779,"name":"bool","nodeType":"ElementaryTypeName","src":"11391:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2782,"mutability":"mutable","name":"value","nameLocation":"11413:5:15","nodeType":"VariableDeclaration","scope":2795,"src":"11405:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2781,"name":"uint256","nodeType":"ElementaryTypeName","src":"11405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11390:29:15"},"scope":3183,"src":"11322:184:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2831,"nodeType":"Block","src":"11914:147:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2809,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"11928:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2812,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"11940:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11934:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2810,"name":"bytes","nodeType":"ElementaryTypeName","src":"11934:5:15","typeDescriptions":{}}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11934:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11947:6:15","memberName":"length","nodeType":"MemberAccess","src":"11934:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11928:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2816,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"11957:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2817,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"11965:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11957:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11928:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2824,"nodeType":"IfStatement","src":"11924:63:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11978:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11985:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2822,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"11977:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2808,"id":2823,"nodeType":"Return","src":"11970:17:15"}},{"expression":{"arguments":[{"id":2826,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"12036:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2827,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2800,"src":"12043:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2828,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2802,"src":"12050:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2825,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"12004:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2808,"id":2830,"nodeType":"Return","src":"11997:57:15"}]},"documentation":{"id":2796,"nodeType":"StructuredDocumentation","src":"11512:241:15","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2832,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11767:15:15","nodeType":"FunctionDefinition","parameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2798,"mutability":"mutable","name":"input","nameLocation":"11806:5:15","nodeType":"VariableDeclaration","scope":2832,"src":"11792:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2797,"name":"string","nodeType":"ElementaryTypeName","src":"11792:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2800,"mutability":"mutable","name":"begin","nameLocation":"11829:5:15","nodeType":"VariableDeclaration","scope":2832,"src":"11821:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2799,"name":"uint256","nodeType":"ElementaryTypeName","src":"11821:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"end","nameLocation":"11852:3:15","nodeType":"VariableDeclaration","scope":2832,"src":"11844:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2801,"name":"uint256","nodeType":"ElementaryTypeName","src":"11844:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11782:79:15"},"returnParameters":{"id":2808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"success","nameLocation":"11890:7:15","nodeType":"VariableDeclaration","scope":2832,"src":"11885:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2804,"name":"bool","nodeType":"ElementaryTypeName","src":"11885:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"value","nameLocation":"11907:5:15","nodeType":"VariableDeclaration","scope":2832,"src":"11899:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"11899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11884:29:15"},"scope":3183,"src":"11758:303:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2934,"nodeType":"Block","src":"12447:880:15","statements":[{"assignments":[2847],"declarations":[{"constant":false,"id":2847,"mutability":"mutable","name":"buffer","nameLocation":"12470:6:15","nodeType":"VariableDeclaration","scope":2934,"src":"12457:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2846,"name":"bytes","nodeType":"ElementaryTypeName","src":"12457:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2852,"initialValue":{"arguments":[{"id":2850,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"12485:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12479:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2848,"name":"bytes","nodeType":"ElementaryTypeName","src":"12479:5:15","typeDescriptions":{}}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12479:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12457:34:15"},{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"hasPrefix","nameLocation":"12544:9:15","nodeType":"VariableDeclaration","scope":2934,"src":"12539:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2853,"name":"bool","nodeType":"ElementaryTypeName","src":"12539:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2874,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2855,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"12557:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2856,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"12563:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12571:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12563:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12557:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12556:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2864,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"12607:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2865,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"12615:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2863,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12584:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12584:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12577:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2861,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12577:6:15","typeDescriptions":{}}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12577:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12633:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12626:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2868,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12626:6:15","typeDescriptions":{}}},"id":2871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12626:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12577:61:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12556:82:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12539:99:15"},{"assignments":[2876],"declarations":[{"constant":false,"id":2876,"mutability":"mutable","name":"offset","nameLocation":"12727:6:15","nodeType":"VariableDeclaration","scope":2934,"src":"12719:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2875,"name":"uint256","nodeType":"ElementaryTypeName","src":"12719:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2882,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2877,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"12736:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12746:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"12736:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12736:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12757:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12736:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12719:39:15"},{"assignments":[2884],"declarations":[{"constant":false,"id":2884,"mutability":"mutable","name":"result","nameLocation":"12777:6:15","nodeType":"VariableDeclaration","scope":2934,"src":"12769:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"12769:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2886,"initialValue":{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12786:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12769:18:15"},{"body":{"id":2928,"nodeType":"Block","src":"12844:446:15","statements":[{"assignments":[2900],"declarations":[{"constant":false,"id":2900,"mutability":"mutable","name":"chr","nameLocation":"12864:3:15","nodeType":"VariableDeclaration","scope":2928,"src":"12858:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2899,"name":"uint8","nodeType":"ElementaryTypeName","src":"12858:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2910,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2905,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"12913:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2906,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"12921:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2904,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"12890:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12890:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2902,"name":"bytes1","nodeType":"ElementaryTypeName","src":"12883:6:15","typeDescriptions":{}}},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2901,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3170,"src":"12870:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12870:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12858:67:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2911,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"12943:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12949:2:15","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"12943:8:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2918,"nodeType":"IfStatement","src":"12939:31:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12961:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12968:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:10:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2845,"id":2917,"nodeType":"Return","src":"12953:17:15"}},{"expression":{"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"12984:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12994:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12984:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2922,"nodeType":"ExpressionStatement","src":"12984:12:15"},{"id":2927,"nodeType":"UncheckedBlock","src":"13010:270:15","statements":[{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"13252:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2924,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"13262:3:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13252:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ExpressionStatement","src":"13252:13:15"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2893,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"12830:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2894,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"12834:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12830:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2929,"initializationExpression":{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"i","nameLocation":"12810:1:15","nodeType":"VariableDeclaration","scope":2929,"src":"12802:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2887,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2892,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2837,"src":"12814:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2890,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2876,"src":"12822:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12814:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12802:26:15"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"12839:3:15","subExpression":{"id":2896,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"12841:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2898,"nodeType":"ExpressionStatement","src":"12839:3:15"},"nodeType":"ForStatement","src":"12797:493:15"},{"expression":{"components":[{"hexValue":"74727565","id":2930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13307:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2931,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"13313:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13306:14:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2845,"id":2933,"nodeType":"Return","src":"13299:21:15"}]},"documentation":{"id":2833,"nodeType":"StructuredDocumentation","src":"12067:204:15","text":" @dev Implementation of {tryParseHexUint} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2935,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12285:31:15","nodeType":"FunctionDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"input","nameLocation":"12340:5:15","nodeType":"VariableDeclaration","scope":2935,"src":"12326:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2834,"name":"string","nodeType":"ElementaryTypeName","src":"12326:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2837,"mutability":"mutable","name":"begin","nameLocation":"12363:5:15","nodeType":"VariableDeclaration","scope":2935,"src":"12355:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2836,"name":"uint256","nodeType":"ElementaryTypeName","src":"12355:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2839,"mutability":"mutable","name":"end","nameLocation":"12386:3:15","nodeType":"VariableDeclaration","scope":2935,"src":"12378:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2838,"name":"uint256","nodeType":"ElementaryTypeName","src":"12378:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12316:79:15"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"success","nameLocation":"12423:7:15","nodeType":"VariableDeclaration","scope":2935,"src":"12418:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2841,"name":"bool","nodeType":"ElementaryTypeName","src":"12418:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2844,"mutability":"mutable","name":"value","nameLocation":"12440:5:15","nodeType":"VariableDeclaration","scope":2935,"src":"12432:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2843,"name":"uint256","nodeType":"ElementaryTypeName","src":"12432:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12417:29:15"},"scope":3183,"src":"12276:1051:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2953,"nodeType":"Block","src":"13625:67:15","statements":[{"expression":{"arguments":[{"id":2944,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"13655:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13662:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2948,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"13671:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13665:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2946,"name":"bytes","nodeType":"ElementaryTypeName","src":"13665:5:15","typeDescriptions":{}}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13665:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13678:6:15","memberName":"length","nodeType":"MemberAccess","src":"13665:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2943,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2954,2985],"referencedDeclaration":2985,"src":"13642:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13642:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2942,"id":2952,"nodeType":"Return","src":"13635:50:15"}]},"documentation":{"id":2936,"nodeType":"StructuredDocumentation","src":"13333:212:15","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2954,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13559:12:15","nodeType":"FunctionDefinition","parameters":{"id":2939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2938,"mutability":"mutable","name":"input","nameLocation":"13586:5:15","nodeType":"VariableDeclaration","scope":2954,"src":"13572:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2937,"name":"string","nodeType":"ElementaryTypeName","src":"13572:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13571:21:15"},"returnParameters":{"id":2942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2954,"src":"13616:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2940,"name":"address","nodeType":"ElementaryTypeName","src":"13616:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13615:9:15"},"scope":3183,"src":"13550:142:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2984,"nodeType":"Block","src":"14058:165:15","statements":[{"assignments":[2967,2969],"declarations":[{"constant":false,"id":2967,"mutability":"mutable","name":"success","nameLocation":"14074:7:15","nodeType":"VariableDeclaration","scope":2984,"src":"14069:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2966,"name":"bool","nodeType":"ElementaryTypeName","src":"14069:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2969,"mutability":"mutable","name":"value","nameLocation":"14091:5:15","nodeType":"VariableDeclaration","scope":2984,"src":"14083:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2968,"name":"address","nodeType":"ElementaryTypeName","src":"14083:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2975,"initialValue":{"arguments":[{"id":2971,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2957,"src":"14116:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2972,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2959,"src":"14123:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2973,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"14130:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2970,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3006,3110],"referencedDeclaration":3110,"src":"14100:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14100:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14068:66:15"},{"condition":{"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14148:8:15","subExpression":{"id":2976,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"14149:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2981,"nodeType":"IfStatement","src":"14144:50:15","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2978,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2013,"src":"14165:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14165:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2980,"nodeType":"RevertStatement","src":"14158:36:15"}},{"expression":{"id":2982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"14211:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2965,"id":2983,"nodeType":"Return","src":"14204:12:15"}]},"documentation":{"id":2955,"nodeType":"StructuredDocumentation","src":"13698:252:15","text":" @dev Variant of {parseAddress} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2985,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:15","nodeType":"FunctionDefinition","parameters":{"id":2962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2957,"mutability":"mutable","name":"input","nameLocation":"13991:5:15","nodeType":"VariableDeclaration","scope":2985,"src":"13977:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2956,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2959,"mutability":"mutable","name":"begin","nameLocation":"14006:5:15","nodeType":"VariableDeclaration","scope":2985,"src":"13998:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2958,"name":"uint256","nodeType":"ElementaryTypeName","src":"13998:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2961,"mutability":"mutable","name":"end","nameLocation":"14021:3:15","nodeType":"VariableDeclaration","scope":2985,"src":"14013:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"14013:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13976:49:15"},"returnParameters":{"id":2965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2964,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2985,"src":"14049:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2963,"name":"address","nodeType":"ElementaryTypeName","src":"14049:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14048:9:15"},"scope":3183,"src":"13955:268:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3005,"nodeType":"Block","src":"14523:70:15","statements":[{"expression":{"arguments":[{"id":2996,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"14556:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14563:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3000,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2988,"src":"14572:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14566:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2998,"name":"bytes","nodeType":"ElementaryTypeName","src":"14566:5:15","typeDescriptions":{}}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14566:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14579:6:15","memberName":"length","nodeType":"MemberAccess","src":"14566:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2995,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3006,3110],"referencedDeclaration":3110,"src":"14540:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14540:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2994,"id":3004,"nodeType":"Return","src":"14533:53:15"}]},"documentation":{"id":2986,"nodeType":"StructuredDocumentation","src":"14229:191:15","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3006,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14434:15:15","nodeType":"FunctionDefinition","parameters":{"id":2989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2988,"mutability":"mutable","name":"input","nameLocation":"14464:5:15","nodeType":"VariableDeclaration","scope":3006,"src":"14450:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2987,"name":"string","nodeType":"ElementaryTypeName","src":"14450:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14449:21:15"},"returnParameters":{"id":2994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2991,"mutability":"mutable","name":"success","nameLocation":"14499:7:15","nodeType":"VariableDeclaration","scope":3006,"src":"14494:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2990,"name":"bool","nodeType":"ElementaryTypeName","src":"14494:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2993,"mutability":"mutable","name":"value","nameLocation":"14516:5:15","nodeType":"VariableDeclaration","scope":3006,"src":"14508:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2992,"name":"address","nodeType":"ElementaryTypeName","src":"14508:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14493:29:15"},"scope":3183,"src":"14425:168:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3109,"nodeType":"Block","src":"14963:733:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3020,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"14977:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3023,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"14989:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14983:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3021,"name":"bytes","nodeType":"ElementaryTypeName","src":"14983:5:15","typeDescriptions":{}}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14983:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14996:6:15","memberName":"length","nodeType":"MemberAccess","src":"14983:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14977:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3027,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"15006:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3028,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"15014:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15006:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14977:40:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3038,"nodeType":"IfStatement","src":"14973:72:15","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15027:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15042:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15034:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3032,"name":"address","nodeType":"ElementaryTypeName","src":"15034:7:15","typeDescriptions":{}}},"id":3035,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15034:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3036,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15026:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3019,"id":3037,"nodeType":"Return","src":"15019:26:15"}},{"assignments":[3040],"declarations":[{"constant":false,"id":3040,"mutability":"mutable","name":"hasPrefix","nameLocation":"15061:9:15","nodeType":"VariableDeclaration","scope":3109,"src":"15056:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3039,"name":"bool","nodeType":"ElementaryTypeName","src":"15056:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3063,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3041,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"15074:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"15080:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15088:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15080:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15074:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3046,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15073:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3052,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"15130:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15124:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3050,"name":"bytes","nodeType":"ElementaryTypeName","src":"15124:5:15","typeDescriptions":{}}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15124:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3054,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"15138:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3049,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3182,"src":"15101:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15101:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15094:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3047,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15094:6:15","typeDescriptions":{}}},"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15094:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15156:4:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15149:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3057,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15149:6:15","typeDescriptions":{}}},"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15149:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15094:67:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15073:88:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15056:105:15"},{"assignments":[3065],"declarations":[{"constant":false,"id":3065,"mutability":"mutable","name":"expectedLength","nameLocation":"15250:14:15","nodeType":"VariableDeclaration","scope":3109,"src":"15242:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"15242:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3073,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15267:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3067,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"15272:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15282:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"15272:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15272:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15293:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15272:22:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15267:27:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15242:52:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3074,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"15359:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3075,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"15365:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3077,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3065,"src":"15374:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15359:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3107,"nodeType":"Block","src":"15639:51:15","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15661:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15676:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15668:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3101,"name":"address","nodeType":"ElementaryTypeName","src":"15668:7:15","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15668:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15660:19:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3019,"id":3106,"nodeType":"Return","src":"15653:26:15"}]},"id":3108,"nodeType":"IfStatement","src":"15355:335:15","trueBody":{"id":3099,"nodeType":"Block","src":"15390:243:15","statements":[{"assignments":[3080,3082],"declarations":[{"constant":false,"id":3080,"mutability":"mutable","name":"s","nameLocation":"15511:1:15","nodeType":"VariableDeclaration","scope":3099,"src":"15506:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3079,"name":"bool","nodeType":"ElementaryTypeName","src":"15506:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3082,"mutability":"mutable","name":"v","nameLocation":"15522:1:15","nodeType":"VariableDeclaration","scope":3099,"src":"15514:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3081,"name":"uint256","nodeType":"ElementaryTypeName","src":"15514:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3088,"initialValue":{"arguments":[{"id":3084,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"15559:5:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3085,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"15566:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3086,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"15573:3:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3083,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"15527:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15527:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15505:72:15"},{"expression":{"components":[{"id":3089,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"15599:1:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3094,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"15618:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15610:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3092,"name":"uint160","nodeType":"ElementaryTypeName","src":"15610:7:15","typeDescriptions":{}}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15610:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15602:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"15602:7:15","typeDescriptions":{}}},"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15602:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3097,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15598:24:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3019,"id":3098,"nodeType":"Return","src":"15591:31:15"}]}}]},"documentation":{"id":3007,"nodeType":"StructuredDocumentation","src":"14599:203:15","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress} requirements."},"id":3110,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14816:15:15","nodeType":"FunctionDefinition","parameters":{"id":3014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"input","nameLocation":"14855:5:15","nodeType":"VariableDeclaration","scope":3110,"src":"14841:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3008,"name":"string","nodeType":"ElementaryTypeName","src":"14841:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3011,"mutability":"mutable","name":"begin","nameLocation":"14878:5:15","nodeType":"VariableDeclaration","scope":3110,"src":"14870:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3010,"name":"uint256","nodeType":"ElementaryTypeName","src":"14870:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3013,"mutability":"mutable","name":"end","nameLocation":"14901:3:15","nodeType":"VariableDeclaration","scope":3110,"src":"14893:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3012,"name":"uint256","nodeType":"ElementaryTypeName","src":"14893:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14831:79:15"},"returnParameters":{"id":3019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3016,"mutability":"mutable","name":"success","nameLocation":"14939:7:15","nodeType":"VariableDeclaration","scope":3110,"src":"14934:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3015,"name":"bool","nodeType":"ElementaryTypeName","src":"14934:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3018,"mutability":"mutable","name":"value","nameLocation":"14956:5:15","nodeType":"VariableDeclaration","scope":3110,"src":"14948:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3017,"name":"address","nodeType":"ElementaryTypeName","src":"14948:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14933:29:15"},"scope":3183,"src":"14807:889:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3169,"nodeType":"Block","src":"15765:461:15","statements":[{"assignments":[3118],"declarations":[{"constant":false,"id":3118,"mutability":"mutable","name":"value","nameLocation":"15781:5:15","nodeType":"VariableDeclaration","scope":3169,"src":"15775:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3117,"name":"uint8","nodeType":"ElementaryTypeName","src":"15775:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3123,"initialValue":{"arguments":[{"id":3121,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"15795:3:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15789:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3119,"name":"uint8","nodeType":"ElementaryTypeName","src":"15789:5:15","typeDescriptions":{}}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15789:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"15775:24:15"},{"id":3166,"nodeType":"UncheckedBlock","src":"15959:238:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"15987:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15995:2:15","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"15987:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"16001:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16009:2:15","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16001:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15987:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3135,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"16047:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16055:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16047:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"16061:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16069:3:15","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16061:11:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16047:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3146,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"16108:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16116:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16108:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"16122:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16130:2:15","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16122:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16108:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16176:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3158,"name":"uint8","nodeType":"ElementaryTypeName","src":"16176:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3157,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16171:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16171:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16183:3:15","memberName":"max","nodeType":"MemberAccess","src":"16171:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3116,"id":3162,"nodeType":"Return","src":"16164:22:15"},"id":3163,"nodeType":"IfStatement","src":"16104:82:15","trueBody":{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"16134:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16143:2:15","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16134:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3156,"nodeType":"ExpressionStatement","src":"16134:11:15"}},"id":3164,"nodeType":"IfStatement","src":"16043:143:15","trueBody":{"expression":{"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"16074:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16083:2:15","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16074:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3145,"nodeType":"ExpressionStatement","src":"16074:11:15"}},"id":3165,"nodeType":"IfStatement","src":"15983:203:15","trueBody":{"expression":{"id":3133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"16013:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16022:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16013:11:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3134,"nodeType":"ExpressionStatement","src":"16013:11:15"}}]},{"expression":{"id":3167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"16214:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3116,"id":3168,"nodeType":"Return","src":"16207:12:15"}]},"id":3170,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"15711:12:15","nodeType":"FunctionDefinition","parameters":{"id":3113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"mutability":"mutable","name":"chr","nameLocation":"15731:3:15","nodeType":"VariableDeclaration","scope":3170,"src":"15724:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3111,"name":"bytes1","nodeType":"ElementaryTypeName","src":"15724:6:15","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"15723:12:15"},"returnParameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3170,"src":"15758:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3114,"name":"uint8","nodeType":"ElementaryTypeName","src":"15758:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"15757:7:15"},"scope":3183,"src":"15702:524:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3181,"nodeType":"Block","src":"16611:225:15","statements":[{"AST":{"nativeSrc":"16760:70:15","nodeType":"YulBlock","src":"16760:70:15","statements":[{"nativeSrc":"16774:46:15","nodeType":"YulAssignment","src":"16774:46:15","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"16793:6:15","nodeType":"YulIdentifier","src":"16793:6:15"},{"arguments":[{"kind":"number","nativeSrc":"16805:4:15","nodeType":"YulLiteral","src":"16805:4:15","type":"","value":"0x20"},{"name":"offset","nativeSrc":"16811:6:15","nodeType":"YulIdentifier","src":"16811:6:15"}],"functionName":{"name":"add","nativeSrc":"16801:3:15","nodeType":"YulIdentifier","src":"16801:3:15"},"nativeSrc":"16801:17:15","nodeType":"YulFunctionCall","src":"16801:17:15"}],"functionName":{"name":"add","nativeSrc":"16789:3:15","nodeType":"YulIdentifier","src":"16789:3:15"},"nativeSrc":"16789:30:15","nodeType":"YulFunctionCall","src":"16789:30:15"}],"functionName":{"name":"mload","nativeSrc":"16783:5:15","nodeType":"YulIdentifier","src":"16783:5:15"},"nativeSrc":"16783:37:15","nodeType":"YulFunctionCall","src":"16783:37:15"},"variableNames":[{"name":"value","nativeSrc":"16774:5:15","nodeType":"YulIdentifier","src":"16774:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3173,"isOffset":false,"isSlot":false,"src":"16793:6:15","valueSize":1},{"declaration":3175,"isOffset":false,"isSlot":false,"src":"16811:6:15","valueSize":1},{"declaration":3178,"isOffset":false,"isSlot":false,"src":"16774:5:15","valueSize":1}],"flags":["memory-safe"],"id":3180,"nodeType":"InlineAssembly","src":"16735:95:15"}]},"documentation":{"id":3171,"nodeType":"StructuredDocumentation","src":"16232:268:15","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3182,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"16514:22:15","nodeType":"FunctionDefinition","parameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3173,"mutability":"mutable","name":"buffer","nameLocation":"16550:6:15","nodeType":"VariableDeclaration","scope":3182,"src":"16537:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3172,"name":"bytes","nodeType":"ElementaryTypeName","src":"16537:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"offset","nameLocation":"16566:6:15","nodeType":"VariableDeclaration","scope":3182,"src":"16558:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3174,"name":"uint256","nodeType":"ElementaryTypeName","src":"16558:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16536:37:15"},"returnParameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"value","nameLocation":"16604:5:15","nodeType":"VariableDeclaration","scope":3182,"src":"16596:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3177,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16596:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16595:15:15"},"scope":3183,"src":"16505:331:15","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3184,"src":"297:16541:15","usedErrors":[2007,2010,2013],"usedEvents":[]}],"src":"101:16738:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[3531]},"id":3532,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3185,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":3186,"nodeType":"StructuredDocumentation","src":"138:205:16","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":3531,"linearizedBaseContracts":[3531],"name":"ECDSA","nameLocation":"352:5:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":3191,"members":[{"id":3187,"name":"NoError","nameLocation":"392:7:16","nodeType":"EnumValue","src":"392:7:16"},{"id":3188,"name":"InvalidSignature","nameLocation":"409:16:16","nodeType":"EnumValue","src":"409:16:16"},{"id":3189,"name":"InvalidSignatureLength","nameLocation":"435:22:16","nodeType":"EnumValue","src":"435:22:16"},{"id":3190,"name":"InvalidSignatureS","nameLocation":"467:17:16","nodeType":"EnumValue","src":"467:17:16"}],"name":"RecoverError","nameLocation":"369:12:16","nodeType":"EnumDefinition","src":"364:126:16"},{"documentation":{"id":3192,"nodeType":"StructuredDocumentation","src":"496:63:16","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":3194,"name":"ECDSAInvalidSignature","nameLocation":"570:21:16","nodeType":"ErrorDefinition","parameters":{"id":3193,"nodeType":"ParameterList","parameters":[],"src":"591:2:16"},"src":"564:30:16"},{"documentation":{"id":3195,"nodeType":"StructuredDocumentation","src":"600:60:16","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":3199,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:16","nodeType":"ErrorDefinition","parameters":{"id":3198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3197,"mutability":"mutable","name":"length","nameLocation":"707:6:16","nodeType":"VariableDeclaration","scope":3199,"src":"699:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3196,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:16"},"src":"665:50:16"},{"documentation":{"id":3200,"nodeType":"StructuredDocumentation","src":"721:85:16","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":3204,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:16","nodeType":"ErrorDefinition","parameters":{"id":3203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3202,"mutability":"mutable","name":"s","nameLocation":"848:1:16","nodeType":"VariableDeclaration","scope":3204,"src":"840:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:16"},"src":"811:40:16"},{"body":{"id":3256,"nodeType":"Block","src":"2285:622:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3219,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"2299:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:16","memberName":"length","nodeType":"MemberAccess","src":"2299:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":3221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:16","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3254,"nodeType":"Block","src":"2793:108:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:16","typeDescriptions":{}}},"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3245,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"2827:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3191_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3189,"src":"2827:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":3249,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"2872:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:16","memberName":"length","nodeType":"MemberAccess","src":"2872:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3247,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:16","typeDescriptions":{}}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3218,"id":3253,"nodeType":"Return","src":"2807:83:16"}]},"id":3255,"nodeType":"IfStatement","src":"2295:606:16","trueBody":{"id":3240,"nodeType":"Block","src":"2323:464:16","statements":[{"assignments":[3224],"declarations":[{"constant":false,"id":3224,"mutability":"mutable","name":"r","nameLocation":"2345:1:16","nodeType":"VariableDeclaration","scope":3240,"src":"2337:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3225,"nodeType":"VariableDeclarationStatement","src":"2337:9:16"},{"assignments":[3227],"declarations":[{"constant":false,"id":3227,"mutability":"mutable","name":"s","nameLocation":"2368:1:16","nodeType":"VariableDeclaration","scope":3240,"src":"2360:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3228,"nodeType":"VariableDeclarationStatement","src":"2360:9:16"},{"assignments":[3230],"declarations":[{"constant":false,"id":3230,"mutability":"mutable","name":"v","nameLocation":"2389:1:16","nodeType":"VariableDeclaration","scope":3240,"src":"2383:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3229,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3231,"nodeType":"VariableDeclarationStatement","src":"2383:7:16"},{"AST":{"nativeSrc":"2560:171:16","nodeType":"YulBlock","src":"2560:171:16","statements":[{"nativeSrc":"2578:32:16","nodeType":"YulAssignment","src":"2578:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:16","nodeType":"YulIdentifier","src":"2593:9:16"},{"kind":"number","nativeSrc":"2604:4:16","nodeType":"YulLiteral","src":"2604:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:16","nodeType":"YulIdentifier","src":"2589:3:16"},"nativeSrc":"2589:20:16","nodeType":"YulFunctionCall","src":"2589:20:16"}],"functionName":{"name":"mload","nativeSrc":"2583:5:16","nodeType":"YulIdentifier","src":"2583:5:16"},"nativeSrc":"2583:27:16","nodeType":"YulFunctionCall","src":"2583:27:16"},"variableNames":[{"name":"r","nativeSrc":"2578:1:16","nodeType":"YulIdentifier","src":"2578:1:16"}]},{"nativeSrc":"2627:32:16","nodeType":"YulAssignment","src":"2627:32:16","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:16","nodeType":"YulIdentifier","src":"2642:9:16"},{"kind":"number","nativeSrc":"2653:4:16","nodeType":"YulLiteral","src":"2653:4:16","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:16","nodeType":"YulIdentifier","src":"2638:3:16"},"nativeSrc":"2638:20:16","nodeType":"YulFunctionCall","src":"2638:20:16"}],"functionName":{"name":"mload","nativeSrc":"2632:5:16","nodeType":"YulIdentifier","src":"2632:5:16"},"nativeSrc":"2632:27:16","nodeType":"YulFunctionCall","src":"2632:27:16"},"variableNames":[{"name":"s","nativeSrc":"2627:1:16","nodeType":"YulIdentifier","src":"2627:1:16"}]},{"nativeSrc":"2676:41:16","nodeType":"YulAssignment","src":"2676:41:16","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:16","nodeType":"YulLiteral","src":"2686:1:16","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:16","nodeType":"YulIdentifier","src":"2699:9:16"},{"kind":"number","nativeSrc":"2710:4:16","nodeType":"YulLiteral","src":"2710:4:16","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:16","nodeType":"YulIdentifier","src":"2695:3:16"},"nativeSrc":"2695:20:16","nodeType":"YulFunctionCall","src":"2695:20:16"}],"functionName":{"name":"mload","nativeSrc":"2689:5:16","nodeType":"YulIdentifier","src":"2689:5:16"},"nativeSrc":"2689:27:16","nodeType":"YulFunctionCall","src":"2689:27:16"}],"functionName":{"name":"byte","nativeSrc":"2681:4:16","nodeType":"YulIdentifier","src":"2681:4:16"},"nativeSrc":"2681:36:16","nodeType":"YulFunctionCall","src":"2681:36:16"},"variableNames":[{"name":"v","nativeSrc":"2676:1:16","nodeType":"YulIdentifier","src":"2676:1:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3224,"isOffset":false,"isSlot":false,"src":"2578:1:16","valueSize":1},{"declaration":3227,"isOffset":false,"isSlot":false,"src":"2627:1:16","valueSize":1},{"declaration":3209,"isOffset":false,"isSlot":false,"src":"2593:9:16","valueSize":1},{"declaration":3209,"isOffset":false,"isSlot":false,"src":"2642:9:16","valueSize":1},{"declaration":3209,"isOffset":false,"isSlot":false,"src":"2699:9:16","valueSize":1},{"declaration":3230,"isOffset":false,"isSlot":false,"src":"2676:1:16","valueSize":1}],"flags":["memory-safe"],"id":3232,"nodeType":"InlineAssembly","src":"2535:196:16"},{"expression":{"arguments":[{"id":3234,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"2762:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3235,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"2768:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3236,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"2771:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3237,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3227,"src":"2774:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3233,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3257,3337,3445],"referencedDeclaration":3445,"src":"2751:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3218,"id":3239,"nodeType":"Return","src":"2744:32:16"}]}}]},"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"857:1267:16","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":3257,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:16","nodeType":"FunctionDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"hash","nameLocation":"2166:4:16","nodeType":"VariableDeclaration","scope":3257,"src":"2158:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3209,"mutability":"mutable","name":"signature","nameLocation":"2193:9:16","nodeType":"VariableDeclaration","scope":3257,"src":"2180:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3208,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:16"},"returnParameters":{"id":3218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3212,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:16","nodeType":"VariableDeclaration","scope":3257,"src":"2232:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3211,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3215,"mutability":"mutable","name":"err","nameLocation":"2264:3:16","nodeType":"VariableDeclaration","scope":3257,"src":"2251:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3214,"nodeType":"UserDefinedTypeName","pathNode":{"id":3213,"name":"RecoverError","nameLocations":["2251:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3191,"src":"2251:12:16"},"referencedDeclaration":3191,"src":"2251:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3217,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:16","nodeType":"VariableDeclaration","scope":3257,"src":"2269:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3216,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:16"},"scope":3531,"src":"2129:778:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3286,"nodeType":"Block","src":"3801:168:16","statements":[{"assignments":[3268,3271,3273],"declarations":[{"constant":false,"id":3268,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:16","nodeType":"VariableDeclaration","scope":3286,"src":"3812:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3267,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"error","nameLocation":"3844:5:16","nodeType":"VariableDeclaration","scope":3286,"src":"3831:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3270,"nodeType":"UserDefinedTypeName","pathNode":{"id":3269,"name":"RecoverError","nameLocations":["3831:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3191,"src":"3831:12:16"},"referencedDeclaration":3191,"src":"3831:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:16","nodeType":"VariableDeclaration","scope":3286,"src":"3851:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3272,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3278,"initialValue":{"arguments":[{"id":3275,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"3882:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3276,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3262,"src":"3888:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3274,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3257,3337,3445],"referencedDeclaration":3257,"src":"3871:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:16"},{"expression":{"arguments":[{"id":3280,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"3920:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},{"id":3281,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"3927:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3279,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"3908:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3191_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3283,"nodeType":"ExpressionStatement","src":"3908:28:16"},{"expression":{"id":3284,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3268,"src":"3953:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3266,"id":3285,"nodeType":"Return","src":"3946:16:16"}]},"documentation":{"id":3258,"nodeType":"StructuredDocumentation","src":"2913:796:16","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":3287,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:16","nodeType":"FunctionDefinition","parameters":{"id":3263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"hash","nameLocation":"3739:4:16","nodeType":"VariableDeclaration","scope":3287,"src":"3731:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3262,"mutability":"mutable","name":"signature","nameLocation":"3758:9:16","nodeType":"VariableDeclaration","scope":3287,"src":"3745:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3261,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:16"},"returnParameters":{"id":3266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3287,"src":"3792:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3264,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:16"},"scope":3531,"src":"3714:255:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3336,"nodeType":"Block","src":"4348:342:16","statements":[{"id":3335,"nodeType":"UncheckedBlock","src":"4358:326:16","statements":[{"assignments":[3305],"declarations":[{"constant":false,"id":3305,"mutability":"mutable","name":"s","nameLocation":"4390:1:16","nodeType":"VariableDeclaration","scope":3335,"src":"4382:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3312,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3306,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"4394:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":3309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":3308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:16","typeDescriptions":{}}},"id":3310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:16"},{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"v","nameLocation":"4591:1:16","nodeType":"VariableDeclaration","scope":3335,"src":"4585:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3313,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3327,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3319,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"4610:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:16","typeDescriptions":{}}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3315,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:16","typeDescriptions":{}}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:16"},{"expression":{"arguments":[{"id":3329,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"4659:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3330,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"4665:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3331,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"4668:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3332,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3305,"src":"4671:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3328,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3257,3337,3445],"referencedDeclaration":3445,"src":"4648:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3303,"id":3334,"nodeType":"Return","src":"4641:32:16"}]}]},"documentation":{"id":3288,"nodeType":"StructuredDocumentation","src":"3975:205:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":3337,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:16","nodeType":"FunctionDefinition","parameters":{"id":3295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3290,"mutability":"mutable","name":"hash","nameLocation":"4222:4:16","nodeType":"VariableDeclaration","scope":3337,"src":"4214:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3292,"mutability":"mutable","name":"r","nameLocation":"4244:1:16","nodeType":"VariableDeclaration","scope":3337,"src":"4236:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3291,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"vs","nameLocation":"4263:2:16","nodeType":"VariableDeclaration","scope":3337,"src":"4255:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:16"},"returnParameters":{"id":3303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3297,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:16","nodeType":"VariableDeclaration","scope":3337,"src":"4295:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3296,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3300,"mutability":"mutable","name":"err","nameLocation":"4327:3:16","nodeType":"VariableDeclaration","scope":3337,"src":"4314:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3299,"nodeType":"UserDefinedTypeName","pathNode":{"id":3298,"name":"RecoverError","nameLocations":["4314:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3191,"src":"4314:12:16"},"referencedDeclaration":3191,"src":"4314:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3302,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:16","nodeType":"VariableDeclaration","scope":3337,"src":"4332:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3301,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:16"},"scope":3531,"src":"4185:505:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3369,"nodeType":"Block","src":"4903:164:16","statements":[{"assignments":[3350,3353,3355],"declarations":[{"constant":false,"id":3350,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:16","nodeType":"VariableDeclaration","scope":3369,"src":"4914:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3349,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"error","nameLocation":"4946:5:16","nodeType":"VariableDeclaration","scope":3369,"src":"4933:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3352,"nodeType":"UserDefinedTypeName","pathNode":{"id":3351,"name":"RecoverError","nameLocations":["4933:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3191,"src":"4933:12:16"},"referencedDeclaration":3191,"src":"4933:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3355,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:16","nodeType":"VariableDeclaration","scope":3369,"src":"4953:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3354,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3361,"initialValue":{"arguments":[{"id":3357,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"4984:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3358,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"4990:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3359,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3344,"src":"4993:2:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3356,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3257,3337,3445],"referencedDeclaration":3337,"src":"4973:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:16"},{"expression":{"arguments":[{"id":3363,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"5018:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},{"id":3364,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3355,"src":"5025:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3362,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"5006:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3191_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3366,"nodeType":"ExpressionStatement","src":"5006:28:16"},{"expression":{"id":3367,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"5051:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3348,"id":3368,"nodeType":"Return","src":"5044:16:16"}]},"documentation":{"id":3338,"nodeType":"StructuredDocumentation","src":"4696:116:16","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":3370,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:16","nodeType":"FunctionDefinition","parameters":{"id":3345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3340,"mutability":"mutable","name":"hash","nameLocation":"4842:4:16","nodeType":"VariableDeclaration","scope":3370,"src":"4834:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3339,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"r","nameLocation":"4856:1:16","nodeType":"VariableDeclaration","scope":3370,"src":"4848:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3341,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3344,"mutability":"mutable","name":"vs","nameLocation":"4867:2:16","nodeType":"VariableDeclaration","scope":3370,"src":"4859:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:16"},"returnParameters":{"id":3348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3347,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3370,"src":"4894:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3346,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:16"},"scope":3531,"src":"4817:250:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3444,"nodeType":"Block","src":"5382:1372:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3391,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"6278:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3389,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:16","typeDescriptions":{}}},"id":3392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":3393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:16","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3405,"nodeType":"IfStatement","src":"6266:164:16","trueBody":{"id":3404,"nodeType":"Block","src":"6351:79:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3395,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:16","typeDescriptions":{}}},"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3399,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"6385:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3191_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3190,"src":"6385:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},{"id":3401,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"6417:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3402,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3388,"id":3403,"nodeType":"Return","src":"6365:54:16"}]}},{"assignments":[3407],"declarations":[{"constant":false,"id":3407,"mutability":"mutable","name":"signer","nameLocation":"6532:6:16","nodeType":"VariableDeclaration","scope":3444,"src":"6524:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3406,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3414,"initialValue":{"arguments":[{"id":3409,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"6551:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3410,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"6557:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3411,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"6560:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3412,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"6563:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3408,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:16"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3415,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"6579:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3416,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:16","typeDescriptions":{}}},"id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3434,"nodeType":"IfStatement","src":"6575:113:16","trueBody":{"id":3433,"nodeType":"Block","src":"6601:87:16","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":3423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3421,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:16","typeDescriptions":{}}},"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3425,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"6635:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3191_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3188,"src":"6635:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3428,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3427,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:16","typeDescriptions":{}}},"id":3430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3431,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3388,"id":3432,"nodeType":"Return","src":"6615:62:16"}]}},{"expression":{"components":[{"id":3435,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"6706:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3436,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"6714:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3191_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3187,"src":"6714:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3438,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:16","typeDescriptions":{}}},"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":3388,"id":3443,"nodeType":"Return","src":"6698:49:16"}]},"documentation":{"id":3371,"nodeType":"StructuredDocumentation","src":"5073:125:16","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3445,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:16","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3373,"mutability":"mutable","name":"hash","nameLocation":"5240:4:16","nodeType":"VariableDeclaration","scope":3445,"src":"5232:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3375,"mutability":"mutable","name":"v","nameLocation":"5260:1:16","nodeType":"VariableDeclaration","scope":3445,"src":"5254:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3374,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"r","nameLocation":"5279:1:16","nodeType":"VariableDeclaration","scope":3445,"src":"5271:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3376,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"s","nameLocation":"5298:1:16","nodeType":"VariableDeclaration","scope":3445,"src":"5290:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:16"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3382,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:16","nodeType":"VariableDeclaration","scope":3445,"src":"5329:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3381,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3385,"mutability":"mutable","name":"err","nameLocation":"5361:3:16","nodeType":"VariableDeclaration","scope":3445,"src":"5348:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3384,"nodeType":"UserDefinedTypeName","pathNode":{"id":3383,"name":"RecoverError","nameLocations":["5348:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3191,"src":"5348:12:16"},"referencedDeclaration":3191,"src":"5348:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3387,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:16","nodeType":"VariableDeclaration","scope":3445,"src":"5366:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:16"},"scope":3531,"src":"5203:1551:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3480,"nodeType":"Block","src":"6981:166:16","statements":[{"assignments":[3460,3463,3465],"declarations":[{"constant":false,"id":3460,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:16","nodeType":"VariableDeclaration","scope":3480,"src":"6992:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3459,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3463,"mutability":"mutable","name":"error","nameLocation":"7024:5:16","nodeType":"VariableDeclaration","scope":3480,"src":"7011:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3462,"nodeType":"UserDefinedTypeName","pathNode":{"id":3461,"name":"RecoverError","nameLocations":["7011:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3191,"src":"7011:12:16"},"referencedDeclaration":3191,"src":"7011:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3465,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:16","nodeType":"VariableDeclaration","scope":3480,"src":"7031:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3464,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3472,"initialValue":{"arguments":[{"id":3467,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"7062:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3468,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"7068:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3469,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3452,"src":"7071:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3470,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3454,"src":"7074:1:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3466,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[3257,3337,3445],"referencedDeclaration":3445,"src":"7051:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$3191_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:16"},{"expression":{"arguments":[{"id":3474,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3463,"src":"7098:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},{"id":3475,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3465,"src":"7105:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3473,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3530,"src":"7086:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$3191_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3477,"nodeType":"ExpressionStatement","src":"7086:28:16"},{"expression":{"id":3478,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3460,"src":"7131:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3458,"id":3479,"nodeType":"Return","src":"7124:16:16"}]},"documentation":{"id":3446,"nodeType":"StructuredDocumentation","src":"6760:122:16","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":3481,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:16","nodeType":"FunctionDefinition","parameters":{"id":3455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"hash","nameLocation":"6912:4:16","nodeType":"VariableDeclaration","scope":3481,"src":"6904:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"v","nameLocation":"6924:1:16","nodeType":"VariableDeclaration","scope":3481,"src":"6918:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3449,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3452,"mutability":"mutable","name":"r","nameLocation":"6935:1:16","nodeType":"VariableDeclaration","scope":3481,"src":"6927:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3454,"mutability":"mutable","name":"s","nameLocation":"6946:1:16","nodeType":"VariableDeclaration","scope":3481,"src":"6938:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:16"},"returnParameters":{"id":3458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"6972:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3456,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:16"},"scope":3531,"src":"6887:260:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3529,"nodeType":"Block","src":"7352:460:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3490,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"7366:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3491,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"7375:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3191_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:16","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":3187,"src":"7375:20:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3496,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"7462:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3497,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"7471:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3191_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:16","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":3188,"src":"7471:29:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3504,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"7567:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3505,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"7576:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3191_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:16","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":3189,"src":"7576:35:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"7701:5:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3517,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"7710:12:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$3191_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":3518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:16","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":3190,"src":"7710:30:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3525,"nodeType":"IfStatement","src":"7697:109:16","trueBody":{"id":3524,"nodeType":"Block","src":"7742:64:16","statements":[{"errorCall":{"arguments":[{"id":3521,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"7786:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3520,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"7763:22:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3523,"nodeType":"RevertStatement","src":"7756:39:16"}]}},"id":3526,"nodeType":"IfStatement","src":"7563:243:16","trueBody":{"id":3515,"nodeType":"Block","src":"7613:78:16","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":3511,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3487,"src":"7670:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:16","typeDescriptions":{}}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3508,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"7634:27:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3514,"nodeType":"RevertStatement","src":"7627:53:16"}]}},"id":3527,"nodeType":"IfStatement","src":"7458:348:16","trueBody":{"id":3503,"nodeType":"Block","src":"7502:55:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3500,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"7523:21:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3502,"nodeType":"RevertStatement","src":"7516:30:16"}]}},"id":3528,"nodeType":"IfStatement","src":"7362:444:16","trueBody":{"id":3495,"nodeType":"Block","src":"7397:55:16","statements":[{"functionReturnParameters":3489,"id":3494,"nodeType":"Return","src":"7411:7:16"}]}}]},"documentation":{"id":3482,"nodeType":"StructuredDocumentation","src":"7153:122:16","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":3530,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:16","nodeType":"FunctionDefinition","parameters":{"id":3488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3485,"mutability":"mutable","name":"error","nameLocation":"7314:5:16","nodeType":"VariableDeclaration","scope":3530,"src":"7301:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":3484,"nodeType":"UserDefinedTypeName","pathNode":{"id":3483,"name":"RecoverError","nameLocations":["7301:12:16"],"nodeType":"IdentifierPath","referencedDeclaration":3191,"src":"7301:12:16"},"referencedDeclaration":3191,"src":"7301:12:16","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$3191","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":3487,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:16","nodeType":"VariableDeclaration","scope":3530,"src":"7321:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:16"},"returnParameters":{"id":3489,"nodeType":"ParameterList","parameters":[],"src":"7352:0:16"},"scope":3531,"src":"7280:532:16","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3532,"src":"344:7470:16","usedErrors":[3194,3199,3204],"usedEvents":[]}],"src":"112:7703:16"},"id":16},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3605],"Strings":[3183]},"id":3606,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3533,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:17"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3535,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3606,"sourceUnit":3184,"src":"149:39:17","symbolAliases":[{"foreign":{"id":3534,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"157:7:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3536,"nodeType":"StructuredDocumentation","src":"190:330:17","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3605,"linearizedBaseContracts":[3605],"name":"MessageHashUtils","nameLocation":"529:16:17","nodeType":"ContractDefinition","nodes":[{"body":{"id":3545,"nodeType":"Block","src":"1314:341:17","statements":[{"AST":{"nativeSrc":"1349:300:17","nodeType":"YulBlock","src":"1349:300:17","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:17","nodeType":"YulLiteral","src":"1370:4:17","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:17","nodeType":"YulLiteral","src":"1376:34:17","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:17","nodeType":"YulIdentifier","src":"1363:6:17"},"nativeSrc":"1363:48:17","nodeType":"YulFunctionCall","src":"1363:48:17"},"nativeSrc":"1363:48:17","nodeType":"YulExpressionStatement","src":"1363:48:17"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:17","nodeType":"YulLiteral","src":"1472:4:17","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:17","nodeType":"YulIdentifier","src":"1478:11:17"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:17","nodeType":"YulIdentifier","src":"1465:6:17"},"nativeSrc":"1465:25:17","nodeType":"YulFunctionCall","src":"1465:25:17"},"nativeSrc":"1465:25:17","nodeType":"YulExpressionStatement","src":"1465:25:17"},{"nativeSrc":"1544:31:17","nodeType":"YulAssignment","src":"1544:31:17","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:17","nodeType":"YulLiteral","src":"1564:4:17","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:17","nodeType":"YulLiteral","src":"1570:4:17","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:17","nodeType":"YulIdentifier","src":"1554:9:17"},"nativeSrc":"1554:21:17","nodeType":"YulFunctionCall","src":"1554:21:17"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:17","nodeType":"YulIdentifier","src":"1544:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3542,"isOffset":false,"isSlot":false,"src":"1544:6:17","valueSize":1},{"declaration":3539,"isOffset":false,"isSlot":false,"src":"1478:11:17","valueSize":1}],"flags":["memory-safe"],"id":3544,"nodeType":"InlineAssembly","src":"1324:325:17"}]},"documentation":{"id":3537,"nodeType":"StructuredDocumentation","src":"552:665:17","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3546,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:17","nodeType":"FunctionDefinition","parameters":{"id":3540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3539,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:17","nodeType":"VariableDeclaration","scope":3546,"src":"1254:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3538,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:17"},"returnParameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"digest","nameLocation":"1306:6:17","nodeType":"VariableDeclaration","scope":3546,"src":"1298:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3541,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:17"},"scope":3605,"src":"1222:433:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3571,"nodeType":"Block","src":"2207:143:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3563,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"2316:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:17","memberName":"length","nodeType":"MemberAccess","src":"2316:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3561,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3183,"src":"2299:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$3183_$","typeString":"type(library Strings)"}},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2061,"src":"2299:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3560,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3559,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:17","typeDescriptions":{}}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3567,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"2334:7:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3556,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3555,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:17","typeDescriptions":{}}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:17","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:17","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3554,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3553,"id":3570,"nodeType":"Return","src":"2217:126:17"}]},"documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"1661:455:17","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3572,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:17","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"message","nameLocation":"2166:7:17","nodeType":"VariableDeclaration","scope":3572,"src":"2153:20:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3548,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:17"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3572,"src":"2198:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3551,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:17"},"scope":3605,"src":"2121:229:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3591,"nodeType":"Block","src":"2804:80:17","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3586,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"2860:9:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3587,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"2871:4:17","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3583,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3582,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3581,"id":3590,"nodeType":"Return","src":"2814:63:17"}]},"documentation":{"id":3573,"nodeType":"StructuredDocumentation","src":"2356:332:17","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3592,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:17","nodeType":"FunctionDefinition","parameters":{"id":3578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"validator","nameLocation":"2742:9:17","nodeType":"VariableDeclaration","scope":3592,"src":"2734:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3574,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"data","nameLocation":"2766:4:17","nodeType":"VariableDeclaration","scope":3592,"src":"2753:17:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3576,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:17"},"returnParameters":{"id":3581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3592,"src":"2795:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:17"},"scope":3605,"src":"2693:191:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3603,"nodeType":"Block","src":"3435:265:17","statements":[{"AST":{"nativeSrc":"3470:224:17","nodeType":"YulBlock","src":"3470:224:17","statements":[{"nativeSrc":"3484:22:17","nodeType":"YulVariableDeclaration","src":"3484:22:17","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:17","nodeType":"YulLiteral","src":"3501:4:17","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:17","nodeType":"YulIdentifier","src":"3495:5:17"},"nativeSrc":"3495:11:17","nodeType":"YulFunctionCall","src":"3495:11:17"},"variables":[{"name":"ptr","nativeSrc":"3488:3:17","nodeType":"YulTypedName","src":"3488:3:17","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:17","nodeType":"YulIdentifier","src":"3526:3:17"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:17","nodeType":"YulLiteral","src":"3531:10:17","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:17","nodeType":"YulIdentifier","src":"3519:6:17"},"nativeSrc":"3519:23:17","nodeType":"YulFunctionCall","src":"3519:23:17"},"nativeSrc":"3519:23:17","nodeType":"YulExpressionStatement","src":"3519:23:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:17","nodeType":"YulIdentifier","src":"3566:3:17"},{"kind":"number","nativeSrc":"3571:4:17","nodeType":"YulLiteral","src":"3571:4:17","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:17","nodeType":"YulIdentifier","src":"3562:3:17"},"nativeSrc":"3562:14:17","nodeType":"YulFunctionCall","src":"3562:14:17"},{"name":"domainSeparator","nativeSrc":"3578:15:17","nodeType":"YulIdentifier","src":"3578:15:17"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:17","nodeType":"YulIdentifier","src":"3555:6:17"},"nativeSrc":"3555:39:17","nodeType":"YulFunctionCall","src":"3555:39:17"},"nativeSrc":"3555:39:17","nodeType":"YulExpressionStatement","src":"3555:39:17"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:17","nodeType":"YulIdentifier","src":"3618:3:17"},{"kind":"number","nativeSrc":"3623:4:17","nodeType":"YulLiteral","src":"3623:4:17","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:17","nodeType":"YulIdentifier","src":"3614:3:17"},"nativeSrc":"3614:14:17","nodeType":"YulFunctionCall","src":"3614:14:17"},{"name":"structHash","nativeSrc":"3630:10:17","nodeType":"YulIdentifier","src":"3630:10:17"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:17","nodeType":"YulIdentifier","src":"3607:6:17"},"nativeSrc":"3607:34:17","nodeType":"YulFunctionCall","src":"3607:34:17"},"nativeSrc":"3607:34:17","nodeType":"YulExpressionStatement","src":"3607:34:17"},{"nativeSrc":"3654:30:17","nodeType":"YulAssignment","src":"3654:30:17","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:17","nodeType":"YulIdentifier","src":"3674:3:17"},{"kind":"number","nativeSrc":"3679:4:17","nodeType":"YulLiteral","src":"3679:4:17","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:17","nodeType":"YulIdentifier","src":"3664:9:17"},"nativeSrc":"3664:20:17","nodeType":"YulFunctionCall","src":"3664:20:17"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:17","nodeType":"YulIdentifier","src":"3654:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3600,"isOffset":false,"isSlot":false,"src":"3654:6:17","valueSize":1},{"declaration":3595,"isOffset":false,"isSlot":false,"src":"3578:15:17","valueSize":1},{"declaration":3597,"isOffset":false,"isSlot":false,"src":"3630:10:17","valueSize":1}],"flags":["memory-safe"],"id":3602,"nodeType":"InlineAssembly","src":"3445:249:17"}]},"documentation":{"id":3593,"nodeType":"StructuredDocumentation","src":"2890:431:17","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3604,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:17","nodeType":"FunctionDefinition","parameters":{"id":3598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3595,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:17","nodeType":"VariableDeclaration","scope":3604,"src":"3351:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3594,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3597,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:17","nodeType":"VariableDeclaration","scope":3604,"src":"3376:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3596,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:17"},"returnParameters":{"id":3601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3600,"mutability":"mutable","name":"digest","nameLocation":"3427:6:17","nodeType":"VariableDeclaration","scope":3604,"src":"3419:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3599,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:17"},"scope":3605,"src":"3326:374:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3606,"src":"521:3181:17","usedErrors":[],"usedEvents":[]}],"src":"123:3580:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3617]},"id":3618,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3607,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"141:280:18","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3617,"linearizedBaseContracts":[3617],"name":"IERC165","nameLocation":"432:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3609,"nodeType":"StructuredDocumentation","src":"446:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3616,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:18","nodeType":"FunctionDefinition","parameters":{"id":3612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3611,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:18","nodeType":"VariableDeclaration","scope":3616,"src":"818:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3610,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:18"},"returnParameters":{"id":3615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3616,"src":"861:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3613,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:18"},"scope":3617,"src":"791:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3618,"src":"422:447:18","usedErrors":[],"usedEvents":[]}],"src":"115:755:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5223],"Panic":[1983],"SafeCast":[6988]},"id":5224,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3619,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5224,"sourceUnit":1984,"src":"129:35:19","symbolAliases":[{"foreign":{"id":3620,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"137:5:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5224,"sourceUnit":6989,"src":"165:40:19","symbolAliases":[{"foreign":{"id":3622,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"173:8:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3624,"nodeType":"StructuredDocumentation","src":"207:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5223,"linearizedBaseContracts":[5223],"name":"Math","nameLocation":"289:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3629,"members":[{"id":3625,"name":"Floor","nameLocation":"324:5:19","nodeType":"EnumValue","src":"324:5:19"},{"id":3626,"name":"Ceil","nameLocation":"367:4:19","nodeType":"EnumValue","src":"367:4:19"},{"id":3627,"name":"Trunc","nameLocation":"409:5:19","nodeType":"EnumValue","src":"409:5:19"},{"id":3628,"name":"Expand","nameLocation":"439:6:19","nodeType":"EnumValue","src":"439:6:19"}],"name":"Rounding","nameLocation":"305:8:19","nodeType":"EnumDefinition","src":"300:169:19"},{"body":{"id":3660,"nodeType":"Block","src":"677:140:19","statements":[{"id":3659,"nodeType":"UncheckedBlock","src":"687:124:19","statements":[{"assignments":[3642],"declarations":[{"constant":false,"id":3642,"mutability":"mutable","name":"c","nameLocation":"719:1:19","nodeType":"VariableDeclaration","scope":3659,"src":"711:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3641,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3646,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3643,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"723:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3644,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"727:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3647,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"746:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3648,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"750:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3654,"nodeType":"IfStatement","src":"742:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3652,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3640,"id":3653,"nodeType":"Return","src":"753:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3656,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3642,"src":"798:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3657,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3640,"id":3658,"nodeType":"Return","src":"784:16:19"}]}]},"documentation":{"id":3630,"nodeType":"StructuredDocumentation","src":"475:106:19","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3661,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:19","nodeType":"FunctionDefinition","parameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3632,"mutability":"mutable","name":"a","nameLocation":"610:1:19","nodeType":"VariableDeclaration","scope":3661,"src":"602:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3634,"mutability":"mutable","name":"b","nameLocation":"621:1:19","nodeType":"VariableDeclaration","scope":3661,"src":"613:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:19"},"returnParameters":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"success","nameLocation":"652:7:19","nodeType":"VariableDeclaration","scope":3661,"src":"647:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3636,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"result","nameLocation":"669:6:19","nodeType":"VariableDeclaration","scope":3661,"src":"661:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:19"},"scope":5223,"src":"586:231:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3688,"nodeType":"Block","src":"1028:113:19","statements":[{"id":3687,"nodeType":"UncheckedBlock","src":"1038:97:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3673,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"1066:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3674,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"1070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3680,"nodeType":"IfStatement","src":"1062:28:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3678,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3672,"id":3679,"nodeType":"Return","src":"1073:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3664,"src":"1118:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3683,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3666,"src":"1122:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3685,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3672,"id":3686,"nodeType":"Return","src":"1104:20:19"}]}]},"documentation":{"id":3662,"nodeType":"StructuredDocumentation","src":"823:109:19","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3689,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:19","nodeType":"FunctionDefinition","parameters":{"id":3667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3664,"mutability":"mutable","name":"a","nameLocation":"961:1:19","nodeType":"VariableDeclaration","scope":3689,"src":"953:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3663,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3666,"mutability":"mutable","name":"b","nameLocation":"972:1:19","nodeType":"VariableDeclaration","scope":3689,"src":"964:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3665,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:19"},"returnParameters":{"id":3672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3669,"mutability":"mutable","name":"success","nameLocation":"1003:7:19","nodeType":"VariableDeclaration","scope":3689,"src":"998:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3668,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3671,"mutability":"mutable","name":"result","nameLocation":"1020:6:19","nodeType":"VariableDeclaration","scope":3689,"src":"1012:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:19"},"scope":5223,"src":"937:204:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3730,"nodeType":"Block","src":"1355:417:19","statements":[{"id":3729,"nodeType":"UncheckedBlock","src":"1365:401:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"1623:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3708,"nodeType":"IfStatement","src":"1619:28:19","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3706,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3700,"id":3707,"nodeType":"Return","src":"1631:16:19"}},{"assignments":[3710],"declarations":[{"constant":false,"id":3710,"mutability":"mutable","name":"c","nameLocation":"1669:1:19","nodeType":"VariableDeclaration","scope":3729,"src":"1661:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3714,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3711,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"1673:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3712,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"1677:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3715,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"1696:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3716,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3692,"src":"1700:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3718,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"1705:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3724,"nodeType":"IfStatement","src":"1692:33:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3722,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3700,"id":3723,"nodeType":"Return","src":"1708:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3726,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"1753:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3700,"id":3728,"nodeType":"Return","src":"1739:16:19"}]}]},"documentation":{"id":3690,"nodeType":"StructuredDocumentation","src":"1147:112:19","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3731,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:19","nodeType":"FunctionDefinition","parameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3692,"mutability":"mutable","name":"a","nameLocation":"1288:1:19","nodeType":"VariableDeclaration","scope":3731,"src":"1280:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3694,"mutability":"mutable","name":"b","nameLocation":"1299:1:19","nodeType":"VariableDeclaration","scope":3731,"src":"1291:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:19"},"returnParameters":{"id":3700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3697,"mutability":"mutable","name":"success","nameLocation":"1330:7:19","nodeType":"VariableDeclaration","scope":3731,"src":"1325:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3696,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3699,"mutability":"mutable","name":"result","nameLocation":"1347:6:19","nodeType":"VariableDeclaration","scope":3731,"src":"1339:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:19"},"scope":5223,"src":"1264:508:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3758,"nodeType":"Block","src":"1987:114:19","statements":[{"id":3757,"nodeType":"UncheckedBlock","src":"1997:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"2025:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3750,"nodeType":"IfStatement","src":"2021:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3748,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3742,"id":3749,"nodeType":"Return","src":"2033:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3752,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"2078:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3753,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"2082:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3742,"id":3756,"nodeType":"Return","src":"2064:20:19"}]}]},"documentation":{"id":3732,"nodeType":"StructuredDocumentation","src":"1778:113:19","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3759,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:19","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"a","nameLocation":"1920:1:19","nodeType":"VariableDeclaration","scope":3759,"src":"1912:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3733,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3736,"mutability":"mutable","name":"b","nameLocation":"1931:1:19","nodeType":"VariableDeclaration","scope":3759,"src":"1923:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:19"},"returnParameters":{"id":3742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"success","nameLocation":"1962:7:19","nodeType":"VariableDeclaration","scope":3759,"src":"1957:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3738,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3741,"mutability":"mutable","name":"result","nameLocation":"1979:6:19","nodeType":"VariableDeclaration","scope":3759,"src":"1971:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3740,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:19"},"scope":5223,"src":"1896:205:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3786,"nodeType":"Block","src":"2326:114:19","statements":[{"id":3785,"nodeType":"UncheckedBlock","src":"2336:98:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"2364:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"IfStatement","src":"2360:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3776,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3770,"id":3777,"nodeType":"Return","src":"2372:17:19"}},{"expression":{"components":[{"hexValue":"74727565","id":3779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3780,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3762,"src":"2417:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3781,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3764,"src":"2421:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3783,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3770,"id":3784,"nodeType":"Return","src":"2403:20:19"}]}]},"documentation":{"id":3760,"nodeType":"StructuredDocumentation","src":"2107:123:19","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3787,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:19","nodeType":"FunctionDefinition","parameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"a","nameLocation":"2259:1:19","nodeType":"VariableDeclaration","scope":3787,"src":"2251:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3761,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"b","nameLocation":"2270:1:19","nodeType":"VariableDeclaration","scope":3787,"src":"2262:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3763,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:19"},"returnParameters":{"id":3770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3767,"mutability":"mutable","name":"success","nameLocation":"2301:7:19","nodeType":"VariableDeclaration","scope":3787,"src":"2296:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3766,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3769,"mutability":"mutable","name":"result","nameLocation":"2318:6:19","nodeType":"VariableDeclaration","scope":3787,"src":"2310:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3768,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:19"},"scope":5223,"src":"2235:205:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3813,"nodeType":"Block","src":"2912:207:19","statements":[{"id":3812,"nodeType":"UncheckedBlock","src":"2922:191:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"3060:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3800,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"3066:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3801,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"3070:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3806,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3790,"src":"3091:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3804,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"3075:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"3075:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3809,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3798,"id":3811,"nodeType":"Return","src":"3053:49:19"}]}]},"documentation":{"id":3788,"nodeType":"StructuredDocumentation","src":"2446:374:19","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3814,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:19","nodeType":"FunctionDefinition","parameters":{"id":3795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"condition","nameLocation":"2847:9:19","nodeType":"VariableDeclaration","scope":3814,"src":"2842:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3789,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3792,"mutability":"mutable","name":"a","nameLocation":"2866:1:19","nodeType":"VariableDeclaration","scope":3814,"src":"2858:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"b","nameLocation":"2877:1:19","nodeType":"VariableDeclaration","scope":3814,"src":"2869:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:19"},"returnParameters":{"id":3798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3814,"src":"2903:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:19"},"scope":5223,"src":"2825:294:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3832,"nodeType":"Block","src":"3256:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"3281:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3826,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"3285:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3828,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3817,"src":"3288:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3829,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"3291:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3824,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"3273:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3823,"id":3831,"nodeType":"Return","src":"3266:27:19"}]},"documentation":{"id":3815,"nodeType":"StructuredDocumentation","src":"3125:59:19","text":" @dev Returns the largest of two numbers."},"id":3833,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:19","nodeType":"FunctionDefinition","parameters":{"id":3820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3817,"mutability":"mutable","name":"a","nameLocation":"3210:1:19","nodeType":"VariableDeclaration","scope":3833,"src":"3202:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3816,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3819,"mutability":"mutable","name":"b","nameLocation":"3221:1:19","nodeType":"VariableDeclaration","scope":3833,"src":"3213:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:19"},"returnParameters":{"id":3823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3822,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3833,"src":"3247:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:19"},"scope":5223,"src":"3189:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3851,"nodeType":"Block","src":"3438:44:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3844,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"3463:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3845,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"3467:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3847,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3836,"src":"3470:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3848,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"3473:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3843,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"3455:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3842,"id":3850,"nodeType":"Return","src":"3448:27:19"}]},"documentation":{"id":3834,"nodeType":"StructuredDocumentation","src":"3306:60:19","text":" @dev Returns the smallest of two numbers."},"id":3852,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:19","nodeType":"FunctionDefinition","parameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3836,"mutability":"mutable","name":"a","nameLocation":"3392:1:19","nodeType":"VariableDeclaration","scope":3852,"src":"3384:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3835,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"b","nameLocation":"3403:1:19","nodeType":"VariableDeclaration","scope":3852,"src":"3395:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3837,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:19"},"returnParameters":{"id":3842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3852,"src":"3429:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:19"},"scope":5223,"src":"3371:111:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3874,"nodeType":"Block","src":"3666:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3862,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"3721:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3863,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"3725:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3866,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"3731:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3867,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"3735:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3869,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3861,"id":3873,"nodeType":"Return","src":"3713:28:19"}]},"documentation":{"id":3853,"nodeType":"StructuredDocumentation","src":"3488:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3875,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:19","nodeType":"FunctionDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"a","nameLocation":"3620:1:19","nodeType":"VariableDeclaration","scope":3875,"src":"3612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3857,"mutability":"mutable","name":"b","nameLocation":"3631:1:19","nodeType":"VariableDeclaration","scope":3875,"src":"3623:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:19"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3875,"src":"3657:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:19"},"scope":5223,"src":"3595:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3915,"nodeType":"Block","src":"4040:633:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3885,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"4054:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3896,"nodeType":"IfStatement","src":"4050:150:19","trueBody":{"id":3895,"nodeType":"Block","src":"4062:138:19","statements":[{"expression":{"arguments":[{"expression":{"id":3891,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4166:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1983_$","typeString":"type(library Panic)"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1950,"src":"4166:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3888,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"4154:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1983_$","typeString":"type(library Panic)"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"4154:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3894,"nodeType":"ExpressionStatement","src":"4154:35:19"}]}},{"id":3914,"nodeType":"UncheckedBlock","src":"4583:84:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"4630:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3897,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"4614:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"4614:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3903,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3878,"src":"4641:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3906,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"4650:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3911,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3884,"id":3913,"nodeType":"Return","src":"4607:49:19"}]}]},"documentation":{"id":3876,"nodeType":"StructuredDocumentation","src":"3754:210:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3916,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:19","nodeType":"FunctionDefinition","parameters":{"id":3881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3878,"mutability":"mutable","name":"a","nameLocation":"3994:1:19","nodeType":"VariableDeclaration","scope":3916,"src":"3986:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3877,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"b","nameLocation":"4005:1:19","nodeType":"VariableDeclaration","scope":3916,"src":"3997:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:19"},"returnParameters":{"id":3884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3916,"src":"4031:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3882,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:19"},"scope":5223,"src":"3969:704:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4052,"nodeType":"Block","src":"5094:4128:19","statements":[{"id":4051,"nodeType":"UncheckedBlock","src":"5104:4112:19","statements":[{"assignments":[3929],"declarations":[{"constant":false,"id":3929,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:19","nodeType":"VariableDeclaration","scope":4051,"src":"5433:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3928,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3933,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3930,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3919,"src":"5449:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3931,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3921,"src":"5453:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:19"},{"assignments":[3935],"declarations":[{"constant":false,"id":3935,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:19","nodeType":"VariableDeclaration","scope":4051,"src":"5513:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3936,"nodeType":"VariableDeclarationStatement","src":"5513:13:19"},{"AST":{"nativeSrc":"5593:122:19","nodeType":"YulBlock","src":"5593:122:19","statements":[{"nativeSrc":"5611:30:19","nodeType":"YulVariableDeclaration","src":"5611:30:19","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:19","nodeType":"YulIdentifier","src":"5628:1:19"},{"name":"y","nativeSrc":"5631:1:19","nodeType":"YulIdentifier","src":"5631:1:19"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:19","nodeType":"YulLiteral","src":"5638:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:19","nodeType":"YulIdentifier","src":"5634:3:19"},"nativeSrc":"5634:6:19","nodeType":"YulFunctionCall","src":"5634:6:19"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:19","nodeType":"YulIdentifier","src":"5621:6:19"},"nativeSrc":"5621:20:19","nodeType":"YulFunctionCall","src":"5621:20:19"},"variables":[{"name":"mm","nativeSrc":"5615:2:19","nodeType":"YulTypedName","src":"5615:2:19","type":""}]},{"nativeSrc":"5658:43:19","nodeType":"YulAssignment","src":"5658:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:19","nodeType":"YulIdentifier","src":"5675:2:19"},{"name":"prod0","nativeSrc":"5679:5:19","nodeType":"YulIdentifier","src":"5679:5:19"}],"functionName":{"name":"sub","nativeSrc":"5671:3:19","nodeType":"YulIdentifier","src":"5671:3:19"},"nativeSrc":"5671:14:19","nodeType":"YulFunctionCall","src":"5671:14:19"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:19","nodeType":"YulIdentifier","src":"5690:2:19"},{"name":"prod0","nativeSrc":"5694:5:19","nodeType":"YulIdentifier","src":"5694:5:19"}],"functionName":{"name":"lt","nativeSrc":"5687:2:19","nodeType":"YulIdentifier","src":"5687:2:19"},"nativeSrc":"5687:13:19","nodeType":"YulFunctionCall","src":"5687:13:19"}],"functionName":{"name":"sub","nativeSrc":"5667:3:19","nodeType":"YulIdentifier","src":"5667:3:19"},"nativeSrc":"5667:34:19","nodeType":"YulFunctionCall","src":"5667:34:19"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:19","nodeType":"YulIdentifier","src":"5658:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3929,"isOffset":false,"isSlot":false,"src":"5679:5:19","valueSize":1},{"declaration":3929,"isOffset":false,"isSlot":false,"src":"5694:5:19","valueSize":1},{"declaration":3935,"isOffset":false,"isSlot":false,"src":"5658:5:19","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"5628:1:19","valueSize":1},{"declaration":3921,"isOffset":false,"isSlot":false,"src":"5631:1:19","valueSize":1}],"id":3937,"nodeType":"InlineAssembly","src":"5584:131:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3938,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"5796:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3946,"nodeType":"IfStatement","src":"5792:368:19","trueBody":{"id":3945,"nodeType":"Block","src":"5808:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3941,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"6126:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3942,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"6134:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3927,"id":3944,"nodeType":"Return","src":"6119:26:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3947,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"6270:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3948,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"6285:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3965,"nodeType":"IfStatement","src":"6266:143:19","trueBody":{"id":3964,"nodeType":"Block","src":"6292:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3954,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"6330:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3957,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6348:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1983_$","typeString":"type(library Panic)"}},"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1950,"src":"6348:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3959,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6372:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1983_$","typeString":"type(library Panic)"}},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:19","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1946,"src":"6372:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3953,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"6322:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3950,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"6310:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1983_$","typeString":"type(library Panic)"}},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"6310:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3963,"nodeType":"ExpressionStatement","src":"6310:84:19"}]}},{"assignments":[3967],"declarations":[{"constant":false,"id":3967,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:19","nodeType":"VariableDeclaration","scope":4051,"src":"6664:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3966,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3968,"nodeType":"VariableDeclarationStatement","src":"6664:17:19"},{"AST":{"nativeSrc":"6704:291:19","nodeType":"YulBlock","src":"6704:291:19","statements":[{"nativeSrc":"6773:38:19","nodeType":"YulAssignment","src":"6773:38:19","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:19","nodeType":"YulIdentifier","src":"6793:1:19"},{"name":"y","nativeSrc":"6796:1:19","nodeType":"YulIdentifier","src":"6796:1:19"},{"name":"denominator","nativeSrc":"6799:11:19","nodeType":"YulIdentifier","src":"6799:11:19"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:19","nodeType":"YulIdentifier","src":"6786:6:19"},"nativeSrc":"6786:25:19","nodeType":"YulFunctionCall","src":"6786:25:19"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:19","nodeType":"YulIdentifier","src":"6773:9:19"}]},{"nativeSrc":"6893:41:19","nodeType":"YulAssignment","src":"6893:41:19","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:19","nodeType":"YulIdentifier","src":"6906:5:19"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:19","nodeType":"YulIdentifier","src":"6916:9:19"},{"name":"prod0","nativeSrc":"6927:5:19","nodeType":"YulIdentifier","src":"6927:5:19"}],"functionName":{"name":"gt","nativeSrc":"6913:2:19","nodeType":"YulIdentifier","src":"6913:2:19"},"nativeSrc":"6913:20:19","nodeType":"YulFunctionCall","src":"6913:20:19"}],"functionName":{"name":"sub","nativeSrc":"6902:3:19","nodeType":"YulIdentifier","src":"6902:3:19"},"nativeSrc":"6902:32:19","nodeType":"YulFunctionCall","src":"6902:32:19"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:19","nodeType":"YulIdentifier","src":"6893:5:19"}]},{"nativeSrc":"6951:30:19","nodeType":"YulAssignment","src":"6951:30:19","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:19","nodeType":"YulIdentifier","src":"6964:5:19"},{"name":"remainder","nativeSrc":"6971:9:19","nodeType":"YulIdentifier","src":"6971:9:19"}],"functionName":{"name":"sub","nativeSrc":"6960:3:19","nodeType":"YulIdentifier","src":"6960:3:19"},"nativeSrc":"6960:21:19","nodeType":"YulFunctionCall","src":"6960:21:19"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:19","nodeType":"YulIdentifier","src":"6951:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3923,"isOffset":false,"isSlot":false,"src":"6799:11:19","valueSize":1},{"declaration":3929,"isOffset":false,"isSlot":false,"src":"6927:5:19","valueSize":1},{"declaration":3929,"isOffset":false,"isSlot":false,"src":"6951:5:19","valueSize":1},{"declaration":3929,"isOffset":false,"isSlot":false,"src":"6964:5:19","valueSize":1},{"declaration":3935,"isOffset":false,"isSlot":false,"src":"6893:5:19","valueSize":1},{"declaration":3935,"isOffset":false,"isSlot":false,"src":"6906:5:19","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"6773:9:19","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"6916:9:19","valueSize":1},{"declaration":3967,"isOffset":false,"isSlot":false,"src":"6971:9:19","valueSize":1},{"declaration":3919,"isOffset":false,"isSlot":false,"src":"6793:1:19","valueSize":1},{"declaration":3921,"isOffset":false,"isSlot":false,"src":"6796:1:19","valueSize":1}],"id":3969,"nodeType":"InlineAssembly","src":"6695:300:19"},{"assignments":[3971],"declarations":[{"constant":false,"id":3971,"mutability":"mutable","name":"twos","nameLocation":"7207:4:19","nodeType":"VariableDeclaration","scope":4051,"src":"7199:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3970,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3978,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3972,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"7214:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3974,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"7233:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:19"},{"AST":{"nativeSrc":"7268:366:19","nodeType":"YulBlock","src":"7268:366:19","statements":[{"nativeSrc":"7333:37:19","nodeType":"YulAssignment","src":"7333:37:19","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:19","nodeType":"YulIdentifier","src":"7352:11:19"},{"name":"twos","nativeSrc":"7365:4:19","nodeType":"YulIdentifier","src":"7365:4:19"}],"functionName":{"name":"div","nativeSrc":"7348:3:19","nodeType":"YulIdentifier","src":"7348:3:19"},"nativeSrc":"7348:22:19","nodeType":"YulFunctionCall","src":"7348:22:19"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:19","nodeType":"YulIdentifier","src":"7333:11:19"}]},{"nativeSrc":"7437:25:19","nodeType":"YulAssignment","src":"7437:25:19","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:19","nodeType":"YulIdentifier","src":"7450:5:19"},{"name":"twos","nativeSrc":"7457:4:19","nodeType":"YulIdentifier","src":"7457:4:19"}],"functionName":{"name":"div","nativeSrc":"7446:3:19","nodeType":"YulIdentifier","src":"7446:3:19"},"nativeSrc":"7446:16:19","nodeType":"YulFunctionCall","src":"7446:16:19"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:19","nodeType":"YulIdentifier","src":"7437:5:19"}]},{"nativeSrc":"7581:39:19","nodeType":"YulAssignment","src":"7581:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:19","nodeType":"YulLiteral","src":"7601:1:19","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:19","nodeType":"YulIdentifier","src":"7604:4:19"}],"functionName":{"name":"sub","nativeSrc":"7597:3:19","nodeType":"YulIdentifier","src":"7597:3:19"},"nativeSrc":"7597:12:19","nodeType":"YulFunctionCall","src":"7597:12:19"},{"name":"twos","nativeSrc":"7611:4:19","nodeType":"YulIdentifier","src":"7611:4:19"}],"functionName":{"name":"div","nativeSrc":"7593:3:19","nodeType":"YulIdentifier","src":"7593:3:19"},"nativeSrc":"7593:23:19","nodeType":"YulFunctionCall","src":"7593:23:19"},{"kind":"number","nativeSrc":"7618:1:19","nodeType":"YulLiteral","src":"7618:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:19","nodeType":"YulIdentifier","src":"7589:3:19"},"nativeSrc":"7589:31:19","nodeType":"YulFunctionCall","src":"7589:31:19"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:19","nodeType":"YulIdentifier","src":"7581:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3923,"isOffset":false,"isSlot":false,"src":"7333:11:19","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"7352:11:19","valueSize":1},{"declaration":3929,"isOffset":false,"isSlot":false,"src":"7437:5:19","valueSize":1},{"declaration":3929,"isOffset":false,"isSlot":false,"src":"7450:5:19","valueSize":1},{"declaration":3971,"isOffset":false,"isSlot":false,"src":"7365:4:19","valueSize":1},{"declaration":3971,"isOffset":false,"isSlot":false,"src":"7457:4:19","valueSize":1},{"declaration":3971,"isOffset":false,"isSlot":false,"src":"7581:4:19","valueSize":1},{"declaration":3971,"isOffset":false,"isSlot":false,"src":"7604:4:19","valueSize":1},{"declaration":3971,"isOffset":false,"isSlot":false,"src":"7611:4:19","valueSize":1}],"id":3979,"nodeType":"InlineAssembly","src":"7259:375:19"},{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3980,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"7700:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3981,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3935,"src":"7709:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3982,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3971,"src":"7717:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3985,"nodeType":"ExpressionStatement","src":"7700:21:19"},{"assignments":[3987],"declarations":[{"constant":false,"id":3987,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:19","nodeType":"VariableDeclaration","scope":4051,"src":"8056:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3986,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3994,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3989,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"8079:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3991,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:19"},{"expression":{"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3995,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8312:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3997,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"8327:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3998,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8341:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4002,"nodeType":"ExpressionStatement","src":"8312:36:19"},{"expression":{"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4003,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8382:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4005,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"8397:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4006,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8411:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4010,"nodeType":"ExpressionStatement","src":"8382:36:19"},{"expression":{"id":4017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4011,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8454:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"8469:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4014,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8483:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4018,"nodeType":"ExpressionStatement","src":"8454:36:19"},{"expression":{"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4019,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8525:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4021,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"8540:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4022,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8554:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4026,"nodeType":"ExpressionStatement","src":"8525:36:19"},{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4027,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8598:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4029,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"8613:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4030,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8627:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4034,"nodeType":"ExpressionStatement","src":"8598:36:19"},{"expression":{"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8672:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4037,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3923,"src":"8687:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4038,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"8701:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4042,"nodeType":"ExpressionStatement","src":"8672:36:19"},{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4043,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"9154:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4044,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3929,"src":"9163:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4045,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3987,"src":"9171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4048,"nodeType":"ExpressionStatement","src":"9154:24:19"},{"expression":{"id":4049,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"9199:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3927,"id":4050,"nodeType":"Return","src":"9192:13:19"}]}]},"documentation":{"id":3917,"nodeType":"StructuredDocumentation","src":"4679:312:19","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4053,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:19","nodeType":"FunctionDefinition","parameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"x","nameLocation":"5020:1:19","nodeType":"VariableDeclaration","scope":4053,"src":"5012:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3918,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3921,"mutability":"mutable","name":"y","nameLocation":"5031:1:19","nodeType":"VariableDeclaration","scope":4053,"src":"5023:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3923,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:19","nodeType":"VariableDeclaration","scope":4053,"src":"5034:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:19"},"returnParameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"result","nameLocation":"5086:6:19","nodeType":"VariableDeclaration","scope":4053,"src":"5078:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3925,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:19"},"scope":5223,"src":"4996:4226:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4089,"nodeType":"Block","src":"9461:128:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4069,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"9485:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4070,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"9488:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4071,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"9491:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4068,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4053,4090],"referencedDeclaration":4053,"src":"9478:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4076,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"9539:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}],"id":4075,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"9522:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3629_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4079,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"9559:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4080,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4058,"src":"9562:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4081,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4060,"src":"9565:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4078,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4073,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"9506:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"9506:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4067,"id":4088,"nodeType":"Return","src":"9471:111:19"}]},"documentation":{"id":4054,"nodeType":"StructuredDocumentation","src":"9228:118:19","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4090,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:19","nodeType":"FunctionDefinition","parameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4056,"mutability":"mutable","name":"x","nameLocation":"9375:1:19","nodeType":"VariableDeclaration","scope":4090,"src":"9367:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4058,"mutability":"mutable","name":"y","nameLocation":"9386:1:19","nodeType":"VariableDeclaration","scope":4090,"src":"9378:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4057,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4060,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:19","nodeType":"VariableDeclaration","scope":4090,"src":"9389:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4059,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4063,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:19","nodeType":"VariableDeclaration","scope":4090,"src":"9410:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"},"typeName":{"id":4062,"nodeType":"UserDefinedTypeName","pathNode":{"id":4061,"name":"Rounding","nameLocations":["9410:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3629,"src":"9410:8:19"},"referencedDeclaration":3629,"src":"9410:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:19"},"returnParameters":{"id":4067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4066,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4090,"src":"9452:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4065,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:19"},"scope":5223,"src":"9351:238:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4186,"nodeType":"Block","src":"10223:1849:19","statements":[{"id":4185,"nodeType":"UncheckedBlock","src":"10233:1833:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4100,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"10261:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4105,"nodeType":"IfStatement","src":"10257:20:19","trueBody":{"expression":{"hexValue":"30","id":4103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4099,"id":4104,"nodeType":"Return","src":"10269:8:19"}},{"assignments":[4107],"declarations":[{"constant":false,"id":4107,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:19","nodeType":"VariableDeclaration","scope":4185,"src":"10748:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4106,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4111,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4108,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"10768:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4109,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"10772:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:19"},{"assignments":[4113],"declarations":[{"constant":false,"id":4113,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:19","nodeType":"VariableDeclaration","scope":4185,"src":"10787:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4112,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4115,"initialValue":{"id":4114,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"10801:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:19"},{"assignments":[4117],"declarations":[{"constant":false,"id":4117,"mutability":"mutable","name":"x","nameLocation":"10945:1:19","nodeType":"VariableDeclaration","scope":4185,"src":"10938:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4116,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4119,"initialValue":{"hexValue":"30","id":4118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:19"},{"assignments":[4121],"declarations":[{"constant":false,"id":4121,"mutability":"mutable","name":"y","nameLocation":"10971:1:19","nodeType":"VariableDeclaration","scope":4185,"src":"10964:8:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4120,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4123,"initialValue":{"hexValue":"31","id":4122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:19"},{"body":{"id":4160,"nodeType":"Block","src":"11014:882:19","statements":[{"assignments":[4128],"declarations":[{"constant":false,"id":4128,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:19","nodeType":"VariableDeclaration","scope":4160,"src":"11032:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4127,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4132,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4129,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11051:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4130,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"11057:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:19"},{"expression":{"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4133,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11086:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4134,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"11091:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4135,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4136,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"11191:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4137,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11436:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4138,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"11442:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4139,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"11454:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4142,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4144,"nodeType":"ExpressionStatement","src":"11085:395:19"},{"expression":{"id":4158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4145,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"11500:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4146,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"11503:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4147,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4148,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"11585:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4149,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"11839:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4150,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4121,"src":"11843:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4153,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4128,"src":"11854:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4151,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:19","typeDescriptions":{}}},"id":4154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:19","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4159,"nodeType":"ExpressionStatement","src":"11499:382:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4124,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"10998:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4161,"nodeType":"WhileStatement","src":"10991:905:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4162,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4113,"src":"11914:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4167,"nodeType":"IfStatement","src":"11910:22:19","trueBody":{"expression":{"hexValue":"30","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4099,"id":4166,"nodeType":"Return","src":"11924:8:19"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4169,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"11983:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4172,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"11990:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:19","subExpression":{"id":4175,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"12003:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:19","typeDescriptions":{}}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4181,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4117,"src":"12015:1:19","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4179,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:19","typeDescriptions":{}}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4168,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3814,"src":"11975:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4099,"id":4184,"nodeType":"Return","src":"11968:50:19"}]}]},"documentation":{"id":4091,"nodeType":"StructuredDocumentation","src":"9595:553:19","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4187,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:19","nodeType":"FunctionDefinition","parameters":{"id":4096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4093,"mutability":"mutable","name":"a","nameLocation":"10177:1:19","nodeType":"VariableDeclaration","scope":4187,"src":"10169:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4095,"mutability":"mutable","name":"n","nameLocation":"10188:1:19","nodeType":"VariableDeclaration","scope":4187,"src":"10180:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:19"},"returnParameters":{"id":4099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4187,"src":"10214:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:19"},"scope":5223,"src":"10153:1919:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4207,"nodeType":"Block","src":"12672:82:19","statements":[{"id":4206,"nodeType":"UncheckedBlock","src":"12682:66:19","statements":[{"expression":{"arguments":[{"id":4199,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4190,"src":"12725:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4200,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"12728:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4203,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"12735:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4197,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5223,"src":"12713:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5223_$","typeString":"type(library Math)"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:19","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4244,"src":"12713:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4196,"id":4205,"nodeType":"Return","src":"12706:31:19"}]}]},"documentation":{"id":4188,"nodeType":"StructuredDocumentation","src":"12078:514:19","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4208,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:19","nodeType":"FunctionDefinition","parameters":{"id":4193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4190,"mutability":"mutable","name":"a","nameLocation":"12626:1:19","nodeType":"VariableDeclaration","scope":4208,"src":"12618:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4189,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4192,"mutability":"mutable","name":"p","nameLocation":"12637:1:19","nodeType":"VariableDeclaration","scope":4208,"src":"12629:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4191,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:19"},"returnParameters":{"id":4196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4208,"src":"12663:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:19"},"scope":5223,"src":"12597:157:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"13524:174:19","statements":[{"assignments":[4221,4223],"declarations":[{"constant":false,"id":4221,"mutability":"mutable","name":"success","nameLocation":"13540:7:19","nodeType":"VariableDeclaration","scope":4243,"src":"13535:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4220,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4223,"mutability":"mutable","name":"result","nameLocation":"13557:6:19","nodeType":"VariableDeclaration","scope":4243,"src":"13549:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4222,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4229,"initialValue":{"arguments":[{"id":4225,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4211,"src":"13577:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4226,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"13580:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4227,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"13583:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4224,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4268,4350],"referencedDeclaration":4268,"src":"13567:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:19"},{"condition":{"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:19","subExpression":{"id":4230,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"13600:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4240,"nodeType":"IfStatement","src":"13595:74:19","trueBody":{"id":4239,"nodeType":"Block","src":"13609:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4235,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"13635:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1983_$","typeString":"type(library Panic)"}},"id":4236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1950,"src":"13635:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4232,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"13623:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1983_$","typeString":"type(library Panic)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"13623:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4238,"nodeType":"ExpressionStatement","src":"13623:35:19"}]}},{"expression":{"id":4241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4223,"src":"13685:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4219,"id":4242,"nodeType":"Return","src":"13678:13:19"}]},"documentation":{"id":4209,"nodeType":"StructuredDocumentation","src":"12760:678:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:19","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"b","nameLocation":"13467:1:19","nodeType":"VariableDeclaration","scope":4244,"src":"13459:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4213,"mutability":"mutable","name":"e","nameLocation":"13478:1:19","nodeType":"VariableDeclaration","scope":4244,"src":"13470:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4212,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4215,"mutability":"mutable","name":"m","nameLocation":"13489:1:19","nodeType":"VariableDeclaration","scope":4244,"src":"13481:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4214,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:19"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"13515:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:19"},"scope":5223,"src":"13443:255:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4267,"nodeType":"Block","src":"14552:1493:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4258,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"14566:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4265,"nodeType":"IfStatement","src":"14562:29:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4257,"id":4264,"nodeType":"Return","src":"14574:17:19"}},{"AST":{"nativeSrc":"14626:1413:19","nodeType":"YulBlock","src":"14626:1413:19","statements":[{"nativeSrc":"14640:22:19","nodeType":"YulVariableDeclaration","src":"14640:22:19","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:19","nodeType":"YulLiteral","src":"14657:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:19","nodeType":"YulIdentifier","src":"14651:5:19"},"nativeSrc":"14651:11:19","nodeType":"YulFunctionCall","src":"14651:11:19"},"variables":[{"name":"ptr","nativeSrc":"14644:3:19","nodeType":"YulTypedName","src":"14644:3:19","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:19","nodeType":"YulIdentifier","src":"15570:3:19"},{"kind":"number","nativeSrc":"15575:4:19","nodeType":"YulLiteral","src":"15575:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:19","nodeType":"YulIdentifier","src":"15563:6:19"},"nativeSrc":"15563:17:19","nodeType":"YulFunctionCall","src":"15563:17:19"},"nativeSrc":"15563:17:19","nodeType":"YulExpressionStatement","src":"15563:17:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:19","nodeType":"YulIdentifier","src":"15604:3:19"},{"kind":"number","nativeSrc":"15609:4:19","nodeType":"YulLiteral","src":"15609:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:19","nodeType":"YulIdentifier","src":"15600:3:19"},"nativeSrc":"15600:14:19","nodeType":"YulFunctionCall","src":"15600:14:19"},{"kind":"number","nativeSrc":"15616:4:19","nodeType":"YulLiteral","src":"15616:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:19","nodeType":"YulIdentifier","src":"15593:6:19"},"nativeSrc":"15593:28:19","nodeType":"YulFunctionCall","src":"15593:28:19"},"nativeSrc":"15593:28:19","nodeType":"YulExpressionStatement","src":"15593:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:19","nodeType":"YulIdentifier","src":"15645:3:19"},{"kind":"number","nativeSrc":"15650:4:19","nodeType":"YulLiteral","src":"15650:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:19","nodeType":"YulIdentifier","src":"15641:3:19"},"nativeSrc":"15641:14:19","nodeType":"YulFunctionCall","src":"15641:14:19"},{"kind":"number","nativeSrc":"15657:4:19","nodeType":"YulLiteral","src":"15657:4:19","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:19","nodeType":"YulIdentifier","src":"15634:6:19"},"nativeSrc":"15634:28:19","nodeType":"YulFunctionCall","src":"15634:28:19"},"nativeSrc":"15634:28:19","nodeType":"YulExpressionStatement","src":"15634:28:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:19","nodeType":"YulIdentifier","src":"15686:3:19"},{"kind":"number","nativeSrc":"15691:4:19","nodeType":"YulLiteral","src":"15691:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:19","nodeType":"YulIdentifier","src":"15682:3:19"},"nativeSrc":"15682:14:19","nodeType":"YulFunctionCall","src":"15682:14:19"},{"name":"b","nativeSrc":"15698:1:19","nodeType":"YulIdentifier","src":"15698:1:19"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:19","nodeType":"YulIdentifier","src":"15675:6:19"},"nativeSrc":"15675:25:19","nodeType":"YulFunctionCall","src":"15675:25:19"},"nativeSrc":"15675:25:19","nodeType":"YulExpressionStatement","src":"15675:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:19","nodeType":"YulIdentifier","src":"15724:3:19"},{"kind":"number","nativeSrc":"15729:4:19","nodeType":"YulLiteral","src":"15729:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:19","nodeType":"YulIdentifier","src":"15720:3:19"},"nativeSrc":"15720:14:19","nodeType":"YulFunctionCall","src":"15720:14:19"},{"name":"e","nativeSrc":"15736:1:19","nodeType":"YulIdentifier","src":"15736:1:19"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:19","nodeType":"YulIdentifier","src":"15713:6:19"},"nativeSrc":"15713:25:19","nodeType":"YulFunctionCall","src":"15713:25:19"},"nativeSrc":"15713:25:19","nodeType":"YulExpressionStatement","src":"15713:25:19"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:19","nodeType":"YulIdentifier","src":"15762:3:19"},{"kind":"number","nativeSrc":"15767:4:19","nodeType":"YulLiteral","src":"15767:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:19","nodeType":"YulIdentifier","src":"15758:3:19"},"nativeSrc":"15758:14:19","nodeType":"YulFunctionCall","src":"15758:14:19"},{"name":"m","nativeSrc":"15774:1:19","nodeType":"YulIdentifier","src":"15774:1:19"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:19","nodeType":"YulIdentifier","src":"15751:6:19"},"nativeSrc":"15751:25:19","nodeType":"YulFunctionCall","src":"15751:25:19"},"nativeSrc":"15751:25:19","nodeType":"YulExpressionStatement","src":"15751:25:19"},{"nativeSrc":"15938:57:19","nodeType":"YulAssignment","src":"15938:57:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:19","nodeType":"YulIdentifier","src":"15960:3:19"},"nativeSrc":"15960:5:19","nodeType":"YulFunctionCall","src":"15960:5:19"},{"kind":"number","nativeSrc":"15967:4:19","nodeType":"YulLiteral","src":"15967:4:19","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:19","nodeType":"YulIdentifier","src":"15973:3:19"},{"kind":"number","nativeSrc":"15978:4:19","nodeType":"YulLiteral","src":"15978:4:19","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:19","nodeType":"YulLiteral","src":"15984:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:19","nodeType":"YulLiteral","src":"15990:4:19","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:19","nodeType":"YulIdentifier","src":"15949:10:19"},"nativeSrc":"15949:46:19","nodeType":"YulFunctionCall","src":"15949:46:19"},"variableNames":[{"name":"success","nativeSrc":"15938:7:19","nodeType":"YulIdentifier","src":"15938:7:19"}]},{"nativeSrc":"16008:21:19","nodeType":"YulAssignment","src":"16008:21:19","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:19","nodeType":"YulLiteral","src":"16024:4:19","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:19","nodeType":"YulIdentifier","src":"16018:5:19"},"nativeSrc":"16018:11:19","nodeType":"YulFunctionCall","src":"16018:11:19"},"variableNames":[{"name":"result","nativeSrc":"16008:6:19","nodeType":"YulIdentifier","src":"16008:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4247,"isOffset":false,"isSlot":false,"src":"15698:1:19","valueSize":1},{"declaration":4249,"isOffset":false,"isSlot":false,"src":"15736:1:19","valueSize":1},{"declaration":4251,"isOffset":false,"isSlot":false,"src":"15774:1:19","valueSize":1},{"declaration":4256,"isOffset":false,"isSlot":false,"src":"16008:6:19","valueSize":1},{"declaration":4254,"isOffset":false,"isSlot":false,"src":"15938:7:19","valueSize":1}],"flags":["memory-safe"],"id":4266,"nodeType":"InlineAssembly","src":"14601:1438:19"}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"13704:738:19","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:19","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4247,"mutability":"mutable","name":"b","nameLocation":"14474:1:19","nodeType":"VariableDeclaration","scope":4268,"src":"14466:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4246,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4249,"mutability":"mutable","name":"e","nameLocation":"14485:1:19","nodeType":"VariableDeclaration","scope":4268,"src":"14477:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4248,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"m","nameLocation":"14496:1:19","nodeType":"VariableDeclaration","scope":4268,"src":"14488:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:19"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"success","nameLocation":"14527:7:19","nodeType":"VariableDeclaration","scope":4268,"src":"14522:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4253,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4256,"mutability":"mutable","name":"result","nameLocation":"14544:6:19","nodeType":"VariableDeclaration","scope":4268,"src":"14536:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:19"},"scope":5223,"src":"14447:1598:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4303,"nodeType":"Block","src":"16242:179:19","statements":[{"assignments":[4281,4283],"declarations":[{"constant":false,"id":4281,"mutability":"mutable","name":"success","nameLocation":"16258:7:19","nodeType":"VariableDeclaration","scope":4303,"src":"16253:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4280,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4283,"mutability":"mutable","name":"result","nameLocation":"16280:6:19","nodeType":"VariableDeclaration","scope":4303,"src":"16267:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4282,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4289,"initialValue":{"arguments":[{"id":4285,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"16300:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4286,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4273,"src":"16303:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4287,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"16306:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4284,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4268,4350],"referencedDeclaration":4350,"src":"16290:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:19"},{"condition":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:19","subExpression":{"id":4290,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4281,"src":"16323:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4300,"nodeType":"IfStatement","src":"16318:74:19","trueBody":{"id":4299,"nodeType":"Block","src":"16332:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":4295,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"16358:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1983_$","typeString":"type(library Panic)"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:19","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1950,"src":"16358:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4292,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1983,"src":"16346:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1983_$","typeString":"type(library Panic)"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:19","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"16346:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4298,"nodeType":"ExpressionStatement","src":"16346:35:19"}]}},{"expression":{"id":4301,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4283,"src":"16408:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4279,"id":4302,"nodeType":"Return","src":"16401:13:19"}]},"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"16051:85:19","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4304,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:19","nodeType":"FunctionDefinition","parameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"b","nameLocation":"16170:1:19","nodeType":"VariableDeclaration","scope":4304,"src":"16157:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4270,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4273,"mutability":"mutable","name":"e","nameLocation":"16186:1:19","nodeType":"VariableDeclaration","scope":4304,"src":"16173:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4272,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4275,"mutability":"mutable","name":"m","nameLocation":"16202:1:19","nodeType":"VariableDeclaration","scope":4304,"src":"16189:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4274,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:19"},"returnParameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4304,"src":"16228:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4277,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:19"},"scope":5223,"src":"16141:280:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4349,"nodeType":"Block","src":"16675:771:19","statements":[{"condition":{"arguments":[{"id":4319,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"16700:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4318,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4383,"src":"16689:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4328,"nodeType":"IfStatement","src":"16685:47:19","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4322,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4326,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4317,"id":4327,"nodeType":"Return","src":"16704:28:19"}},{"assignments":[4330],"declarations":[{"constant":false,"id":4330,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:19","nodeType":"VariableDeclaration","scope":4349,"src":"16743:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4329,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4333,"initialValue":{"expression":{"id":4331,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"16758:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:19","memberName":"length","nodeType":"MemberAccess","src":"16758:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:19"},{"expression":{"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4316,"src":"16848:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4337,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"16874:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:19","memberName":"length","nodeType":"MemberAccess","src":"16874:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4339,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"16884:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:19","memberName":"length","nodeType":"MemberAccess","src":"16884:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4341,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4330,"src":"16894:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4342,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"16900:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4343,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"16903:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4344,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4311,"src":"16906:1:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4335,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4347,"nodeType":"ExpressionStatement","src":"16848:60:19"},{"AST":{"nativeSrc":"16944:496:19","nodeType":"YulBlock","src":"16944:496:19","statements":[{"nativeSrc":"16958:32:19","nodeType":"YulVariableDeclaration","src":"16958:32:19","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:19","nodeType":"YulIdentifier","src":"16977:6:19"},{"kind":"number","nativeSrc":"16985:4:19","nodeType":"YulLiteral","src":"16985:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:19","nodeType":"YulIdentifier","src":"16973:3:19"},"nativeSrc":"16973:17:19","nodeType":"YulFunctionCall","src":"16973:17:19"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:19","nodeType":"YulTypedName","src":"16962:7:19","type":""}]},{"nativeSrc":"17080:73:19","nodeType":"YulAssignment","src":"17080:73:19","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:19","nodeType":"YulIdentifier","src":"17102:3:19"},"nativeSrc":"17102:5:19","nodeType":"YulFunctionCall","src":"17102:5:19"},{"kind":"number","nativeSrc":"17109:4:19","nodeType":"YulLiteral","src":"17109:4:19","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:19","nodeType":"YulIdentifier","src":"17115:7:19"},{"arguments":[{"name":"result","nativeSrc":"17130:6:19","nodeType":"YulIdentifier","src":"17130:6:19"}],"functionName":{"name":"mload","nativeSrc":"17124:5:19","nodeType":"YulIdentifier","src":"17124:5:19"},"nativeSrc":"17124:13:19","nodeType":"YulFunctionCall","src":"17124:13:19"},{"name":"dataPtr","nativeSrc":"17139:7:19","nodeType":"YulIdentifier","src":"17139:7:19"},{"name":"mLen","nativeSrc":"17148:4:19","nodeType":"YulIdentifier","src":"17148:4:19"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:19","nodeType":"YulIdentifier","src":"17091:10:19"},"nativeSrc":"17091:62:19","nodeType":"YulFunctionCall","src":"17091:62:19"},"variableNames":[{"name":"success","nativeSrc":"17080:7:19","nodeType":"YulIdentifier","src":"17080:7:19"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:19","nodeType":"YulIdentifier","src":"17309:6:19"},{"name":"mLen","nativeSrc":"17317:4:19","nodeType":"YulIdentifier","src":"17317:4:19"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:19","nodeType":"YulIdentifier","src":"17302:6:19"},"nativeSrc":"17302:20:19","nodeType":"YulFunctionCall","src":"17302:20:19"},"nativeSrc":"17302:20:19","nodeType":"YulExpressionStatement","src":"17302:20:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:19","nodeType":"YulLiteral","src":"17405:4:19","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:19","nodeType":"YulIdentifier","src":"17415:7:19"},{"name":"mLen","nativeSrc":"17424:4:19","nodeType":"YulIdentifier","src":"17424:4:19"}],"functionName":{"name":"add","nativeSrc":"17411:3:19","nodeType":"YulIdentifier","src":"17411:3:19"},"nativeSrc":"17411:18:19","nodeType":"YulFunctionCall","src":"17411:18:19"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:19","nodeType":"YulIdentifier","src":"17398:6:19"},"nativeSrc":"17398:32:19","nodeType":"YulFunctionCall","src":"17398:32:19"},"nativeSrc":"17398:32:19","nodeType":"YulExpressionStatement","src":"17398:32:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4330,"isOffset":false,"isSlot":false,"src":"17148:4:19","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"17317:4:19","valueSize":1},{"declaration":4330,"isOffset":false,"isSlot":false,"src":"17424:4:19","valueSize":1},{"declaration":4316,"isOffset":false,"isSlot":false,"src":"16977:6:19","valueSize":1},{"declaration":4316,"isOffset":false,"isSlot":false,"src":"17130:6:19","valueSize":1},{"declaration":4316,"isOffset":false,"isSlot":false,"src":"17309:6:19","valueSize":1},{"declaration":4314,"isOffset":false,"isSlot":false,"src":"17080:7:19","valueSize":1}],"flags":["memory-safe"],"id":4348,"nodeType":"InlineAssembly","src":"16919:521:19"}]},"documentation":{"id":4305,"nodeType":"StructuredDocumentation","src":"16427:88:19","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4350,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:19","nodeType":"FunctionDefinition","parameters":{"id":4312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4307,"mutability":"mutable","name":"b","nameLocation":"16561:1:19","nodeType":"VariableDeclaration","scope":4350,"src":"16548:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4306,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4309,"mutability":"mutable","name":"e","nameLocation":"16585:1:19","nodeType":"VariableDeclaration","scope":4350,"src":"16572:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4308,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4311,"mutability":"mutable","name":"m","nameLocation":"16609:1:19","nodeType":"VariableDeclaration","scope":4350,"src":"16596:14:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4310,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:19"},"returnParameters":{"id":4317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"mutability":"mutable","name":"success","nameLocation":"16645:7:19","nodeType":"VariableDeclaration","scope":4350,"src":"16640:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4313,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4316,"mutability":"mutable","name":"result","nameLocation":"16667:6:19","nodeType":"VariableDeclaration","scope":4350,"src":"16654:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4315,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:19"},"scope":5223,"src":"16520:926:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4382,"nodeType":"Block","src":"17601:176:19","statements":[{"body":{"id":4378,"nodeType":"Block","src":"17658:92:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4369,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"17676:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4371,"indexExpression":{"id":4370,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"17686:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:19","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4377,"nodeType":"IfStatement","src":"17672:68:19","trueBody":{"id":4376,"nodeType":"Block","src":"17695:45:19","statements":[{"expression":{"hexValue":"66616c7365","id":4374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4357,"id":4375,"nodeType":"Return","src":"17713:12:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"17631:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4363,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4353,"src":"17635:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:19","memberName":"length","nodeType":"MemberAccess","src":"17635:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4379,"initializationExpression":{"assignments":[4359],"declarations":[{"constant":false,"id":4359,"mutability":"mutable","name":"i","nameLocation":"17624:1:19","nodeType":"VariableDeclaration","scope":4379,"src":"17616:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4361,"initialValue":{"hexValue":"30","id":4360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:19"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:19","subExpression":{"id":4366,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4359,"src":"17655:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4368,"nodeType":"ExpressionStatement","src":"17653:3:19"},"nodeType":"ForStatement","src":"17611:139:19"},{"expression":{"hexValue":"74727565","id":4380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4357,"id":4381,"nodeType":"Return","src":"17759:11:19"}]},"documentation":{"id":4351,"nodeType":"StructuredDocumentation","src":"17452:72:19","text":" @dev Returns whether the provided byte array is zero."},"id":4383,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:19","nodeType":"FunctionDefinition","parameters":{"id":4354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4353,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:19","nodeType":"VariableDeclaration","scope":4383,"src":"17549:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4352,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:19"},"returnParameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4383,"src":"17595:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4355,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:19"},"scope":5223,"src":"17529:248:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4601,"nodeType":"Block","src":"18137:5124:19","statements":[{"id":4600,"nodeType":"UncheckedBlock","src":"18147:5108:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4391,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"18241:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4397,"nodeType":"IfStatement","src":"18237:53:19","trueBody":{"id":4396,"nodeType":"Block","src":"18249:41:19","statements":[{"expression":{"id":4394,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"18274:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4390,"id":4395,"nodeType":"Return","src":"18267:8:19"}]}},{"assignments":[4399],"declarations":[{"constant":false,"id":4399,"mutability":"mutable","name":"aa","nameLocation":"19225:2:19","nodeType":"VariableDeclaration","scope":4600,"src":"19217:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4401,"initialValue":{"id":4400,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"19230:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:19"},{"assignments":[4403],"declarations":[{"constant":false,"id":4403,"mutability":"mutable","name":"xn","nameLocation":"19253:2:19","nodeType":"VariableDeclaration","scope":4600,"src":"19245:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4402,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4405,"initialValue":{"hexValue":"31","id":4404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4406,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19278:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4410,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4421,"nodeType":"IfStatement","src":"19274:92:19","trueBody":{"id":4420,"nodeType":"Block","src":"19296:70:19","statements":[{"expression":{"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4412,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19314:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4415,"nodeType":"ExpressionStatement","src":"19314:10:19"},{"expression":{"id":4418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4416,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"19342:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4419,"nodeType":"ExpressionStatement","src":"19342:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4422,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19383:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4437,"nodeType":"IfStatement","src":"19379:90:19","trueBody":{"id":4436,"nodeType":"Block","src":"19400:69:19","statements":[{"expression":{"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4428,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19418:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4431,"nodeType":"ExpressionStatement","src":"19418:9:19"},{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4432,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"19445:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"19445:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4438,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19486:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4453,"nodeType":"IfStatement","src":"19482:90:19","trueBody":{"id":4452,"nodeType":"Block","src":"19503:69:19","statements":[{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4444,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19521:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4447,"nodeType":"ExpressionStatement","src":"19521:9:19"},{"expression":{"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4448,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"19548:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4451,"nodeType":"ExpressionStatement","src":"19548:9:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4454,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19589:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4458,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4469,"nodeType":"IfStatement","src":"19585:89:19","trueBody":{"id":4468,"nodeType":"Block","src":"19606:68:19","statements":[{"expression":{"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4460,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19624:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4463,"nodeType":"ExpressionStatement","src":"19624:9:19"},{"expression":{"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4464,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"19651:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4467,"nodeType":"ExpressionStatement","src":"19651:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4470,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19691:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4474,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4485,"nodeType":"IfStatement","src":"19687:87:19","trueBody":{"id":4484,"nodeType":"Block","src":"19707:67:19","statements":[{"expression":{"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4476,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19725:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4479,"nodeType":"ExpressionStatement","src":"19725:8:19"},{"expression":{"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4480,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"19751:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4483,"nodeType":"ExpressionStatement","src":"19751:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4486,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19791:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4501,"nodeType":"IfStatement","src":"19787:87:19","trueBody":{"id":4500,"nodeType":"Block","src":"19807:67:19","statements":[{"expression":{"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4492,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19825:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4495,"nodeType":"ExpressionStatement","src":"19825:8:19"},{"expression":{"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"19851:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4499,"nodeType":"ExpressionStatement","src":"19851:8:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4502,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"19891:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4506,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4513,"nodeType":"IfStatement","src":"19887:61:19","trueBody":{"id":4512,"nodeType":"Block","src":"19907:41:19","statements":[{"expression":{"id":4510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4508,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"19925:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4511,"nodeType":"ExpressionStatement","src":"19925:8:19"}]}},{"expression":{"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4514,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"20368:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4516,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"20378:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4522,"nodeType":"ExpressionStatement","src":"20368:18:19"},{"expression":{"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4523,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22273:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4524,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22279:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4525,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"22284:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22288:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4529,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4533,"nodeType":"ExpressionStatement","src":"22273:23:19"},{"expression":{"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4534,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22382:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4535,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22388:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"22393:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4537,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22397:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4544,"nodeType":"ExpressionStatement","src":"22382:23:19"},{"expression":{"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4545,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22493:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22499:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4547,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"22504:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4548,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22508:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4551,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4555,"nodeType":"ExpressionStatement","src":"22493:23:19"},{"expression":{"id":4565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4556,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22602:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4557,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22608:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4558,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"22613:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4559,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22617:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4566,"nodeType":"ExpressionStatement","src":"22602:23:19"},{"expression":{"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4567,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22712:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4568,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22718:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"22723:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4570,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22727:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4577,"nodeType":"ExpressionStatement","src":"22712:23:19"},{"expression":{"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4578,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22822:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4579,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22828:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"22833:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4581,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"22837:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4584,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4588,"nodeType":"ExpressionStatement","src":"22822:23:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4589,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"23211:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4592,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"23232:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4593,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4386,"src":"23237:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4594,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"23241:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4590,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"23216:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"23216:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4390,"id":4599,"nodeType":"Return","src":"23204:40:19"}]}]},"documentation":{"id":4384,"nodeType":"StructuredDocumentation","src":"17783:292:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4602,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:19","nodeType":"FunctionDefinition","parameters":{"id":4387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4386,"mutability":"mutable","name":"a","nameLocation":"18102:1:19","nodeType":"VariableDeclaration","scope":4602,"src":"18094:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4385,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:19"},"returnParameters":{"id":4390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4389,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4602,"src":"18128:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4388,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:19"},"scope":5223,"src":"18080:5181:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4635,"nodeType":"Block","src":"23434:171:19","statements":[{"id":4634,"nodeType":"UncheckedBlock","src":"23444:155:19","statements":[{"assignments":[4614],"declarations":[{"constant":false,"id":4614,"mutability":"mutable","name":"result","nameLocation":"23476:6:19","nodeType":"VariableDeclaration","scope":4634,"src":"23468:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4613,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4618,"initialValue":{"arguments":[{"id":4616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"23490:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4615,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4602,4636],"referencedDeclaration":4602,"src":"23485:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"23513:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4623,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4608,"src":"23555:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}],"id":4622,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"23538:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3629_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4625,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"23568:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4626,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4614,"src":"23577:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4628,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"23586:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4620,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"23522:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"23522:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4612,"id":4633,"nodeType":"Return","src":"23506:82:19"}]}]},"documentation":{"id":4603,"nodeType":"StructuredDocumentation","src":"23267:86:19","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4636,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:19","nodeType":"FunctionDefinition","parameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4605,"mutability":"mutable","name":"a","nameLocation":"23380:1:19","nodeType":"VariableDeclaration","scope":4636,"src":"23372:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:19","nodeType":"VariableDeclaration","scope":4636,"src":"23383:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"},"typeName":{"id":4607,"nodeType":"UserDefinedTypeName","pathNode":{"id":4606,"name":"Rounding","nameLocations":["23383:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3629,"src":"23383:8:19"},"referencedDeclaration":3629,"src":"23383:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:19"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4636,"src":"23425:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4610,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:19"},"scope":5223,"src":"23358:247:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4831,"nodeType":"Block","src":"23796:981:19","statements":[{"assignments":[4645],"declarations":[{"constant":false,"id":4645,"mutability":"mutable","name":"result","nameLocation":"23814:6:19","nodeType":"VariableDeclaration","scope":4831,"src":"23806:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4647,"initialValue":{"hexValue":"30","id":4646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:19"},{"assignments":[4649],"declarations":[{"constant":false,"id":4649,"mutability":"mutable","name":"exp","nameLocation":"23842:3:19","nodeType":"VariableDeclaration","scope":4831,"src":"23834:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4650,"nodeType":"VariableDeclarationStatement","src":"23834:11:19"},{"id":4828,"nodeType":"UncheckedBlock","src":"23855:893:19","statements":[{"expression":{"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4651,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"23879:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"23907:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4659,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4653,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"23891:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"23891:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4666,"nodeType":"ExpressionStatement","src":"23879:51:19"},{"expression":{"id":4669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"23944:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4668,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"23954:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4670,"nodeType":"ExpressionStatement","src":"23944:13:19"},{"expression":{"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4671,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"23971:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4672,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"23981:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4674,"nodeType":"ExpressionStatement","src":"23971:13:19"},{"expression":{"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4675,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"23999:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24026:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4685,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4677,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"24010:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"24010:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4690,"nodeType":"ExpressionStatement","src":"23999:49:19"},{"expression":{"id":4693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24062:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4692,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24072:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4694,"nodeType":"ExpressionStatement","src":"24062:13:19"},{"expression":{"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4695,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"24089:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4696,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24099:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4698,"nodeType":"ExpressionStatement","src":"24089:13:19"},{"expression":{"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4699,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24117:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24144:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4701,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"24128:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"24128:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4714,"nodeType":"ExpressionStatement","src":"24117:49:19"},{"expression":{"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24180:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4716,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24190:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4718,"nodeType":"ExpressionStatement","src":"24180:13:19"},{"expression":{"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"24207:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4720,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24217:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4722,"nodeType":"ExpressionStatement","src":"24207:13:19"},{"expression":{"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4723,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24235:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24262:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4733,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4731,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4725,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"24246:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"24246:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4738,"nodeType":"ExpressionStatement","src":"24235:49:19"},{"expression":{"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24298:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4740,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24308:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4742,"nodeType":"ExpressionStatement","src":"24298:13:19"},{"expression":{"id":4745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"24325:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4744,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24335:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4746,"nodeType":"ExpressionStatement","src":"24325:13:19"},{"expression":{"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4747,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24353:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4751,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24379:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4749,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"24363:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"24363:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4762,"nodeType":"ExpressionStatement","src":"24353:47:19"},{"expression":{"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4763,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24414:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4764,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24424:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4766,"nodeType":"ExpressionStatement","src":"24414:13:19"},{"expression":{"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"24441:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4768,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24451:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4770,"nodeType":"ExpressionStatement","src":"24441:13:19"},{"expression":{"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4771,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24469:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24495:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:19","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4773,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"24479:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"24479:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4786,"nodeType":"ExpressionStatement","src":"24469:47:19"},{"expression":{"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24530:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4788,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24540:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4790,"nodeType":"ExpressionStatement","src":"24530:13:19"},{"expression":{"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4791,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"24557:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4792,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24567:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ExpressionStatement","src":"24557:13:19"},{"expression":{"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4795,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24585:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24611:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4797,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"24595:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"24595:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4810,"nodeType":"ExpressionStatement","src":"24585:47:19"},{"expression":{"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24646:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4812,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24656:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4814,"nodeType":"ExpressionStatement","src":"24646:13:19"},{"expression":{"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"24673:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4816,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"24683:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4818,"nodeType":"ExpressionStatement","src":"24673:13:19"},{"expression":{"id":4826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4819,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"24701:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4639,"src":"24727:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4820,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"24711:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"24711:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4827,"nodeType":"ExpressionStatement","src":"24701:36:19"}]},{"expression":{"id":4829,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4645,"src":"24764:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4643,"id":4830,"nodeType":"Return","src":"24757:13:19"}]},"documentation":{"id":4637,"nodeType":"StructuredDocumentation","src":"23611:119:19","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4832,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:19","nodeType":"FunctionDefinition","parameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"value","nameLocation":"23757:5:19","nodeType":"VariableDeclaration","scope":4832,"src":"23749:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4638,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:19"},"returnParameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4832,"src":"23787:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:19"},"scope":5223,"src":"23735:1042:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4865,"nodeType":"Block","src":"25010:175:19","statements":[{"id":4864,"nodeType":"UncheckedBlock","src":"25020:159:19","statements":[{"assignments":[4844],"declarations":[{"constant":false,"id":4844,"mutability":"mutable","name":"result","nameLocation":"25052:6:19","nodeType":"VariableDeclaration","scope":4864,"src":"25044:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4843,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4848,"initialValue":{"arguments":[{"id":4846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"25066:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4845,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4832,4866],"referencedDeclaration":4832,"src":"25061:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"25093:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4853,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"25135:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}],"id":4852,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"25118:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3629_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4856,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4844,"src":"25153:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4835,"src":"25162:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4850,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"25102:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"25102:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4842,"id":4863,"nodeType":"Return","src":"25086:82:19"}]}]},"documentation":{"id":4833,"nodeType":"StructuredDocumentation","src":"24783:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4866,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:19","nodeType":"FunctionDefinition","parameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"value","nameLocation":"24952:5:19","nodeType":"VariableDeclaration","scope":4866,"src":"24944:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4838,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:19","nodeType":"VariableDeclaration","scope":4866,"src":"24959:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"},"typeName":{"id":4837,"nodeType":"UserDefinedTypeName","pathNode":{"id":4836,"name":"Rounding","nameLocations":["24959:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3629,"src":"24959:8:19"},"referencedDeclaration":3629,"src":"24959:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:19"},"returnParameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4866,"src":"25001:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4840,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:19"},"scope":5223,"src":"24930:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4994,"nodeType":"Block","src":"25378:854:19","statements":[{"assignments":[4875],"declarations":[{"constant":false,"id":4875,"mutability":"mutable","name":"result","nameLocation":"25396:6:19","nodeType":"VariableDeclaration","scope":4994,"src":"25388:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4874,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4877,"initialValue":{"hexValue":"30","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:19"},{"id":4991,"nodeType":"UncheckedBlock","src":"25416:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25444:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4894,"nodeType":"IfStatement","src":"25440:103:19","trueBody":{"id":4893,"nodeType":"Block","src":"25463:80:19","statements":[{"expression":{"id":4887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25481:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4888,"nodeType":"ExpressionStatement","src":"25481:17:19"},{"expression":{"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4889,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"25516:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4892,"nodeType":"ExpressionStatement","src":"25516:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25560:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4911,"nodeType":"IfStatement","src":"25556:103:19","trueBody":{"id":4910,"nodeType":"Block","src":"25579:80:19","statements":[{"expression":{"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25597:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4905,"nodeType":"ExpressionStatement","src":"25597:17:19"},{"expression":{"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4906,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"25632:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4909,"nodeType":"ExpressionStatement","src":"25632:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25676:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4928,"nodeType":"IfStatement","src":"25672:103:19","trueBody":{"id":4927,"nodeType":"Block","src":"25695:80:19","statements":[{"expression":{"id":4921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25713:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4922,"nodeType":"ExpressionStatement","src":"25713:17:19"},{"expression":{"id":4925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"25748:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4926,"nodeType":"ExpressionStatement","src":"25748:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25792:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4945,"nodeType":"IfStatement","src":"25788:100:19","trueBody":{"id":4944,"nodeType":"Block","src":"25810:78:19","statements":[{"expression":{"id":4938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25828:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4937,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4939,"nodeType":"ExpressionStatement","src":"25828:16:19"},{"expression":{"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"25862:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"nodeType":"ExpressionStatement","src":"25862:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25905:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4962,"nodeType":"IfStatement","src":"25901:100:19","trueBody":{"id":4961,"nodeType":"Block","src":"25923:78:19","statements":[{"expression":{"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"25941:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4956,"nodeType":"ExpressionStatement","src":"25941:16:19"},{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4957,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"25975:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"nodeType":"ExpressionStatement","src":"25975:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"26018:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4979,"nodeType":"IfStatement","src":"26014:100:19","trueBody":{"id":4978,"nodeType":"Block","src":"26036:78:19","statements":[{"expression":{"id":4972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"26054:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4973,"nodeType":"ExpressionStatement","src":"26054:16:19"},{"expression":{"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4974,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"26088:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4977,"nodeType":"ExpressionStatement","src":"26088:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4980,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"26131:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4990,"nodeType":"IfStatement","src":"26127:66:19","trueBody":{"id":4989,"nodeType":"Block","src":"26149:44:19","statements":[{"expression":{"id":4987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4985,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"26167:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4988,"nodeType":"ExpressionStatement","src":"26167:11:19"}]}}]},{"expression":{"id":4992,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4875,"src":"26219:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4873,"id":4993,"nodeType":"Return","src":"26212:13:19"}]},"documentation":{"id":4867,"nodeType":"StructuredDocumentation","src":"25191:120:19","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4995,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:19","nodeType":"FunctionDefinition","parameters":{"id":4870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4869,"mutability":"mutable","name":"value","nameLocation":"25339:5:19","nodeType":"VariableDeclaration","scope":4995,"src":"25331:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:19"},"returnParameters":{"id":4873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4995,"src":"25369:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4871,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:19"},"scope":5223,"src":"25316:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5028,"nodeType":"Block","src":"26467:177:19","statements":[{"id":5027,"nodeType":"UncheckedBlock","src":"26477:161:19","statements":[{"assignments":[5007],"declarations":[{"constant":false,"id":5007,"mutability":"mutable","name":"result","nameLocation":"26509:6:19","nodeType":"VariableDeclaration","scope":5027,"src":"26501:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5006,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5011,"initialValue":{"arguments":[{"id":5009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"26524:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5008,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4995,5029],"referencedDeclaration":4995,"src":"26518:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5012,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"26551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5016,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"26593:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}],"id":5015,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"26576:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3629_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5019,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5007,"src":"26612:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4998,"src":"26621:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5013,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"26560:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":5014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"26560:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5005,"id":5026,"nodeType":"Return","src":"26544:83:19"}]}]},"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"26238:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5029,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:19","nodeType":"FunctionDefinition","parameters":{"id":5002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"value","nameLocation":"26409:5:19","nodeType":"VariableDeclaration","scope":5029,"src":"26401:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4997,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5001,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:19","nodeType":"VariableDeclaration","scope":5029,"src":"26416:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"},"typeName":{"id":5000,"nodeType":"UserDefinedTypeName","pathNode":{"id":4999,"name":"Rounding","nameLocations":["26416:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3629,"src":"26416:8:19"},"referencedDeclaration":3629,"src":"26416:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:19"},"returnParameters":{"id":5005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5029,"src":"26458:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5003,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:19"},"scope":5223,"src":"26386:258:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5165,"nodeType":"Block","src":"26964:674:19","statements":[{"assignments":[5038],"declarations":[{"constant":false,"id":5038,"mutability":"mutable","name":"result","nameLocation":"26982:6:19","nodeType":"VariableDeclaration","scope":5165,"src":"26974:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5040,"initialValue":{"hexValue":"30","id":5039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:19"},{"assignments":[5042],"declarations":[{"constant":false,"id":5042,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:19","nodeType":"VariableDeclaration","scope":5165,"src":"27002:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5043,"nodeType":"VariableDeclarationStatement","src":"27002:12:19"},{"id":5162,"nodeType":"UncheckedBlock","src":"27024:585:19","statements":[{"expression":{"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5044,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27048:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"27071:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":5053,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":5050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":5051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:19","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5045,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"27055:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"27055:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5057,"nodeType":"ExpressionStatement","src":"27048:46:19"},{"expression":{"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"27108:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27118:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":5060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5063,"nodeType":"ExpressionStatement","src":"27108:20:19"},{"expression":{"id":5068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5064,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"27142:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5065,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27152:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5069,"nodeType":"ExpressionStatement","src":"27142:19:19"},{"expression":{"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5070,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27176:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"27199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":5077,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5071,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"27183:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"27183:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5083,"nodeType":"ExpressionStatement","src":"27176:45:19"},{"expression":{"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"27235:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27245:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5089,"nodeType":"ExpressionStatement","src":"27235:19:19"},{"expression":{"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"27268:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5091,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27278:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5095,"nodeType":"ExpressionStatement","src":"27268:18:19"},{"expression":{"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5096,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27301:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"27324:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":5105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":5101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":5103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:19","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5097,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"27308:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"27308:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5109,"nodeType":"ExpressionStatement","src":"27301:45:19"},{"expression":{"id":5114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"27360:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5111,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27370:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":5112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5115,"nodeType":"ExpressionStatement","src":"27360:19:19"},{"expression":{"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"27393:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5117,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27403:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5121,"nodeType":"ExpressionStatement","src":"27393:18:19"},{"expression":{"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5122,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27426:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5125,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"27449:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":5127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":5129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:19","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:19","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5123,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"27433:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"27433:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5135,"nodeType":"ExpressionStatement","src":"27426:45:19"},{"expression":{"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"27485:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5137,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27495:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":5138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5141,"nodeType":"ExpressionStatement","src":"27485:19:19"},{"expression":{"id":5146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5142,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"27518:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5143,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"27528:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5147,"nodeType":"ExpressionStatement","src":"27518:18:19"},{"expression":{"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5148,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"27551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"27577:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":5157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5155,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:19","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5149,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"27561:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":5150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"27561:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5161,"nodeType":"ExpressionStatement","src":"27551:47:19"}]},{"expression":{"id":5163,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"27625:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5036,"id":5164,"nodeType":"Return","src":"27618:13:19"}]},"documentation":{"id":5030,"nodeType":"StructuredDocumentation","src":"26650:246:19","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5166,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:19","nodeType":"FunctionDefinition","parameters":{"id":5033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5032,"mutability":"mutable","name":"value","nameLocation":"26925:5:19","nodeType":"VariableDeclaration","scope":5166,"src":"26917:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:19"},"returnParameters":{"id":5036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5035,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5166,"src":"26955:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5034,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:19"},"scope":5223,"src":"26901:737:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5202,"nodeType":"Block","src":"27875:184:19","statements":[{"id":5201,"nodeType":"UncheckedBlock","src":"27885:168:19","statements":[{"assignments":[5178],"declarations":[{"constant":false,"id":5178,"mutability":"mutable","name":"result","nameLocation":"27917:6:19","nodeType":"VariableDeclaration","scope":5201,"src":"27909:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5182,"initialValue":{"arguments":[{"id":5180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"27933:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5179,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5166,5203],"referencedDeclaration":5166,"src":"27926:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"27960:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5187,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"28002:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}],"id":5186,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5222,"src":"27985:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3629_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5190,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"28021:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5193,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5169,"src":"28036:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5184,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"27969:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:19","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"27969:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5176,"id":5200,"nodeType":"Return","src":"27953:89:19"}]}]},"documentation":{"id":5167,"nodeType":"StructuredDocumentation","src":"27644:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5203,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:19","nodeType":"FunctionDefinition","parameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5169,"mutability":"mutable","name":"value","nameLocation":"27817:5:19","nodeType":"VariableDeclaration","scope":5203,"src":"27809:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5168,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5172,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:19","nodeType":"VariableDeclaration","scope":5203,"src":"27824:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"},"typeName":{"id":5171,"nodeType":"UserDefinedTypeName","pathNode":{"id":5170,"name":"Rounding","nameLocations":["27824:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3629,"src":"27824:8:19"},"referencedDeclaration":3629,"src":"27824:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:19"},"returnParameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5203,"src":"27866:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5174,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:19"},"scope":5223,"src":"27793:266:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5221,"nodeType":"Block","src":"28257:48:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5214,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5207,"src":"28280:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}],"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5212,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:19","typeDescriptions":{}}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5211,"id":5220,"nodeType":"Return","src":"28267:31:19"}]},"documentation":{"id":5204,"nodeType":"StructuredDocumentation","src":"28065:113:19","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5222,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:19","nodeType":"FunctionDefinition","parameters":{"id":5208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5207,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:19","nodeType":"VariableDeclaration","scope":5222,"src":"28209:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"},"typeName":{"id":5206,"nodeType":"UserDefinedTypeName","pathNode":{"id":5205,"name":"Rounding","nameLocations":["28209:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":3629,"src":"28209:8:19"},"referencedDeclaration":3629,"src":"28209:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3629","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:19"},"returnParameters":{"id":5211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5222,"src":"28251:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5209,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:19"},"scope":5223,"src":"28183:122:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5224,"src":"281:28026:19","usedErrors":[],"usedEvents":[]}],"src":"103:28205:19"},"id":19},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6988]},"id":6989,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5225,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5226,"nodeType":"StructuredDocumentation","src":"218:550:20","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6988,"linearizedBaseContracts":[6988],"name":"SafeCast","nameLocation":"777:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5227,"nodeType":"StructuredDocumentation","src":"792:68:20","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5233,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:20","nodeType":"ErrorDefinition","parameters":{"id":5232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5229,"mutability":"mutable","name":"bits","nameLocation":"908:4:20","nodeType":"VariableDeclaration","scope":5233,"src":"902:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5228,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5231,"mutability":"mutable","name":"value","nameLocation":"922:5:20","nodeType":"VariableDeclaration","scope":5233,"src":"914:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5230,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:20"},"src":"865:64:20"},{"documentation":{"id":5234,"nodeType":"StructuredDocumentation","src":"935:75:20","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5238,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:20","nodeType":"ErrorDefinition","parameters":{"id":5237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5236,"mutability":"mutable","name":"value","nameLocation":"1056:5:20","nodeType":"VariableDeclaration","scope":5238,"src":"1049:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5235,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:20"},"src":"1015:48:20"},{"documentation":{"id":5239,"nodeType":"StructuredDocumentation","src":"1069:67:20","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5245,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:20","nodeType":"ErrorDefinition","parameters":{"id":5244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5241,"mutability":"mutable","name":"bits","nameLocation":"1183:4:20","nodeType":"VariableDeclaration","scope":5245,"src":"1177:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5240,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5243,"mutability":"mutable","name":"value","nameLocation":"1196:5:20","nodeType":"VariableDeclaration","scope":5245,"src":"1189:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5242,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:20"},"src":"1141:62:20"},{"documentation":{"id":5246,"nodeType":"StructuredDocumentation","src":"1209:75:20","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5250,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:20","nodeType":"ErrorDefinition","parameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"value","nameLocation":"1331:5:20","nodeType":"VariableDeclaration","scope":5250,"src":"1323:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:20"},"src":"1289:49:20"},{"body":{"id":5277,"nodeType":"Block","src":"1695:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"1709:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5261,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5260,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5259,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:20","memberName":"max","nodeType":"MemberAccess","src":"1717:17:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5271,"nodeType":"IfStatement","src":"1705:105:20","trueBody":{"id":5270,"nodeType":"Block","src":"1736:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"1793:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5265,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"1757:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5269,"nodeType":"RevertStatement","src":"1750:49:20"}]}},{"expression":{"arguments":[{"id":5274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5253,"src":"1834:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5272,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:20","typeDescriptions":{}}},"id":5275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5257,"id":5276,"nodeType":"Return","src":"1819:21:20"}]},"documentation":{"id":5251,"nodeType":"StructuredDocumentation","src":"1344:280:20","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5278,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:20","nodeType":"FunctionDefinition","parameters":{"id":5254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5253,"mutability":"mutable","name":"value","nameLocation":"1656:5:20","nodeType":"VariableDeclaration","scope":5278,"src":"1648:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:20"},"returnParameters":{"id":5257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5278,"src":"1686:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5255,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:20","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:20"},"scope":6988,"src":"1629:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5305,"nodeType":"Block","src":"2204:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"2218:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5288,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5287,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:20","memberName":"max","nodeType":"MemberAccess","src":"2226:17:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5299,"nodeType":"IfStatement","src":"2214:105:20","trueBody":{"id":5298,"nodeType":"Block","src":"2245:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"2302:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5293,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"2266:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5297,"nodeType":"RevertStatement","src":"2259:49:20"}]}},{"expression":{"arguments":[{"id":5302,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5281,"src":"2343:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5300,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:20","typeDescriptions":{}}},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5285,"id":5304,"nodeType":"Return","src":"2328:21:20"}]},"documentation":{"id":5279,"nodeType":"StructuredDocumentation","src":"1853:280:20","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5306,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:20","nodeType":"FunctionDefinition","parameters":{"id":5282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5281,"mutability":"mutable","name":"value","nameLocation":"2165:5:20","nodeType":"VariableDeclaration","scope":5306,"src":"2157:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5280,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:20"},"returnParameters":{"id":5285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5306,"src":"2195:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5283,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:20","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:20"},"scope":6988,"src":"2138:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5333,"nodeType":"Block","src":"2713:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"2727:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5316,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5315,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:20","memberName":"max","nodeType":"MemberAccess","src":"2735:17:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5327,"nodeType":"IfStatement","src":"2723:105:20","trueBody":{"id":5326,"nodeType":"Block","src":"2754:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"2811:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5321,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"2775:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5325,"nodeType":"RevertStatement","src":"2768:49:20"}]}},{"expression":{"arguments":[{"id":5330,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5309,"src":"2852:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5328,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:20","typeDescriptions":{}}},"id":5331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5313,"id":5332,"nodeType":"Return","src":"2837:21:20"}]},"documentation":{"id":5307,"nodeType":"StructuredDocumentation","src":"2362:280:20","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5334,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:20","nodeType":"FunctionDefinition","parameters":{"id":5310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5309,"mutability":"mutable","name":"value","nameLocation":"2674:5:20","nodeType":"VariableDeclaration","scope":5334,"src":"2666:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5308,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:20"},"returnParameters":{"id":5313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5312,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5334,"src":"2704:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5311,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:20","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:20"},"scope":6988,"src":"2647:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5361,"nodeType":"Block","src":"3222:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"3236:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5344,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5343,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:20","memberName":"max","nodeType":"MemberAccess","src":"3244:17:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5355,"nodeType":"IfStatement","src":"3232:105:20","trueBody":{"id":5354,"nodeType":"Block","src":"3263:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"3320:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5349,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"3284:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5353,"nodeType":"RevertStatement","src":"3277:49:20"}]}},{"expression":{"arguments":[{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5337,"src":"3361:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5356,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:20","typeDescriptions":{}}},"id":5359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5341,"id":5360,"nodeType":"Return","src":"3346:21:20"}]},"documentation":{"id":5335,"nodeType":"StructuredDocumentation","src":"2871:280:20","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5362,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:20","nodeType":"FunctionDefinition","parameters":{"id":5338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5337,"mutability":"mutable","name":"value","nameLocation":"3183:5:20","nodeType":"VariableDeclaration","scope":5362,"src":"3175:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5336,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:20"},"returnParameters":{"id":5341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5340,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5362,"src":"3213:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5339,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:20","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:20"},"scope":6988,"src":"3156:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5389,"nodeType":"Block","src":"3731:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5370,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"3745:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5372,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5371,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:20","memberName":"max","nodeType":"MemberAccess","src":"3753:17:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5383,"nodeType":"IfStatement","src":"3741:105:20","trueBody":{"id":5382,"nodeType":"Block","src":"3772:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"3829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5377,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"3793:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5381,"nodeType":"RevertStatement","src":"3786:49:20"}]}},{"expression":{"arguments":[{"id":5386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5365,"src":"3870:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5384,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:20","typeDescriptions":{}}},"id":5387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5369,"id":5388,"nodeType":"Return","src":"3855:21:20"}]},"documentation":{"id":5363,"nodeType":"StructuredDocumentation","src":"3380:280:20","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5390,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:20","nodeType":"FunctionDefinition","parameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"value","nameLocation":"3692:5:20","nodeType":"VariableDeclaration","scope":5390,"src":"3684:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5364,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:20"},"returnParameters":{"id":5369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5390,"src":"3722:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5367,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:20","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:20"},"scope":6988,"src":"3665:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5417,"nodeType":"Block","src":"4240:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"4254:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5400,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5399,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:20","memberName":"max","nodeType":"MemberAccess","src":"4262:17:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5411,"nodeType":"IfStatement","src":"4250:105:20","trueBody":{"id":5410,"nodeType":"Block","src":"4281:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"4338:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5405,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"4302:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5409,"nodeType":"RevertStatement","src":"4295:49:20"}]}},{"expression":{"arguments":[{"id":5414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5393,"src":"4379:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5412,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:20","typeDescriptions":{}}},"id":5415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5397,"id":5416,"nodeType":"Return","src":"4364:21:20"}]},"documentation":{"id":5391,"nodeType":"StructuredDocumentation","src":"3889:280:20","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5418,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:20","nodeType":"FunctionDefinition","parameters":{"id":5394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5393,"mutability":"mutable","name":"value","nameLocation":"4201:5:20","nodeType":"VariableDeclaration","scope":5418,"src":"4193:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5392,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:20"},"returnParameters":{"id":5397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5418,"src":"4231:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5395,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:20","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:20"},"scope":6988,"src":"4174:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5445,"nodeType":"Block","src":"4749:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5426,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"4763:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5429,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5428,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5427,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:20","memberName":"max","nodeType":"MemberAccess","src":"4771:17:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5439,"nodeType":"IfStatement","src":"4759:105:20","trueBody":{"id":5438,"nodeType":"Block","src":"4790:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"4847:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5433,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"4811:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5437,"nodeType":"RevertStatement","src":"4804:49:20"}]}},{"expression":{"arguments":[{"id":5442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5421,"src":"4888:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5440,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:20","typeDescriptions":{}}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5425,"id":5444,"nodeType":"Return","src":"4873:21:20"}]},"documentation":{"id":5419,"nodeType":"StructuredDocumentation","src":"4398:280:20","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5446,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:20","nodeType":"FunctionDefinition","parameters":{"id":5422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5421,"mutability":"mutable","name":"value","nameLocation":"4710:5:20","nodeType":"VariableDeclaration","scope":5446,"src":"4702:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5420,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:20"},"returnParameters":{"id":5425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5446,"src":"4740:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5423,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:20","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:20"},"scope":6988,"src":"4683:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5473,"nodeType":"Block","src":"5258:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"5272:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5456,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5455,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:20","memberName":"max","nodeType":"MemberAccess","src":"5280:17:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5467,"nodeType":"IfStatement","src":"5268:105:20","trueBody":{"id":5466,"nodeType":"Block","src":"5299:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"5356:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5461,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"5320:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5465,"nodeType":"RevertStatement","src":"5313:49:20"}]}},{"expression":{"arguments":[{"id":5470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5449,"src":"5397:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5468,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:20","typeDescriptions":{}}},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5453,"id":5472,"nodeType":"Return","src":"5382:21:20"}]},"documentation":{"id":5447,"nodeType":"StructuredDocumentation","src":"4907:280:20","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5474,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:20","nodeType":"FunctionDefinition","parameters":{"id":5450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5449,"mutability":"mutable","name":"value","nameLocation":"5219:5:20","nodeType":"VariableDeclaration","scope":5474,"src":"5211:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5448,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:20"},"returnParameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5474,"src":"5249:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5451,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:20","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:20"},"scope":6988,"src":"5192:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5501,"nodeType":"Block","src":"5767:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5482,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"5781:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5484,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5483,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:20","memberName":"max","nodeType":"MemberAccess","src":"5789:17:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5495,"nodeType":"IfStatement","src":"5777:105:20","trueBody":{"id":5494,"nodeType":"Block","src":"5808:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"5865:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5489,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"5829:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5493,"nodeType":"RevertStatement","src":"5822:49:20"}]}},{"expression":{"arguments":[{"id":5498,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5477,"src":"5906:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5497,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5496,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:20","typeDescriptions":{}}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5481,"id":5500,"nodeType":"Return","src":"5891:21:20"}]},"documentation":{"id":5475,"nodeType":"StructuredDocumentation","src":"5416:280:20","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5502,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:20","nodeType":"FunctionDefinition","parameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5477,"mutability":"mutable","name":"value","nameLocation":"5728:5:20","nodeType":"VariableDeclaration","scope":5502,"src":"5720:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:20"},"returnParameters":{"id":5481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5502,"src":"5758:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5479,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:20","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:20"},"scope":6988,"src":"5701:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5529,"nodeType":"Block","src":"6276:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"6290:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5512,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5511,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:20","memberName":"max","nodeType":"MemberAccess","src":"6298:17:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5523,"nodeType":"IfStatement","src":"6286:105:20","trueBody":{"id":5522,"nodeType":"Block","src":"6317:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"6374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5517,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"6338:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5521,"nodeType":"RevertStatement","src":"6331:49:20"}]}},{"expression":{"arguments":[{"id":5526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"6415:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5524,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:20","typeDescriptions":{}}},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5509,"id":5528,"nodeType":"Return","src":"6400:21:20"}]},"documentation":{"id":5503,"nodeType":"StructuredDocumentation","src":"5925:280:20","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5530,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:20","nodeType":"FunctionDefinition","parameters":{"id":5506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"value","nameLocation":"6237:5:20","nodeType":"VariableDeclaration","scope":5530,"src":"6229:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:20"},"returnParameters":{"id":5509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5530,"src":"6267:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5507,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:20","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:20"},"scope":6988,"src":"6210:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5557,"nodeType":"Block","src":"6785:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5538,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"6799:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5540,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5539,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:20","memberName":"max","nodeType":"MemberAccess","src":"6807:17:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5551,"nodeType":"IfStatement","src":"6795:105:20","trueBody":{"id":5550,"nodeType":"Block","src":"6826:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"6883:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5545,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"6847:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5549,"nodeType":"RevertStatement","src":"6840:49:20"}]}},{"expression":{"arguments":[{"id":5554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5533,"src":"6924:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5552,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:20","typeDescriptions":{}}},"id":5555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5537,"id":5556,"nodeType":"Return","src":"6909:21:20"}]},"documentation":{"id":5531,"nodeType":"StructuredDocumentation","src":"6434:280:20","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5558,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:20","nodeType":"FunctionDefinition","parameters":{"id":5534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5533,"mutability":"mutable","name":"value","nameLocation":"6746:5:20","nodeType":"VariableDeclaration","scope":5558,"src":"6738:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5532,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:20"},"returnParameters":{"id":5537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5558,"src":"6776:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5535,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:20","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:20"},"scope":6988,"src":"6719:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5585,"nodeType":"Block","src":"7294:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"7308:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5568,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5567,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:20","memberName":"max","nodeType":"MemberAccess","src":"7316:17:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5579,"nodeType":"IfStatement","src":"7304:105:20","trueBody":{"id":5578,"nodeType":"Block","src":"7335:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"7392:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5573,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"7356:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5577,"nodeType":"RevertStatement","src":"7349:49:20"}]}},{"expression":{"arguments":[{"id":5582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5561,"src":"7433:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5580,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:20","typeDescriptions":{}}},"id":5583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5565,"id":5584,"nodeType":"Return","src":"7418:21:20"}]},"documentation":{"id":5559,"nodeType":"StructuredDocumentation","src":"6943:280:20","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5586,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:20","nodeType":"FunctionDefinition","parameters":{"id":5562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5561,"mutability":"mutable","name":"value","nameLocation":"7255:5:20","nodeType":"VariableDeclaration","scope":5586,"src":"7247:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5560,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:20"},"returnParameters":{"id":5565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5586,"src":"7285:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5563,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:20"},"scope":6988,"src":"7228:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5613,"nodeType":"Block","src":"7803:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"7817:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5596,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5595,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:20","memberName":"max","nodeType":"MemberAccess","src":"7825:17:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5607,"nodeType":"IfStatement","src":"7813:105:20","trueBody":{"id":5606,"nodeType":"Block","src":"7844:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"7901:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5601,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"7865:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5605,"nodeType":"RevertStatement","src":"7858:49:20"}]}},{"expression":{"arguments":[{"id":5610,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5589,"src":"7942:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5608,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:20","typeDescriptions":{}}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5593,"id":5612,"nodeType":"Return","src":"7927:21:20"}]},"documentation":{"id":5587,"nodeType":"StructuredDocumentation","src":"7452:280:20","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5614,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:20","nodeType":"FunctionDefinition","parameters":{"id":5590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5589,"mutability":"mutable","name":"value","nameLocation":"7764:5:20","nodeType":"VariableDeclaration","scope":5614,"src":"7756:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5588,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:20"},"returnParameters":{"id":5593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5592,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5614,"src":"7794:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5591,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:20","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:20"},"scope":6988,"src":"7737:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5641,"nodeType":"Block","src":"8312:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"8326:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5624,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5623,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:20","memberName":"max","nodeType":"MemberAccess","src":"8334:17:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5635,"nodeType":"IfStatement","src":"8322:105:20","trueBody":{"id":5634,"nodeType":"Block","src":"8353:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"8410:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5629,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"8374:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5633,"nodeType":"RevertStatement","src":"8367:49:20"}]}},{"expression":{"arguments":[{"id":5638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5617,"src":"8451:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5637,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5636,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:20","typeDescriptions":{}}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5621,"id":5640,"nodeType":"Return","src":"8436:21:20"}]},"documentation":{"id":5615,"nodeType":"StructuredDocumentation","src":"7961:280:20","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5642,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:20","nodeType":"FunctionDefinition","parameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"value","nameLocation":"8273:5:20","nodeType":"VariableDeclaration","scope":5642,"src":"8265:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5616,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:20"},"returnParameters":{"id":5621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5642,"src":"8303:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5619,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:20","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:20"},"scope":6988,"src":"8246:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5669,"nodeType":"Block","src":"8821:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8835:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5652,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5651,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:20","memberName":"max","nodeType":"MemberAccess","src":"8843:17:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5663,"nodeType":"IfStatement","src":"8831:105:20","trueBody":{"id":5662,"nodeType":"Block","src":"8862:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8919:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5657,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"8883:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5661,"nodeType":"RevertStatement","src":"8876:49:20"}]}},{"expression":{"arguments":[{"id":5666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5645,"src":"8960:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5664,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:20","typeDescriptions":{}}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5649,"id":5668,"nodeType":"Return","src":"8945:21:20"}]},"documentation":{"id":5643,"nodeType":"StructuredDocumentation","src":"8470:280:20","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5670,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:20","nodeType":"FunctionDefinition","parameters":{"id":5646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5645,"mutability":"mutable","name":"value","nameLocation":"8782:5:20","nodeType":"VariableDeclaration","scope":5670,"src":"8774:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:20"},"returnParameters":{"id":5649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5670,"src":"8812:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5647,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:20","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:20"},"scope":6988,"src":"8755:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5697,"nodeType":"Block","src":"9330:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"9344:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5680,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5679,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5683,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:20","memberName":"max","nodeType":"MemberAccess","src":"9352:17:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5691,"nodeType":"IfStatement","src":"9340:105:20","trueBody":{"id":5690,"nodeType":"Block","src":"9371:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"9428:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5685,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"9392:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5689,"nodeType":"RevertStatement","src":"9385:49:20"}]}},{"expression":{"arguments":[{"id":5694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5673,"src":"9469:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5692,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:20","typeDescriptions":{}}},"id":5695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5677,"id":5696,"nodeType":"Return","src":"9454:21:20"}]},"documentation":{"id":5671,"nodeType":"StructuredDocumentation","src":"8979:280:20","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5698,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:20","nodeType":"FunctionDefinition","parameters":{"id":5674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5673,"mutability":"mutable","name":"value","nameLocation":"9291:5:20","nodeType":"VariableDeclaration","scope":5698,"src":"9283:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5672,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:20"},"returnParameters":{"id":5677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5698,"src":"9321:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5675,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:20"},"scope":6988,"src":"9264:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5725,"nodeType":"Block","src":"9839:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5706,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"9853:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5708,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5707,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:20","memberName":"max","nodeType":"MemberAccess","src":"9861:17:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5719,"nodeType":"IfStatement","src":"9849:105:20","trueBody":{"id":5718,"nodeType":"Block","src":"9880:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"9937:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5713,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"9901:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5717,"nodeType":"RevertStatement","src":"9894:49:20"}]}},{"expression":{"arguments":[{"id":5722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5701,"src":"9978:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5720,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:20","typeDescriptions":{}}},"id":5723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5705,"id":5724,"nodeType":"Return","src":"9963:21:20"}]},"documentation":{"id":5699,"nodeType":"StructuredDocumentation","src":"9488:280:20","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5726,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:20","nodeType":"FunctionDefinition","parameters":{"id":5702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5701,"mutability":"mutable","name":"value","nameLocation":"9800:5:20","nodeType":"VariableDeclaration","scope":5726,"src":"9792:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5700,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:20"},"returnParameters":{"id":5705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5726,"src":"9830:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5703,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:20","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:20"},"scope":6988,"src":"9773:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5753,"nodeType":"Block","src":"10348:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"10362:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5736,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5735,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:20","memberName":"max","nodeType":"MemberAccess","src":"10370:17:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5747,"nodeType":"IfStatement","src":"10358:105:20","trueBody":{"id":5746,"nodeType":"Block","src":"10389:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"10446:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5741,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"10410:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5745,"nodeType":"RevertStatement","src":"10403:49:20"}]}},{"expression":{"arguments":[{"id":5750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5729,"src":"10487:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5748,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:20","typeDescriptions":{}}},"id":5751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5733,"id":5752,"nodeType":"Return","src":"10472:21:20"}]},"documentation":{"id":5727,"nodeType":"StructuredDocumentation","src":"9997:280:20","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5754,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:20","nodeType":"FunctionDefinition","parameters":{"id":5730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5729,"mutability":"mutable","name":"value","nameLocation":"10309:5:20","nodeType":"VariableDeclaration","scope":5754,"src":"10301:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5728,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:20"},"returnParameters":{"id":5733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5754,"src":"10339:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5731,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:20","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:20"},"scope":6988,"src":"10282:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5781,"nodeType":"Block","src":"10857:152:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"10871:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5764,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5763,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:20","memberName":"max","nodeType":"MemberAccess","src":"10879:17:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5775,"nodeType":"IfStatement","src":"10867:105:20","trueBody":{"id":5774,"nodeType":"Block","src":"10898:74:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"10955:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5769,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"10919:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5773,"nodeType":"RevertStatement","src":"10912:49:20"}]}},{"expression":{"arguments":[{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5757,"src":"10996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5776,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:20","typeDescriptions":{}}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5761,"id":5780,"nodeType":"Return","src":"10981:21:20"}]},"documentation":{"id":5755,"nodeType":"StructuredDocumentation","src":"10506:280:20","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5782,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:20","nodeType":"FunctionDefinition","parameters":{"id":5758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5757,"mutability":"mutable","name":"value","nameLocation":"10818:5:20","nodeType":"VariableDeclaration","scope":5782,"src":"10810:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5756,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:20"},"returnParameters":{"id":5761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5782,"src":"10848:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5759,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:20","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:20"},"scope":6988,"src":"10791:218:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5809,"nodeType":"Block","src":"11360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"11374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5792,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5791,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:20","memberName":"max","nodeType":"MemberAccess","src":"11382:16:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5803,"nodeType":"IfStatement","src":"11370:103:20","trueBody":{"id":5802,"nodeType":"Block","src":"11400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5799,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"11456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5797,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"11421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5801,"nodeType":"RevertStatement","src":"11414:48:20"}]}},{"expression":{"arguments":[{"id":5806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5785,"src":"11496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5804,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:20","typeDescriptions":{}}},"id":5807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5789,"id":5808,"nodeType":"Return","src":"11482:20:20"}]},"documentation":{"id":5783,"nodeType":"StructuredDocumentation","src":"11015:276:20","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5810,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5785,"mutability":"mutable","name":"value","nameLocation":"11322:5:20","nodeType":"VariableDeclaration","scope":5810,"src":"11314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5784,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:20"},"returnParameters":{"id":5789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5810,"src":"11352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5787,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:20","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:20"},"scope":6988,"src":"11296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5837,"nodeType":"Block","src":"11860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"11874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5820,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5819,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:20","memberName":"max","nodeType":"MemberAccess","src":"11882:16:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5831,"nodeType":"IfStatement","src":"11870:103:20","trueBody":{"id":5830,"nodeType":"Block","src":"11900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5827,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"11956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5825,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"11921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5829,"nodeType":"RevertStatement","src":"11914:48:20"}]}},{"expression":{"arguments":[{"id":5834,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"11996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5832,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:20","typeDescriptions":{}}},"id":5835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5817,"id":5836,"nodeType":"Return","src":"11982:20:20"}]},"documentation":{"id":5811,"nodeType":"StructuredDocumentation","src":"11515:276:20","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5838,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"value","nameLocation":"11822:5:20","nodeType":"VariableDeclaration","scope":5838,"src":"11814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5812,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:20"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5838,"src":"11852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5815,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:20","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:20"},"scope":6988,"src":"11796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5865,"nodeType":"Block","src":"12360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"12374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5848,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5847,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:20","memberName":"max","nodeType":"MemberAccess","src":"12382:16:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5859,"nodeType":"IfStatement","src":"12370:103:20","trueBody":{"id":5858,"nodeType":"Block","src":"12400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"12456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5853,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"12421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5857,"nodeType":"RevertStatement","src":"12414:48:20"}]}},{"expression":{"arguments":[{"id":5862,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5841,"src":"12496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5860,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:20","typeDescriptions":{}}},"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5845,"id":5864,"nodeType":"Return","src":"12482:20:20"}]},"documentation":{"id":5839,"nodeType":"StructuredDocumentation","src":"12015:276:20","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5866,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5841,"mutability":"mutable","name":"value","nameLocation":"12322:5:20","nodeType":"VariableDeclaration","scope":5866,"src":"12314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5840,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:20"},"returnParameters":{"id":5845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5866,"src":"12352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5843,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:20","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:20"},"scope":6988,"src":"12296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5893,"nodeType":"Block","src":"12860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5874,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"12874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5876,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5875,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:20","memberName":"max","nodeType":"MemberAccess","src":"12882:16:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5887,"nodeType":"IfStatement","src":"12870:103:20","trueBody":{"id":5886,"nodeType":"Block","src":"12900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5883,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"12956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5881,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"12921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5885,"nodeType":"RevertStatement","src":"12914:48:20"}]}},{"expression":{"arguments":[{"id":5890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5869,"src":"12996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5888,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:20","typeDescriptions":{}}},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5873,"id":5892,"nodeType":"Return","src":"12982:20:20"}]},"documentation":{"id":5867,"nodeType":"StructuredDocumentation","src":"12515:276:20","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5894,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5869,"mutability":"mutable","name":"value","nameLocation":"12822:5:20","nodeType":"VariableDeclaration","scope":5894,"src":"12814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5868,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:20"},"returnParameters":{"id":5873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5872,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5894,"src":"12852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5871,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:20","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:20"},"scope":6988,"src":"12796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5921,"nodeType":"Block","src":"13360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5902,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"13374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5904,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5903,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:20","memberName":"max","nodeType":"MemberAccess","src":"13382:16:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5915,"nodeType":"IfStatement","src":"13370:103:20","trueBody":{"id":5914,"nodeType":"Block","src":"13400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"13456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5909,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"13421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5913,"nodeType":"RevertStatement","src":"13414:48:20"}]}},{"expression":{"arguments":[{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5897,"src":"13496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5917,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5916,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:20","typeDescriptions":{}}},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5901,"id":5920,"nodeType":"Return","src":"13482:20:20"}]},"documentation":{"id":5895,"nodeType":"StructuredDocumentation","src":"13015:276:20","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5922,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5897,"mutability":"mutable","name":"value","nameLocation":"13322:5:20","nodeType":"VariableDeclaration","scope":5922,"src":"13314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5896,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:20"},"returnParameters":{"id":5901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5922,"src":"13352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5899,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:20"},"scope":6988,"src":"13296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5949,"nodeType":"Block","src":"13860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"13874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5933,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5932,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5931,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:20","memberName":"max","nodeType":"MemberAccess","src":"13882:16:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5943,"nodeType":"IfStatement","src":"13870:103:20","trueBody":{"id":5942,"nodeType":"Block","src":"13900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"13956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5937,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"13921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5941,"nodeType":"RevertStatement","src":"13914:48:20"}]}},{"expression":{"arguments":[{"id":5946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5925,"src":"13996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5944,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:20","typeDescriptions":{}}},"id":5947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5929,"id":5948,"nodeType":"Return","src":"13982:20:20"}]},"documentation":{"id":5923,"nodeType":"StructuredDocumentation","src":"13515:276:20","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5950,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5925,"mutability":"mutable","name":"value","nameLocation":"13822:5:20","nodeType":"VariableDeclaration","scope":5950,"src":"13814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5924,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:20"},"returnParameters":{"id":5929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5950,"src":"13852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5927,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:20","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:20"},"scope":6988,"src":"13796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5977,"nodeType":"Block","src":"14360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"14374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5960,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5959,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:20","memberName":"max","nodeType":"MemberAccess","src":"14382:16:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5971,"nodeType":"IfStatement","src":"14370:103:20","trueBody":{"id":5970,"nodeType":"Block","src":"14400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"14456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5965,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"14421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5969,"nodeType":"RevertStatement","src":"14414:48:20"}]}},{"expression":{"arguments":[{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5953,"src":"14496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5972,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:20","typeDescriptions":{}}},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5957,"id":5976,"nodeType":"Return","src":"14482:20:20"}]},"documentation":{"id":5951,"nodeType":"StructuredDocumentation","src":"14015:276:20","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5978,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:20","nodeType":"FunctionDefinition","parameters":{"id":5954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5953,"mutability":"mutable","name":"value","nameLocation":"14322:5:20","nodeType":"VariableDeclaration","scope":5978,"src":"14314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5952,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:20"},"returnParameters":{"id":5957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5956,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5978,"src":"14352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5955,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:20","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:20"},"scope":6988,"src":"14296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6005,"nodeType":"Block","src":"14860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"14874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5988,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5987,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:20","memberName":"max","nodeType":"MemberAccess","src":"14882:16:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5999,"nodeType":"IfStatement","src":"14870:103:20","trueBody":{"id":5998,"nodeType":"Block","src":"14900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"14956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5993,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"14921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5997,"nodeType":"RevertStatement","src":"14914:48:20"}]}},{"expression":{"arguments":[{"id":6002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5981,"src":"14996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6000,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:20","typeDescriptions":{}}},"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5985,"id":6004,"nodeType":"Return","src":"14982:20:20"}]},"documentation":{"id":5979,"nodeType":"StructuredDocumentation","src":"14515:276:20","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6006,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:20","nodeType":"FunctionDefinition","parameters":{"id":5982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5981,"mutability":"mutable","name":"value","nameLocation":"14822:5:20","nodeType":"VariableDeclaration","scope":6006,"src":"14814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5980,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:20"},"returnParameters":{"id":5985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6006,"src":"14852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5983,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:20","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:20"},"scope":6988,"src":"14796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6033,"nodeType":"Block","src":"15360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"15374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6016,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6015,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:20","memberName":"max","nodeType":"MemberAccess","src":"15382:16:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6027,"nodeType":"IfStatement","src":"15370:103:20","trueBody":{"id":6026,"nodeType":"Block","src":"15400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6023,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"15456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6021,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"15421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6025,"nodeType":"RevertStatement","src":"15414:48:20"}]}},{"expression":{"arguments":[{"id":6030,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"15496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6028,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:20","typeDescriptions":{}}},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6013,"id":6032,"nodeType":"Return","src":"15482:20:20"}]},"documentation":{"id":6007,"nodeType":"StructuredDocumentation","src":"15015:276:20","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6034,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"value","nameLocation":"15322:5:20","nodeType":"VariableDeclaration","scope":6034,"src":"15314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6008,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:20"},"returnParameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6034,"src":"15352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6011,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:20"},"scope":6988,"src":"15296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6061,"nodeType":"Block","src":"15860:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6042,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"15874:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6044,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6043,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:20","memberName":"max","nodeType":"MemberAccess","src":"15882:16:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6055,"nodeType":"IfStatement","src":"15870:103:20","trueBody":{"id":6054,"nodeType":"Block","src":"15900:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6051,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"15956:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6049,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"15921:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6053,"nodeType":"RevertStatement","src":"15914:48:20"}]}},{"expression":{"arguments":[{"id":6058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6037,"src":"15996:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6056,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:20","typeDescriptions":{}}},"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6041,"id":6060,"nodeType":"Return","src":"15982:20:20"}]},"documentation":{"id":6035,"nodeType":"StructuredDocumentation","src":"15515:276:20","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6062,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:20","nodeType":"FunctionDefinition","parameters":{"id":6038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6037,"mutability":"mutable","name":"value","nameLocation":"15822:5:20","nodeType":"VariableDeclaration","scope":6062,"src":"15814:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6036,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:20"},"returnParameters":{"id":6041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6062,"src":"15852:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6039,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:20"},"scope":6988,"src":"15796:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6089,"nodeType":"Block","src":"16360:149:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6070,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"16374:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6072,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6071,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:20","memberName":"max","nodeType":"MemberAccess","src":"16382:16:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6083,"nodeType":"IfStatement","src":"16370:103:20","trueBody":{"id":6082,"nodeType":"Block","src":"16400:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6079,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"16456:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6077,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"16421:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6081,"nodeType":"RevertStatement","src":"16414:48:20"}]}},{"expression":{"arguments":[{"id":6086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6065,"src":"16496:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6084,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:20","typeDescriptions":{}}},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6069,"id":6088,"nodeType":"Return","src":"16482:20:20"}]},"documentation":{"id":6063,"nodeType":"StructuredDocumentation","src":"16015:276:20","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6090,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:20","nodeType":"FunctionDefinition","parameters":{"id":6066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6065,"mutability":"mutable","name":"value","nameLocation":"16322:5:20","nodeType":"VariableDeclaration","scope":6090,"src":"16314:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6064,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:20"},"returnParameters":{"id":6069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6090,"src":"16352:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6067,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:20"},"scope":6988,"src":"16296:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6117,"nodeType":"Block","src":"16854:146:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"16868:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6101,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6100,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6099,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:20","memberName":"max","nodeType":"MemberAccess","src":"16876:15:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6111,"nodeType":"IfStatement","src":"16864:101:20","trueBody":{"id":6110,"nodeType":"Block","src":"16893:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"16948:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6105,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5233,"src":"16914:30:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6109,"nodeType":"RevertStatement","src":"16907:47:20"}]}},{"expression":{"arguments":[{"id":6114,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"16987:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6113,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6112,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:20","typeDescriptions":{}}},"id":6115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6097,"id":6116,"nodeType":"Return","src":"16974:19:20"}]},"documentation":{"id":6091,"nodeType":"StructuredDocumentation","src":"16515:272:20","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6118,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:20","nodeType":"FunctionDefinition","parameters":{"id":6094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6093,"mutability":"mutable","name":"value","nameLocation":"16817:5:20","nodeType":"VariableDeclaration","scope":6118,"src":"16809:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:20"},"returnParameters":{"id":6097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6118,"src":"16847:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6095,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:20"},"scope":6988,"src":"16792:208:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6140,"nodeType":"Block","src":"17236:128:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"17250:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6134,"nodeType":"IfStatement","src":"17246:81:20","trueBody":{"id":6133,"nodeType":"Block","src":"17261:66:20","statements":[{"errorCall":{"arguments":[{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"17310:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6129,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5238,"src":"17282:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6132,"nodeType":"RevertStatement","src":"17275:41:20"}]}},{"expression":{"arguments":[{"id":6137,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6121,"src":"17351:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6135,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:20","typeDescriptions":{}}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6125,"id":6139,"nodeType":"Return","src":"17336:21:20"}]},"documentation":{"id":6119,"nodeType":"StructuredDocumentation","src":"17006:160:20","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6141,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:20","nodeType":"FunctionDefinition","parameters":{"id":6122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6121,"mutability":"mutable","name":"value","nameLocation":"17197:5:20","nodeType":"VariableDeclaration","scope":6141,"src":"17190:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6120,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:20"},"returnParameters":{"id":6125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6141,"src":"17227:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6123,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:20"},"scope":6988,"src":"17171:193:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6166,"nodeType":"Block","src":"17761:150:20","statements":[{"expression":{"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"17771:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"17791:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6151,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6150,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:20","typeDescriptions":{}}},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6155,"nodeType":"ExpressionStatement","src":"17771:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"17811:10:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"17825:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6165,"nodeType":"IfStatement","src":"17807:98:20","trueBody":{"id":6164,"nodeType":"Block","src":"17832:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:20","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6161,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6144,"src":"17888:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6159,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"17853:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6163,"nodeType":"RevertStatement","src":"17846:48:20"}]}}]},"documentation":{"id":6142,"nodeType":"StructuredDocumentation","src":"17370:312:20","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6167,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:20","nodeType":"FunctionDefinition","parameters":{"id":6145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6144,"mutability":"mutable","name":"value","nameLocation":"17712:5:20","nodeType":"VariableDeclaration","scope":6167,"src":"17705:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6143,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:20"},"returnParameters":{"id":6148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6147,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:20","nodeType":"VariableDeclaration","scope":6167,"src":"17742:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6146,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:20","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:20"},"scope":6988,"src":"17687:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6192,"nodeType":"Block","src":"18308:150:20","statements":[{"expression":{"id":6180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"18318:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"18338:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6176,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:20","typeDescriptions":{}}},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6181,"nodeType":"ExpressionStatement","src":"18318:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6173,"src":"18358:10:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"18372:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6191,"nodeType":"IfStatement","src":"18354:98:20","trueBody":{"id":6190,"nodeType":"Block","src":"18379:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:20","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"18435:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6185,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"18400:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6189,"nodeType":"RevertStatement","src":"18393:48:20"}]}}]},"documentation":{"id":6168,"nodeType":"StructuredDocumentation","src":"17917:312:20","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6193,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:20","nodeType":"FunctionDefinition","parameters":{"id":6171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"value","nameLocation":"18259:5:20","nodeType":"VariableDeclaration","scope":6193,"src":"18252:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6169,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:20"},"returnParameters":{"id":6174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6173,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:20","nodeType":"VariableDeclaration","scope":6193,"src":"18289:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6172,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:20","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:20"},"scope":6988,"src":"18234:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6218,"nodeType":"Block","src":"18855:150:20","statements":[{"expression":{"id":6206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"18865:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"18885:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6202,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:20","typeDescriptions":{}}},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6207,"nodeType":"ExpressionStatement","src":"18865:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6208,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6199,"src":"18905:10:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"18919:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6217,"nodeType":"IfStatement","src":"18901:98:20","trueBody":{"id":6216,"nodeType":"Block","src":"18926:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:20","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6196,"src":"18982:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6211,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"18947:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6215,"nodeType":"RevertStatement","src":"18940:48:20"}]}}]},"documentation":{"id":6194,"nodeType":"StructuredDocumentation","src":"18464:312:20","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6219,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:20","nodeType":"FunctionDefinition","parameters":{"id":6197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6196,"mutability":"mutable","name":"value","nameLocation":"18806:5:20","nodeType":"VariableDeclaration","scope":6219,"src":"18799:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6195,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:20"},"returnParameters":{"id":6200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6199,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:20","nodeType":"VariableDeclaration","scope":6219,"src":"18836:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6198,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:20","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:20"},"scope":6988,"src":"18781:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6244,"nodeType":"Block","src":"19402:150:20","statements":[{"expression":{"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"19412:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"19432:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6228,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:20","typeDescriptions":{}}},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6233,"nodeType":"ExpressionStatement","src":"19412:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6234,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6225,"src":"19452:10:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"19466:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6243,"nodeType":"IfStatement","src":"19448:98:20","trueBody":{"id":6242,"nodeType":"Block","src":"19473:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:20","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6222,"src":"19529:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6237,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"19494:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6241,"nodeType":"RevertStatement","src":"19487:48:20"}]}}]},"documentation":{"id":6220,"nodeType":"StructuredDocumentation","src":"19011:312:20","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6245,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:20","nodeType":"FunctionDefinition","parameters":{"id":6223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6222,"mutability":"mutable","name":"value","nameLocation":"19353:5:20","nodeType":"VariableDeclaration","scope":6245,"src":"19346:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6221,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:20"},"returnParameters":{"id":6226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6225,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:20","nodeType":"VariableDeclaration","scope":6245,"src":"19383:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6224,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:20","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:20"},"scope":6988,"src":"19328:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6270,"nodeType":"Block","src":"19949:150:20","statements":[{"expression":{"id":6258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"19959:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"19979:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6255,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6254,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:20","typeDescriptions":{}}},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6259,"nodeType":"ExpressionStatement","src":"19959:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"19999:10:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6261,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"20013:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6269,"nodeType":"IfStatement","src":"19995:98:20","trueBody":{"id":6268,"nodeType":"Block","src":"20020:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:20","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6265,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6248,"src":"20076:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6263,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"20041:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6267,"nodeType":"RevertStatement","src":"20034:48:20"}]}}]},"documentation":{"id":6246,"nodeType":"StructuredDocumentation","src":"19558:312:20","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6271,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:20","nodeType":"FunctionDefinition","parameters":{"id":6249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6248,"mutability":"mutable","name":"value","nameLocation":"19900:5:20","nodeType":"VariableDeclaration","scope":6271,"src":"19893:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6247,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:20"},"returnParameters":{"id":6252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6251,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:20","nodeType":"VariableDeclaration","scope":6271,"src":"19930:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6250,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:20","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:20"},"scope":6988,"src":"19875:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6296,"nodeType":"Block","src":"20496:150:20","statements":[{"expression":{"id":6284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"20506:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"20526:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6280,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:20","typeDescriptions":{}}},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6285,"nodeType":"ExpressionStatement","src":"20506:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6286,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6277,"src":"20546:10:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"20560:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6295,"nodeType":"IfStatement","src":"20542:98:20","trueBody":{"id":6294,"nodeType":"Block","src":"20567:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:20","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6274,"src":"20623:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6289,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"20588:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6293,"nodeType":"RevertStatement","src":"20581:48:20"}]}}]},"documentation":{"id":6272,"nodeType":"StructuredDocumentation","src":"20105:312:20","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6297,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:20","nodeType":"FunctionDefinition","parameters":{"id":6275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6274,"mutability":"mutable","name":"value","nameLocation":"20447:5:20","nodeType":"VariableDeclaration","scope":6297,"src":"20440:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6273,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:20"},"returnParameters":{"id":6278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6277,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:20","nodeType":"VariableDeclaration","scope":6297,"src":"20477:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6276,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:20","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:20"},"scope":6988,"src":"20422:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6322,"nodeType":"Block","src":"21043:150:20","statements":[{"expression":{"id":6310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"21053:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"21073:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6306,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:20","typeDescriptions":{}}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6311,"nodeType":"ExpressionStatement","src":"21053:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6312,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6303,"src":"21093:10:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"21107:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6321,"nodeType":"IfStatement","src":"21089:98:20","trueBody":{"id":6320,"nodeType":"Block","src":"21114:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:20","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6317,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6300,"src":"21170:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6315,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"21135:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6319,"nodeType":"RevertStatement","src":"21128:48:20"}]}}]},"documentation":{"id":6298,"nodeType":"StructuredDocumentation","src":"20652:312:20","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6323,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:20","nodeType":"FunctionDefinition","parameters":{"id":6301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6300,"mutability":"mutable","name":"value","nameLocation":"20994:5:20","nodeType":"VariableDeclaration","scope":6323,"src":"20987:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6299,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:20"},"returnParameters":{"id":6304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6303,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:20","nodeType":"VariableDeclaration","scope":6323,"src":"21024:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6302,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:20","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:20"},"scope":6988,"src":"20969:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6348,"nodeType":"Block","src":"21590:150:20","statements":[{"expression":{"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6331,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"21600:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"21620:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6332,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:20","typeDescriptions":{}}},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6337,"nodeType":"ExpressionStatement","src":"21600:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6338,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6329,"src":"21640:10:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"21654:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6347,"nodeType":"IfStatement","src":"21636:98:20","trueBody":{"id":6346,"nodeType":"Block","src":"21661:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:20","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6326,"src":"21717:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6341,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"21682:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6345,"nodeType":"RevertStatement","src":"21675:48:20"}]}}]},"documentation":{"id":6324,"nodeType":"StructuredDocumentation","src":"21199:312:20","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6349,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:20","nodeType":"FunctionDefinition","parameters":{"id":6327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6326,"mutability":"mutable","name":"value","nameLocation":"21541:5:20","nodeType":"VariableDeclaration","scope":6349,"src":"21534:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6325,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:20"},"returnParameters":{"id":6330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6329,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:20","nodeType":"VariableDeclaration","scope":6349,"src":"21571:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6328,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:20","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:20"},"scope":6988,"src":"21516:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6374,"nodeType":"Block","src":"22137:150:20","statements":[{"expression":{"id":6362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6357,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"22147:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"22167:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6358,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:20","typeDescriptions":{}}},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6363,"nodeType":"ExpressionStatement","src":"22147:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6364,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6355,"src":"22187:10:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"22201:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6373,"nodeType":"IfStatement","src":"22183:98:20","trueBody":{"id":6372,"nodeType":"Block","src":"22208:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:20","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6352,"src":"22264:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6367,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22229:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6371,"nodeType":"RevertStatement","src":"22222:48:20"}]}}]},"documentation":{"id":6350,"nodeType":"StructuredDocumentation","src":"21746:312:20","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6375,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:20","nodeType":"FunctionDefinition","parameters":{"id":6353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6352,"mutability":"mutable","name":"value","nameLocation":"22088:5:20","nodeType":"VariableDeclaration","scope":6375,"src":"22081:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6351,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:20"},"returnParameters":{"id":6356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6355,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:20","nodeType":"VariableDeclaration","scope":6375,"src":"22118:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6354,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:20","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:20"},"scope":6988,"src":"22063:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6400,"nodeType":"Block","src":"22684:150:20","statements":[{"expression":{"id":6388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6383,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"22694:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"22714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6384,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:20","typeDescriptions":{}}},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6389,"nodeType":"ExpressionStatement","src":"22694:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6390,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6381,"src":"22734:10:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"22748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6399,"nodeType":"IfStatement","src":"22730:98:20","trueBody":{"id":6398,"nodeType":"Block","src":"22755:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:20","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"22811:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6393,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"22776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6397,"nodeType":"RevertStatement","src":"22769:48:20"}]}}]},"documentation":{"id":6376,"nodeType":"StructuredDocumentation","src":"22293:312:20","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6401,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:20","nodeType":"FunctionDefinition","parameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"value","nameLocation":"22635:5:20","nodeType":"VariableDeclaration","scope":6401,"src":"22628:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6377,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:20"},"returnParameters":{"id":6382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6381,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:20","nodeType":"VariableDeclaration","scope":6401,"src":"22665:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6380,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:20","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:20"},"scope":6988,"src":"22610:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6426,"nodeType":"Block","src":"23231:150:20","statements":[{"expression":{"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"23241:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"23261:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6410,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:20","typeDescriptions":{}}},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6415,"nodeType":"ExpressionStatement","src":"23241:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6416,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6407,"src":"23281:10:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"23295:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6425,"nodeType":"IfStatement","src":"23277:98:20","trueBody":{"id":6424,"nodeType":"Block","src":"23302:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:20","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6404,"src":"23358:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6419,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"23323:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6423,"nodeType":"RevertStatement","src":"23316:48:20"}]}}]},"documentation":{"id":6402,"nodeType":"StructuredDocumentation","src":"22840:312:20","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6427,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:20","nodeType":"FunctionDefinition","parameters":{"id":6405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6404,"mutability":"mutable","name":"value","nameLocation":"23182:5:20","nodeType":"VariableDeclaration","scope":6427,"src":"23175:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6403,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:20"},"returnParameters":{"id":6408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6407,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:20","nodeType":"VariableDeclaration","scope":6427,"src":"23212:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6406,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:20","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:20"},"scope":6988,"src":"23157:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6452,"nodeType":"Block","src":"23778:150:20","statements":[{"expression":{"id":6440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6435,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"23788:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"23808:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6436,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:20","typeDescriptions":{}}},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6441,"nodeType":"ExpressionStatement","src":"23788:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6433,"src":"23828:10:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6443,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"23842:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6451,"nodeType":"IfStatement","src":"23824:98:20","trueBody":{"id":6450,"nodeType":"Block","src":"23849:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:20","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"23905:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6445,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"23870:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6449,"nodeType":"RevertStatement","src":"23863:48:20"}]}}]},"documentation":{"id":6428,"nodeType":"StructuredDocumentation","src":"23387:312:20","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6453,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:20","nodeType":"FunctionDefinition","parameters":{"id":6431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6430,"mutability":"mutable","name":"value","nameLocation":"23729:5:20","nodeType":"VariableDeclaration","scope":6453,"src":"23722:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6429,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:20"},"returnParameters":{"id":6434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6433,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:20","nodeType":"VariableDeclaration","scope":6453,"src":"23759:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6432,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:20","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:20"},"scope":6988,"src":"23704:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6478,"nodeType":"Block","src":"24325:150:20","statements":[{"expression":{"id":6466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6461,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"24335:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"24355:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6463,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6462,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:20","typeDescriptions":{}}},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6467,"nodeType":"ExpressionStatement","src":"24335:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6459,"src":"24375:10:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6469,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"24389:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6477,"nodeType":"IfStatement","src":"24371:98:20","trueBody":{"id":6476,"nodeType":"Block","src":"24396:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:20","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6473,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6456,"src":"24452:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6471,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"24417:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6475,"nodeType":"RevertStatement","src":"24410:48:20"}]}}]},"documentation":{"id":6454,"nodeType":"StructuredDocumentation","src":"23934:312:20","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6479,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:20","nodeType":"FunctionDefinition","parameters":{"id":6457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6456,"mutability":"mutable","name":"value","nameLocation":"24276:5:20","nodeType":"VariableDeclaration","scope":6479,"src":"24269:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6455,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:20"},"returnParameters":{"id":6460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6459,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:20","nodeType":"VariableDeclaration","scope":6479,"src":"24306:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6458,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:20","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:20"},"scope":6988,"src":"24251:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6504,"nodeType":"Block","src":"24872:150:20","statements":[{"expression":{"id":6492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6487,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"24882:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"24902:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6488,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:20","typeDescriptions":{}}},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6493,"nodeType":"ExpressionStatement","src":"24882:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6485,"src":"24922:10:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"24936:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6503,"nodeType":"IfStatement","src":"24918:98:20","trueBody":{"id":6502,"nodeType":"Block","src":"24943:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:20","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6482,"src":"24999:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6497,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"24964:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6501,"nodeType":"RevertStatement","src":"24957:48:20"}]}}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"24481:312:20","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6505,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:20","nodeType":"FunctionDefinition","parameters":{"id":6483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"value","nameLocation":"24823:5:20","nodeType":"VariableDeclaration","scope":6505,"src":"24816:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6481,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:20"},"returnParameters":{"id":6486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6485,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:20","nodeType":"VariableDeclaration","scope":6505,"src":"24853:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6484,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:20","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:20"},"scope":6988,"src":"24798:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6530,"nodeType":"Block","src":"25419:150:20","statements":[{"expression":{"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6513,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"25429:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"25449:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6514,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:20","typeDescriptions":{}}},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6519,"nodeType":"ExpressionStatement","src":"25429:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6511,"src":"25469:10:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"25483:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6529,"nodeType":"IfStatement","src":"25465:98:20","trueBody":{"id":6528,"nodeType":"Block","src":"25490:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:20","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6508,"src":"25546:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6523,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"25511:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6527,"nodeType":"RevertStatement","src":"25504:48:20"}]}}]},"documentation":{"id":6506,"nodeType":"StructuredDocumentation","src":"25028:312:20","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6531,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:20","nodeType":"FunctionDefinition","parameters":{"id":6509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6508,"mutability":"mutable","name":"value","nameLocation":"25370:5:20","nodeType":"VariableDeclaration","scope":6531,"src":"25363:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6507,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:20"},"returnParameters":{"id":6512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6511,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:20","nodeType":"VariableDeclaration","scope":6531,"src":"25400:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6510,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:20","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:20"},"scope":6988,"src":"25345:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6556,"nodeType":"Block","src":"25966:150:20","statements":[{"expression":{"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6539,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"25976:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"25996:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6540,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:20","typeDescriptions":{}}},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6545,"nodeType":"ExpressionStatement","src":"25976:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6537,"src":"26016:10:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"26030:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6555,"nodeType":"IfStatement","src":"26012:98:20","trueBody":{"id":6554,"nodeType":"Block","src":"26037:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:20","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6534,"src":"26093:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6549,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"26058:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6553,"nodeType":"RevertStatement","src":"26051:48:20"}]}}]},"documentation":{"id":6532,"nodeType":"StructuredDocumentation","src":"25575:312:20","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6557,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:20","nodeType":"FunctionDefinition","parameters":{"id":6535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6534,"mutability":"mutable","name":"value","nameLocation":"25917:5:20","nodeType":"VariableDeclaration","scope":6557,"src":"25910:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6533,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:20"},"returnParameters":{"id":6538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6537,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:20","nodeType":"VariableDeclaration","scope":6557,"src":"25947:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6536,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:20"},"scope":6988,"src":"25892:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6582,"nodeType":"Block","src":"26513:150:20","statements":[{"expression":{"id":6570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6565,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"26523:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"26543:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6567,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6566,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:20","typeDescriptions":{}}},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6571,"nodeType":"ExpressionStatement","src":"26523:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6572,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6563,"src":"26563:10:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"26577:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6581,"nodeType":"IfStatement","src":"26559:98:20","trueBody":{"id":6580,"nodeType":"Block","src":"26584:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:20","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6560,"src":"26640:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6575,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"26605:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6579,"nodeType":"RevertStatement","src":"26598:48:20"}]}}]},"documentation":{"id":6558,"nodeType":"StructuredDocumentation","src":"26122:312:20","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6583,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:20","nodeType":"FunctionDefinition","parameters":{"id":6561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6560,"mutability":"mutable","name":"value","nameLocation":"26464:5:20","nodeType":"VariableDeclaration","scope":6583,"src":"26457:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6559,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:20"},"returnParameters":{"id":6564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6563,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:20","nodeType":"VariableDeclaration","scope":6583,"src":"26494:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6562,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:20","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:20"},"scope":6988,"src":"26439:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6608,"nodeType":"Block","src":"27060:150:20","statements":[{"expression":{"id":6596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6591,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"27070:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"27090:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6592,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:20","typeDescriptions":{}}},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6597,"nodeType":"ExpressionStatement","src":"27070:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6598,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6589,"src":"27110:10:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"27124:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6607,"nodeType":"IfStatement","src":"27106:98:20","trueBody":{"id":6606,"nodeType":"Block","src":"27131:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:20","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6586,"src":"27187:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6601,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27152:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6605,"nodeType":"RevertStatement","src":"27145:48:20"}]}}]},"documentation":{"id":6584,"nodeType":"StructuredDocumentation","src":"26669:312:20","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6609,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:20","nodeType":"FunctionDefinition","parameters":{"id":6587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6586,"mutability":"mutable","name":"value","nameLocation":"27011:5:20","nodeType":"VariableDeclaration","scope":6609,"src":"27004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6585,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:20"},"returnParameters":{"id":6590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6589,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:20","nodeType":"VariableDeclaration","scope":6609,"src":"27041:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6588,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:20","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:20"},"scope":6988,"src":"26986:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6634,"nodeType":"Block","src":"27607:150:20","statements":[{"expression":{"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6617,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"27617:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"27637:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6618,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:20","typeDescriptions":{}}},"id":6621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6623,"nodeType":"ExpressionStatement","src":"27617:26:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"27657:10:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"27671:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6633,"nodeType":"IfStatement","src":"27653:98:20","trueBody":{"id":6632,"nodeType":"Block","src":"27678:73:20","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:20","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"27734:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6627,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"27699:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6631,"nodeType":"RevertStatement","src":"27692:48:20"}]}}]},"documentation":{"id":6610,"nodeType":"StructuredDocumentation","src":"27216:312:20","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6635,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:20","nodeType":"FunctionDefinition","parameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6612,"mutability":"mutable","name":"value","nameLocation":"27558:5:20","nodeType":"VariableDeclaration","scope":6635,"src":"27551:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6611,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:20"},"returnParameters":{"id":6616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6615,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:20","nodeType":"VariableDeclaration","scope":6635,"src":"27588:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6614,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:20","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:20"},"scope":6988,"src":"27533:224:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6660,"nodeType":"Block","src":"28147:148:20","statements":[{"expression":{"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6643,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"28157:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"28176:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6644,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:20","typeDescriptions":{}}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6649,"nodeType":"ExpressionStatement","src":"28157:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6650,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6641,"src":"28196:10:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"28210:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6659,"nodeType":"IfStatement","src":"28192:97:20","trueBody":{"id":6658,"nodeType":"Block","src":"28217:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:20","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6638,"src":"28272:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6653,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"28238:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6657,"nodeType":"RevertStatement","src":"28231:47:20"}]}}]},"documentation":{"id":6636,"nodeType":"StructuredDocumentation","src":"27763:307:20","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6661,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:20","nodeType":"FunctionDefinition","parameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6638,"mutability":"mutable","name":"value","nameLocation":"28099:5:20","nodeType":"VariableDeclaration","scope":6661,"src":"28092:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6637,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:20"},"returnParameters":{"id":6642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6641,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:20","nodeType":"VariableDeclaration","scope":6661,"src":"28129:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6640,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:20","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:20"},"scope":6988,"src":"28075:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6686,"nodeType":"Block","src":"28685:148:20","statements":[{"expression":{"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6669,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"28695:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"28714:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6670,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:20","typeDescriptions":{}}},"id":6673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6675,"nodeType":"ExpressionStatement","src":"28695:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6676,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6667,"src":"28734:10:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"28748:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6685,"nodeType":"IfStatement","src":"28730:97:20","trueBody":{"id":6684,"nodeType":"Block","src":"28755:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:20","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"28810:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6679,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"28776:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6683,"nodeType":"RevertStatement","src":"28769:47:20"}]}}]},"documentation":{"id":6662,"nodeType":"StructuredDocumentation","src":"28301:307:20","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6687,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:20","nodeType":"FunctionDefinition","parameters":{"id":6665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6664,"mutability":"mutable","name":"value","nameLocation":"28637:5:20","nodeType":"VariableDeclaration","scope":6687,"src":"28630:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6663,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:20"},"returnParameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6667,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:20","nodeType":"VariableDeclaration","scope":6687,"src":"28667:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6666,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:20","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:20"},"scope":6988,"src":"28613:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6712,"nodeType":"Block","src":"29223:148:20","statements":[{"expression":{"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6695,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"29233:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"29252:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6696,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:20","typeDescriptions":{}}},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6701,"nodeType":"ExpressionStatement","src":"29233:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6702,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6693,"src":"29272:10:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"29286:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6711,"nodeType":"IfStatement","src":"29268:97:20","trueBody":{"id":6710,"nodeType":"Block","src":"29293:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:20","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6707,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"29348:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6705,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"29314:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6709,"nodeType":"RevertStatement","src":"29307:47:20"}]}}]},"documentation":{"id":6688,"nodeType":"StructuredDocumentation","src":"28839:307:20","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6713,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:20","nodeType":"FunctionDefinition","parameters":{"id":6691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6690,"mutability":"mutable","name":"value","nameLocation":"29175:5:20","nodeType":"VariableDeclaration","scope":6713,"src":"29168:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6689,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:20"},"returnParameters":{"id":6694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6693,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:20","nodeType":"VariableDeclaration","scope":6713,"src":"29205:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6692,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:20","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:20"},"scope":6988,"src":"29151:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6738,"nodeType":"Block","src":"29761:148:20","statements":[{"expression":{"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6721,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"29771:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"29790:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6722,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:20","typeDescriptions":{}}},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6727,"nodeType":"ExpressionStatement","src":"29771:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6728,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"29810:10:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"29824:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6737,"nodeType":"IfStatement","src":"29806:97:20","trueBody":{"id":6736,"nodeType":"Block","src":"29831:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:20","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6716,"src":"29886:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6731,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"29852:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6735,"nodeType":"RevertStatement","src":"29845:47:20"}]}}]},"documentation":{"id":6714,"nodeType":"StructuredDocumentation","src":"29377:307:20","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6739,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:20","nodeType":"FunctionDefinition","parameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"value","nameLocation":"29713:5:20","nodeType":"VariableDeclaration","scope":6739,"src":"29706:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6715,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:20"},"returnParameters":{"id":6720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6719,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:20","nodeType":"VariableDeclaration","scope":6739,"src":"29743:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6718,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:20","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:20"},"scope":6988,"src":"29689:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6764,"nodeType":"Block","src":"30299:148:20","statements":[{"expression":{"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6747,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"30309:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"30328:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6748,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:20","typeDescriptions":{}}},"id":6751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6753,"nodeType":"ExpressionStatement","src":"30309:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6754,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"30348:10:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"30362:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6763,"nodeType":"IfStatement","src":"30344:97:20","trueBody":{"id":6762,"nodeType":"Block","src":"30369:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:20","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6759,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6742,"src":"30424:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6757,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"30390:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6761,"nodeType":"RevertStatement","src":"30383:47:20"}]}}]},"documentation":{"id":6740,"nodeType":"StructuredDocumentation","src":"29915:307:20","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6765,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:20","nodeType":"FunctionDefinition","parameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"value","nameLocation":"30251:5:20","nodeType":"VariableDeclaration","scope":6765,"src":"30244:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6741,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:20"},"returnParameters":{"id":6746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6745,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:20","nodeType":"VariableDeclaration","scope":6765,"src":"30281:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6744,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:20","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:20"},"scope":6988,"src":"30227:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6790,"nodeType":"Block","src":"30837:148:20","statements":[{"expression":{"id":6778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"30847:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"30866:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6774,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:20","typeDescriptions":{}}},"id":6777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6779,"nodeType":"ExpressionStatement","src":"30847:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6771,"src":"30886:10:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"30900:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6789,"nodeType":"IfStatement","src":"30882:97:20","trueBody":{"id":6788,"nodeType":"Block","src":"30907:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:20","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6768,"src":"30962:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6783,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"30928:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6787,"nodeType":"RevertStatement","src":"30921:47:20"}]}}]},"documentation":{"id":6766,"nodeType":"StructuredDocumentation","src":"30453:307:20","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6791,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:20","nodeType":"FunctionDefinition","parameters":{"id":6769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6768,"mutability":"mutable","name":"value","nameLocation":"30789:5:20","nodeType":"VariableDeclaration","scope":6791,"src":"30782:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6767,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:20"},"returnParameters":{"id":6772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6771,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:20","nodeType":"VariableDeclaration","scope":6791,"src":"30819:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6770,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:20"},"scope":6988,"src":"30765:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6816,"nodeType":"Block","src":"31375:148:20","statements":[{"expression":{"id":6804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"31385:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"31404:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6800,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:20","typeDescriptions":{}}},"id":6803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6805,"nodeType":"ExpressionStatement","src":"31385:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"31424:10:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"31438:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6815,"nodeType":"IfStatement","src":"31420:97:20","trueBody":{"id":6814,"nodeType":"Block","src":"31445:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:20","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"31500:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6809,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"31466:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6813,"nodeType":"RevertStatement","src":"31459:47:20"}]}}]},"documentation":{"id":6792,"nodeType":"StructuredDocumentation","src":"30991:307:20","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:20","nodeType":"FunctionDefinition","parameters":{"id":6795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6794,"mutability":"mutable","name":"value","nameLocation":"31327:5:20","nodeType":"VariableDeclaration","scope":6817,"src":"31320:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6793,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:20"},"returnParameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:20","nodeType":"VariableDeclaration","scope":6817,"src":"31357:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6796,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:20","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:20"},"scope":6988,"src":"31303:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6842,"nodeType":"Block","src":"31913:148:20","statements":[{"expression":{"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"31923:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"31942:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6826,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:20","typeDescriptions":{}}},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6831,"nodeType":"ExpressionStatement","src":"31923:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6823,"src":"31962:10:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"31976:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6841,"nodeType":"IfStatement","src":"31958:97:20","trueBody":{"id":6840,"nodeType":"Block","src":"31983:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:20","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"32038:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6835,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"32004:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6839,"nodeType":"RevertStatement","src":"31997:47:20"}]}}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"31529:307:20","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6843,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:20","nodeType":"FunctionDefinition","parameters":{"id":6821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"value","nameLocation":"31865:5:20","nodeType":"VariableDeclaration","scope":6843,"src":"31858:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6819,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:20"},"returnParameters":{"id":6824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6823,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:20","nodeType":"VariableDeclaration","scope":6843,"src":"31895:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6822,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:20","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:20"},"scope":6988,"src":"31841:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6868,"nodeType":"Block","src":"32451:148:20","statements":[{"expression":{"id":6856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"32461:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"32480:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6852,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:20","typeDescriptions":{}}},"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6857,"nodeType":"ExpressionStatement","src":"32461:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6849,"src":"32500:10:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"32514:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6867,"nodeType":"IfStatement","src":"32496:97:20","trueBody":{"id":6866,"nodeType":"Block","src":"32521:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:20","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6863,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6846,"src":"32576:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6861,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"32542:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6865,"nodeType":"RevertStatement","src":"32535:47:20"}]}}]},"documentation":{"id":6844,"nodeType":"StructuredDocumentation","src":"32067:307:20","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6869,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:20","nodeType":"FunctionDefinition","parameters":{"id":6847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6846,"mutability":"mutable","name":"value","nameLocation":"32403:5:20","nodeType":"VariableDeclaration","scope":6869,"src":"32396:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6845,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:20"},"returnParameters":{"id":6850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6849,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:20","nodeType":"VariableDeclaration","scope":6869,"src":"32433:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6848,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:20","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:20"},"scope":6988,"src":"32379:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6894,"nodeType":"Block","src":"32989:148:20","statements":[{"expression":{"id":6882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"32999:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6880,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"33018:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6878,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:20","typeDescriptions":{}}},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6883,"nodeType":"ExpressionStatement","src":"32999:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6875,"src":"33038:10:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"33052:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6893,"nodeType":"IfStatement","src":"33034:97:20","trueBody":{"id":6892,"nodeType":"Block","src":"33059:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:20","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6872,"src":"33114:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6887,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"33080:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6891,"nodeType":"RevertStatement","src":"33073:47:20"}]}}]},"documentation":{"id":6870,"nodeType":"StructuredDocumentation","src":"32605:307:20","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6895,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:20","nodeType":"FunctionDefinition","parameters":{"id":6873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6872,"mutability":"mutable","name":"value","nameLocation":"32941:5:20","nodeType":"VariableDeclaration","scope":6895,"src":"32934:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6871,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:20"},"returnParameters":{"id":6876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6875,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:20","nodeType":"VariableDeclaration","scope":6895,"src":"32971:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6874,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:20"},"scope":6988,"src":"32917:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6920,"nodeType":"Block","src":"33527:148:20","statements":[{"expression":{"id":6908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"33537:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"33556:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6904,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:20","typeDescriptions":{}}},"id":6907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6909,"nodeType":"ExpressionStatement","src":"33537:25:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6901,"src":"33576:10:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"33590:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6919,"nodeType":"IfStatement","src":"33572:97:20","trueBody":{"id":6918,"nodeType":"Block","src":"33597:72:20","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:20","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"33652:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6913,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"33618:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6917,"nodeType":"RevertStatement","src":"33611:47:20"}]}}]},"documentation":{"id":6896,"nodeType":"StructuredDocumentation","src":"33143:307:20","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6921,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:20","nodeType":"FunctionDefinition","parameters":{"id":6899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"value","nameLocation":"33479:5:20","nodeType":"VariableDeclaration","scope":6921,"src":"33472:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6897,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:20"},"returnParameters":{"id":6902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6901,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:20","nodeType":"VariableDeclaration","scope":6921,"src":"33509:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6900,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:20"},"scope":6988,"src":"33455:220:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6946,"nodeType":"Block","src":"34058:146:20","statements":[{"expression":{"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"34068:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"34086:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6930,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:20","typeDescriptions":{}}},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6935,"nodeType":"ExpressionStatement","src":"34068:24:20"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6927,"src":"34106:10:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"34120:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6945,"nodeType":"IfStatement","src":"34102:96:20","trueBody":{"id":6944,"nodeType":"Block","src":"34127:71:20","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:20","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6924,"src":"34181:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6939,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5245,"src":"34148:29:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6943,"nodeType":"RevertStatement","src":"34141:46:20"}]}}]},"documentation":{"id":6922,"nodeType":"StructuredDocumentation","src":"33681:302:20","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6947,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:20","nodeType":"FunctionDefinition","parameters":{"id":6925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6924,"mutability":"mutable","name":"value","nameLocation":"34011:5:20","nodeType":"VariableDeclaration","scope":6947,"src":"34004:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6923,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:20"},"returnParameters":{"id":6928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6927,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:20","nodeType":"VariableDeclaration","scope":6947,"src":"34041:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6926,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:20","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:20"},"scope":6988,"src":"33988:216:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6976,"nodeType":"Block","src":"34444:250:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"34557:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6959,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:20","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6958,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:20","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:20","memberName":"max","nodeType":"MemberAccess","src":"34573:16:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6956,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:20","typeDescriptions":{}}},"id":6963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6970,"nodeType":"IfStatement","src":"34553:105:20","trueBody":{"id":6969,"nodeType":"Block","src":"34592:66:20","statements":[{"errorCall":{"arguments":[{"id":6966,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"34641:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6965,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5250,"src":"34613:27:20","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6968,"nodeType":"RevertStatement","src":"34606:41:20"}]}},{"expression":{"arguments":[{"id":6973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6950,"src":"34681:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6971,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:20","typeDescriptions":{}}},"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6954,"id":6975,"nodeType":"Return","src":"34667:20:20"}]},"documentation":{"id":6948,"nodeType":"StructuredDocumentation","src":"34210:165:20","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6977,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:20","nodeType":"FunctionDefinition","parameters":{"id":6951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6950,"mutability":"mutable","name":"value","nameLocation":"34406:5:20","nodeType":"VariableDeclaration","scope":6977,"src":"34398:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6949,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:20"},"returnParameters":{"id":6954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6953,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6977,"src":"34436:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6952,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:20"},"scope":6988,"src":"34380:314:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6986,"nodeType":"Block","src":"34853:87:20","statements":[{"AST":{"nativeSrc":"34888:46:20","nodeType":"YulBlock","src":"34888:46:20","statements":[{"nativeSrc":"34902:22:20","nodeType":"YulAssignment","src":"34902:22:20","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:20","nodeType":"YulIdentifier","src":"34921:1:20"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:20","nodeType":"YulIdentifier","src":"34914:6:20"},"nativeSrc":"34914:9:20","nodeType":"YulFunctionCall","src":"34914:9:20"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:20","nodeType":"YulIdentifier","src":"34907:6:20"},"nativeSrc":"34907:17:20","nodeType":"YulFunctionCall","src":"34907:17:20"},"variableNames":[{"name":"u","nativeSrc":"34902:1:20","nodeType":"YulIdentifier","src":"34902:1:20"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6980,"isOffset":false,"isSlot":false,"src":"34921:1:20","valueSize":1},{"declaration":6983,"isOffset":false,"isSlot":false,"src":"34902:1:20","valueSize":1}],"flags":["memory-safe"],"id":6985,"nodeType":"InlineAssembly","src":"34863:71:20"}]},"documentation":{"id":6978,"nodeType":"StructuredDocumentation","src":"34700:90:20","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6987,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:20","nodeType":"FunctionDefinition","parameters":{"id":6981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6980,"mutability":"mutable","name":"b","nameLocation":"34816:1:20","nodeType":"VariableDeclaration","scope":6987,"src":"34811:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6979,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:20"},"returnParameters":{"id":6984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6983,"mutability":"mutable","name":"u","nameLocation":"34850:1:20","nodeType":"VariableDeclaration","scope":6987,"src":"34842:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6982,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:20"},"scope":6988,"src":"34795:145:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6989,"src":"769:34173:20","usedErrors":[5233,5238,5245,5250],"usedEvents":[]}],"src":"192:34751:20"},"id":20},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6988],"SignedMath":[7132]},"id":7133,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6990,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6992,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7133,"sourceUnit":6989,"src":"135:40:21","symbolAliases":[{"foreign":{"id":6991,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"143:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6993,"nodeType":"StructuredDocumentation","src":"177:80:21","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7132,"linearizedBaseContracts":[7132],"name":"SignedMath","nameLocation":"266:10:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":7022,"nodeType":"Block","src":"746:215:21","statements":[{"id":7021,"nodeType":"UncheckedBlock","src":"756:199:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7005,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"894:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7006,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6998,"src":"900:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7007,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"904:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7014,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6996,"src":"932:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7012,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6988,"src":"916:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6988_$","typeString":"type(library SafeCast)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6987,"src":"916:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7010,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:21","typeDescriptions":{}}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7004,"id":7020,"nodeType":"Return","src":"887:57:21"}]}]},"documentation":{"id":6994,"nodeType":"StructuredDocumentation","src":"283:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7023,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:21","nodeType":"FunctionDefinition","parameters":{"id":7001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6996,"mutability":"mutable","name":"condition","nameLocation":"684:9:21","nodeType":"VariableDeclaration","scope":7023,"src":"679:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6995,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6998,"mutability":"mutable","name":"a","nameLocation":"702:1:21","nodeType":"VariableDeclaration","scope":7023,"src":"695:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6997,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7000,"mutability":"mutable","name":"b","nameLocation":"712:1:21","nodeType":"VariableDeclaration","scope":7023,"src":"705:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6999,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:21"},"returnParameters":{"id":7004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7023,"src":"738:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7002,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:21"},"scope":7132,"src":"662:299:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7041,"nodeType":"Block","src":"1102:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7034,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"1127:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7035,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"1131:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7037,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7026,"src":"1134:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7038,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7028,"src":"1137:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7033,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1119:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7032,"id":7040,"nodeType":"Return","src":"1112:27:21"}]},"documentation":{"id":7024,"nodeType":"StructuredDocumentation","src":"967:66:21","text":" @dev Returns the largest of two signed numbers."},"id":7042,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:21","nodeType":"FunctionDefinition","parameters":{"id":7029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7026,"mutability":"mutable","name":"a","nameLocation":"1058:1:21","nodeType":"VariableDeclaration","scope":7042,"src":"1051:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7025,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7028,"mutability":"mutable","name":"b","nameLocation":"1068:1:21","nodeType":"VariableDeclaration","scope":7042,"src":"1061:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7027,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:21"},"returnParameters":{"id":7032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7031,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7042,"src":"1094:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7030,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:21"},"scope":7132,"src":"1038:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7060,"nodeType":"Block","src":"1288:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7053,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"1313:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7054,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"1317:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7056,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7045,"src":"1320:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7057,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7047,"src":"1323:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7052,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"1305:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7051,"id":7059,"nodeType":"Return","src":"1298:27:21"}]},"documentation":{"id":7043,"nodeType":"StructuredDocumentation","src":"1152:67:21","text":" @dev Returns the smallest of two signed numbers."},"id":7061,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:21","nodeType":"FunctionDefinition","parameters":{"id":7048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7045,"mutability":"mutable","name":"a","nameLocation":"1244:1:21","nodeType":"VariableDeclaration","scope":7061,"src":"1237:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7044,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7047,"mutability":"mutable","name":"b","nameLocation":"1254:1:21","nodeType":"VariableDeclaration","scope":7061,"src":"1247:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7046,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:21"},"returnParameters":{"id":7051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7050,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7061,"src":"1280:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7049,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:21"},"scope":7132,"src":"1224:108:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7104,"nodeType":"Block","src":"1537:162:21","statements":[{"assignments":[7072],"declarations":[{"constant":false,"id":7072,"mutability":"mutable","name":"x","nameLocation":"1606:1:21","nodeType":"VariableDeclaration","scope":7104,"src":"1599:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7071,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7085,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7073,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"1611:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7074,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"1615:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7077,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"1622:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7078,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"1626:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:21"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7086,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1651:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7091,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7072,"src":"1671:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7089,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:21","typeDescriptions":{}}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7087,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:21","typeDescriptions":{}}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7096,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7064,"src":"1685:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7097,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7066,"src":"1689:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7101,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7070,"id":7103,"nodeType":"Return","src":"1644:48:21"}]},"documentation":{"id":7062,"nodeType":"StructuredDocumentation","src":"1338:126:21","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7105,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:21","nodeType":"FunctionDefinition","parameters":{"id":7067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7064,"mutability":"mutable","name":"a","nameLocation":"1493:1:21","nodeType":"VariableDeclaration","scope":7105,"src":"1486:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7063,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7066,"mutability":"mutable","name":"b","nameLocation":"1503:1:21","nodeType":"VariableDeclaration","scope":7105,"src":"1496:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7065,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:21"},"returnParameters":{"id":7070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7105,"src":"1529:6:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7068,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:21"},"scope":7132,"src":"1469:230:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7130,"nodeType":"Block","src":"1843:767:21","statements":[{"id":7129,"nodeType":"UncheckedBlock","src":"1853:751:21","statements":[{"assignments":[7114],"declarations":[{"constant":false,"id":7114,"mutability":"mutable","name":"mask","nameLocation":"2424:4:21","nodeType":"VariableDeclaration","scope":7129,"src":"2417:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7113,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7118,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7115,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"2431:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7121,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7108,"src":"2576:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7122,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"2580:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7124,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7125,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"2588:4:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7119,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:21","typeDescriptions":{}}},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7112,"id":7128,"nodeType":"Return","src":"2560:33:21"}]}]},"documentation":{"id":7106,"nodeType":"StructuredDocumentation","src":"1705:78:21","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7131,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:21","nodeType":"FunctionDefinition","parameters":{"id":7109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7108,"mutability":"mutable","name":"n","nameLocation":"1808:1:21","nodeType":"VariableDeclaration","scope":7131,"src":"1801:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7107,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:21"},"returnParameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7131,"src":"1834:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:21"},"scope":7132,"src":"1788:822:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7133,"src":"258:2354:21","usedErrors":[],"usedEvents":[]}],"src":"109:2504:21"},"id":21},"contracts/access/Admin.sol":{"ast":{"absolutePath":"contracts/access/Admin.sol","exportedSymbols":{"Admin":[7305]},"id":7306,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":7134,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Admin","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7305,"linearizedBaseContracts":[7305],"name":"Admin","nameLocation":"72:5:22","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"14bfd6d0","id":7137,"mutability":"mutable","name":"admins","nameLocation":"129:6:22","nodeType":"VariableDeclaration","scope":7305,"src":"111:24:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":7135,"name":"address","nodeType":"ElementaryTypeName","src":"111:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7136,"nodeType":"ArrayTypeName","src":"111:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"24d7806c","id":7141,"mutability":"mutable","name":"isAdmin","nameLocation":"227:7:22","nodeType":"VariableDeclaration","scope":7305,"src":"195:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7140,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7138,"name":"address","nodeType":"ElementaryTypeName","src":"203:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"195:24:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7139,"name":"bool","nodeType":"ElementaryTypeName","src":"214:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":7152,"nodeType":"Block","src":"309:80:22","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7144,"name":"isAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"327:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7147,"indexExpression":{"expression":{"id":7145,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"335:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"339:6:22","memberName":"sender","nodeType":"MemberAccess","src":"335:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"327:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e2063616c6c2e","id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"348:22:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_eeb8c4da657fd354431752e87aa6b95536bea85e6f9375acb5057c99589ee9ed","typeString":"literal_string \"Only admin can call.\""},"value":"Only admin can call."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eeb8c4da657fd354431752e87aa6b95536bea85e6f9375acb5057c99589ee9ed","typeString":"literal_string \"Only admin can call.\""}],"id":7143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"319:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"319:52:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7150,"nodeType":"ExpressionStatement","src":"319:52:22"},{"id":7151,"nodeType":"PlaceholderStatement","src":"381:1:22"}]},"id":7153,"name":"onlyAdmin","nameLocation":"299:9:22","nodeType":"ModifierDefinition","parameters":{"id":7142,"nodeType":"ParameterList","parameters":[],"src":"309:0:22"},"src":"290:99:22","virtual":false,"visibility":"internal"},{"body":{"id":7188,"nodeType":"Block","src":"495:145:22","statements":[{"body":{"id":7186,"nodeType":"Block","src":"546:88:22","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7173,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"572:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7175,"indexExpression":{"id":7174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"580:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"572:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7170,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"560:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"567:4:22","memberName":"push","nodeType":"MemberAccess","src":"560:11:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"560:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7177,"nodeType":"ExpressionStatement","src":"560:23:22"},{"expression":{"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7178,"name":"isAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"597:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7182,"indexExpression":{"baseExpression":{"id":7179,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"605:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7181,"indexExpression":{"id":7180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"613:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"605:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"597:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"619:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"597:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7185,"nodeType":"ExpressionStatement","src":"597:26:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7163,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"521:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7164,"name":"_admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7156,"src":"525:7:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"533:6:22","memberName":"length","nodeType":"MemberAccess","src":"525:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"521:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7187,"initializationExpression":{"assignments":[7160],"declarations":[{"constant":false,"id":7160,"mutability":"mutable","name":"i","nameLocation":"514:1:22","nodeType":"VariableDeclaration","scope":7187,"src":"509:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7159,"name":"uint","nodeType":"ElementaryTypeName","src":"509:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7162,"initialValue":{"hexValue":"30","id":7161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"509:10:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"541:3:22","subExpression":{"id":7167,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7160,"src":"541:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7169,"nodeType":"ExpressionStatement","src":"541:3:22"},"nodeType":"ForStatement","src":"505:129:22"}]},"id":7189,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7156,"mutability":"mutable","name":"_admins","nameLocation":"485:7:22","nodeType":"VariableDeclaration","scope":7189,"src":"467:25:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7154,"name":"address","nodeType":"ElementaryTypeName","src":"467:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7155,"nodeType":"ArrayTypeName","src":"467:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"466:27:22"},"returnParameters":{"id":7158,"nodeType":"ParameterList","parameters":[],"src":"495:0:22"},"scope":7305,"src":"454:186:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7226,"nodeType":"Block","src":"732:395:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7197,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"794:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"307830","id":7200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"819:3:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"811:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7198,"name":"address","nodeType":"ElementaryTypeName","src":"811:7:22","typeDescriptions":{}}},"id":7201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"811:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"794:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5b524241435d203a2041646d696e206d75737420626520213d207468616e203078302061646472657373","id":7203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"825:44:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_3249c21d7ed023034f982504af99e0a954d6a4ae0351a545ecc4a6f98f3bf1b8","typeString":"literal_string \"[RBAC] : Admin must be != than 0x0 address\""},"value":"[RBAC] : Admin must be != than 0x0 address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3249c21d7ed023034f982504af99e0a954d6a4ae0351a545ecc4a6f98f3bf1b8","typeString":"literal_string \"[RBAC] : Admin must be != than 0x0 address\""}],"id":7196,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"786:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"786:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7205,"nodeType":"ExpressionStatement","src":"786:84:22"},{"expression":{"arguments":[{"id":7210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"924:23:22","subExpression":{"baseExpression":{"id":7207,"name":"isAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"925:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7209,"indexExpression":{"id":7208,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"933:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"925:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5b524241435d203a2041646d696e20616c7265616479206578697374732e","id":7211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"949:32:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b2faa1a0b359318f404de189961c7916c4aaddc9d432f216f0b50c808e015c1d","typeString":"literal_string \"[RBAC] : Admin already exists.\""},"value":"[RBAC] : Admin already exists."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b2faa1a0b359318f404de189961c7916c4aaddc9d432f216f0b50c808e015c1d","typeString":"literal_string \"[RBAC] : Admin already exists.\""}],"id":7206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"916:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7213,"nodeType":"ExpressionStatement","src":"916:66:22"},{"expression":{"arguments":[{"id":7217,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"1044:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":7214,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1032:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1039:4:22","memberName":"push","nodeType":"MemberAccess","src":"1032:11:22","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1032:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7219,"nodeType":"ExpressionStatement","src":"1032:26:22"},{"expression":{"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7220,"name":"isAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"1091:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7222,"indexExpression":{"id":7221,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7191,"src":"1099:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1091:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1116:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1091:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7225,"nodeType":"ExpressionStatement","src":"1091:29:22"}]},"functionSelector":"70480275","id":7227,"implemented":true,"kind":"function","modifiers":[{"id":7194,"kind":"modifierInvocation","modifierName":{"id":7193,"name":"onlyAdmin","nameLocations":["718:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":7153,"src":"718:9:22"},"nodeType":"ModifierInvocation","src":"718:9:22"}],"name":"addAdmin","nameLocation":"655:8:22","nodeType":"FunctionDefinition","parameters":{"id":7192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7191,"mutability":"mutable","name":"_adminAddress","nameLocation":"681:13:22","nodeType":"VariableDeclaration","scope":7227,"src":"673:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7190,"name":"address","nodeType":"ElementaryTypeName","src":"673:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"663:37:22"},"returnParameters":{"id":7195,"nodeType":"ParameterList","parameters":[],"src":"732:0:22"},"scope":7305,"src":"646:481:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7294,"nodeType":"Block","src":"1222:613:22","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7235,"name":"isAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"1270:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7237,"indexExpression":{"id":7236,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"1278:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1270:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1262:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":7238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1262:31:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7239,"nodeType":"ExpressionStatement","src":"1262:31:22"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7241,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1311:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1318:6:22","memberName":"length","nodeType":"MemberAccess","src":"1311:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":7243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1327:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1311:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e206e6f742072656d6f766520616c6c2061646d696e732073696e636520636f6e7472616374206265636f6d657320756e757361626c652e","id":7245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1330:60:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_601bc922685ba4620923197dc89e3f3c4a153f588fccf4978f7a55dd9887a992","typeString":"literal_string \"Can not remove all admins since contract becomes unusable.\""},"value":"Can not remove all admins since contract becomes unusable."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_601bc922685ba4620923197dc89e3f3c4a153f588fccf4978f7a55dd9887a992","typeString":"literal_string \"Can not remove all admins since contract becomes unusable.\""}],"id":7240,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1303:7:22","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1303:88:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7247,"nodeType":"ExpressionStatement","src":"1303:88:22"},{"assignments":[7249],"declarations":[{"constant":false,"id":7249,"mutability":"mutable","name":"i","nameLocation":"1406:1:22","nodeType":"VariableDeclaration","scope":7294,"src":"1401:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7248,"name":"uint","nodeType":"ElementaryTypeName","src":"1401:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7251,"initialValue":{"hexValue":"30","id":7250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1410:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1401:10:22"},{"body":{"id":7270,"nodeType":"Block","src":"1456:142:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7257,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"1473:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7258,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1478:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1485:6:22","memberName":"length","nodeType":"MemberAccess","src":"1478:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1473:18:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7266,"nodeType":"IfStatement","src":"1470:101:22","trueBody":{"id":7265,"nodeType":"Block","src":"1493:78:22","statements":[{"expression":{"arguments":[{"hexValue":"5061737365642061646d696e206164647265737320646f6573206e6f74206578697374","id":7262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1518:37:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_5ee7f127c50882e8345055b8ed5f4e1a92b004701e3f3d44c17355788d138d12","typeString":"literal_string \"Passed admin address does not exist\""},"value":"Passed admin address does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_5ee7f127c50882e8345055b8ed5f4e1a92b004701e3f3d44c17355788d138d12","typeString":"literal_string \"Passed admin address does not exist\""}],"id":7261,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1511:6:22","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1511:45:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7264,"nodeType":"ExpressionStatement","src":"1511:45:22"}]}},{"expression":{"id":7268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1584:3:22","subExpression":{"id":7267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"1584:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7269,"nodeType":"ExpressionStatement","src":"1584:3:22"}]},"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7252,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1428:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7254,"indexExpression":{"id":7253,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"1435:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1428:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7255,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"1441:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1428:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7271,"nodeType":"WhileStatement","src":"1422:176:22"},{"expression":{"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7272,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1669:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7274,"indexExpression":{"id":7273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7249,"src":"1676:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1669:9:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":7275,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1681:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7280,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7276,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1688:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1695:6:22","memberName":"length","nodeType":"MemberAccess","src":"1688:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":7278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1688:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1681:23:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1669:35:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7282,"nodeType":"ExpressionStatement","src":"1669:35:22"},{"expression":{"id":7287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7283,"name":"isAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7141,"src":"1715:7:22","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7285,"indexExpression":{"id":7284,"name":"_adminAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7229,"src":"1723:13:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1715:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":7286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1740:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1715:30:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7288,"nodeType":"ExpressionStatement","src":"1715:30:22"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7289,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1816:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":7291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:3:22","memberName":"pop","nodeType":"MemberAccess","src":"1816:10:22","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":7292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7293,"nodeType":"ExpressionStatement","src":"1816:12:22"}]},"functionSelector":"1785f53c","id":7295,"implemented":true,"kind":"function","modifiers":[{"id":7232,"kind":"modifierInvocation","modifierName":{"id":7231,"name":"onlyAdmin","nameLocations":["1208:9:22"],"nodeType":"IdentifierPath","referencedDeclaration":7153,"src":"1208:9:22"},"nodeType":"ModifierInvocation","src":"1208:9:22"}],"name":"removeAdmin","nameLocation":"1142:11:22","nodeType":"FunctionDefinition","parameters":{"id":7230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7229,"mutability":"mutable","name":"_adminAddress","nameLocation":"1171:13:22","nodeType":"VariableDeclaration","scope":7295,"src":"1163:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7228,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1153:37:22"},"returnParameters":{"id":7233,"nodeType":"ParameterList","parameters":[],"src":"1222:0:22"},"scope":7305,"src":"1133:702:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7303,"nodeType":"Block","src":"1947:30:22","statements":[{"expression":{"id":7301,"name":"admins","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"1964:6:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":7300,"id":7302,"nodeType":"Return","src":"1957:13:22"}]},"functionSelector":"e9523c97","id":7304,"implemented":true,"kind":"function","modifiers":[],"name":"getAllAdmins","nameLocation":"1874:12:22","nodeType":"FunctionDefinition","parameters":{"id":7296,"nodeType":"ParameterList","parameters":[],"src":"1886:2:22"},"returnParameters":{"id":7300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7304,"src":"1924:17:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":7297,"name":"address","nodeType":"ElementaryTypeName","src":"1924:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7298,"nodeType":"ArrayTypeName","src":"1924:10:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1923:19:22"},"scope":7305,"src":"1865:112:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7306,"src":"63:1917:22","usedErrors":[],"usedEvents":[]}],"src":"38:1943:22"},"id":22},"contracts/farming/FarmingC2N.sol":{"ast":{"absolutePath":"contracts/farming/FarmingC2N.sol","exportedSymbols":{"Context":[1931],"FarmingC2N":[8123],"IERC1363":[724],"IERC20":[1466],"Ownable":[642],"SafeERC20":[1901]},"id":8124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7307,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":7308,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8124,"sourceUnit":1467,"src":"57:56:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7309,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8124,"sourceUnit":643,"src":"114:52:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":7310,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8124,"sourceUnit":1902,"src":"167:65:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7311,"name":"Ownable","nameLocations":["489:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":642,"src":"489:7:23"},"id":7312,"nodeType":"InheritanceSpecifier","src":"489:7:23"}],"canonicalName":"FarmingC2N","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":8123,"linearizedBaseContracts":[8123,642,1931],"name":"FarmingC2N","nameLocation":"475:10:23","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7316,"libraryName":{"id":7313,"name":"SafeERC20","nameLocations":["510:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"510:9:23"},"nodeType":"UsingForDirective","src":"504:27:23","typeName":{"id":7315,"nodeType":"UserDefinedTypeName","pathNode":{"id":7314,"name":"IERC20","nameLocations":["524:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"524:6:23"},"referencedDeclaration":1466,"src":"524:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}}},{"canonicalName":"FarmingC2N.UserInfo","id":7321,"members":[{"constant":false,"id":7318,"mutability":"mutable","name":"amount","nameLocation":"606:6:23","nodeType":"VariableDeclaration","scope":7321,"src":"598:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7317,"name":"uint256","nodeType":"ElementaryTypeName","src":"598:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7320,"mutability":"mutable","name":"rewardDebt","nameLocation":"664:10:23","nodeType":"VariableDeclaration","scope":7321,"src":"656:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7319,"name":"uint256","nodeType":"ElementaryTypeName","src":"656:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserInfo","nameLocation":"579:8:23","nodeType":"StructDefinition","scope":8123,"src":"572:758:23","visibility":"public"},{"canonicalName":"FarmingC2N.PoolInfo","id":7333,"members":[{"constant":false,"id":7324,"mutability":"mutable","name":"lpToken","nameLocation":"1400:7:23","nodeType":"VariableDeclaration","scope":7333,"src":"1393:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":7323,"nodeType":"UserDefinedTypeName","pathNode":{"id":7322,"name":"IERC20","nameLocations":["1393:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"1393:6:23"},"referencedDeclaration":1466,"src":"1393:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7326,"mutability":"mutable","name":"allocPoint","nameLocation":"1463:10:23","nodeType":"VariableDeclaration","scope":7333,"src":"1455:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1455:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7328,"mutability":"mutable","name":"lastRewardTimestamp","nameLocation":"1640:19:23","nodeType":"VariableDeclaration","scope":7333,"src":"1632:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1632:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7330,"mutability":"mutable","name":"accERC20PerShare","nameLocation":"1708:16:23","nodeType":"VariableDeclaration","scope":7333,"src":"1700:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1700:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7332,"mutability":"mutable","name":"totalDeposits","nameLocation":"1838:13:23","nodeType":"VariableDeclaration","scope":7333,"src":"1830:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7331,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"1374:8:23","nodeType":"StructDefinition","scope":8123,"src":"1367:507:23","visibility":"public"},{"constant":false,"functionSelector":"785e9e86","id":7336,"mutability":"mutable","name":"erc20","nameLocation":"1925:5:23","nodeType":"VariableDeclaration","scope":8123,"src":"1911:19:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":7335,"nodeType":"UserDefinedTypeName","pathNode":{"id":7334,"name":"IERC20","nameLocations":["1911:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"1911:6:23"},"referencedDeclaration":1466,"src":"1911:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"5c76ca2d","id":7338,"mutability":"mutable","name":"paidOut","nameLocation":"1995:7:23","nodeType":"VariableDeclaration","scope":8123,"src":"1980:22:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1980:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8f10369a","id":7340,"mutability":"mutable","name":"rewardPerSecond","nameLocation":"2058:15:23","nodeType":"VariableDeclaration","scope":8123,"src":"2043:30:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7339,"name":"uint256","nodeType":"ElementaryTypeName","src":"2043:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"0e15561a","id":7342,"mutability":"mutable","name":"totalRewards","nameLocation":"2147:12:23","nodeType":"VariableDeclaration","scope":8123,"src":"2132:27:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2132:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"1526fe27","id":7346,"mutability":"mutable","name":"poolInfo","nameLocation":"2202:8:23","nodeType":"VariableDeclaration","scope":8123,"src":"2184:26:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo[]"},"typeName":{"baseType":{"id":7344,"nodeType":"UserDefinedTypeName","pathNode":{"id":7343,"name":"PoolInfo","nameLocations":["2184:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7333,"src":"2184:8:23"},"referencedDeclaration":7333,"src":"2184:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"}},"id":7345,"nodeType":"ArrayTypeName","src":"2184:10:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage_ptr","typeString":"struct FarmingC2N.PoolInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"93f1a40b","id":7353,"mutability":"mutable","name":"userInfo","nameLocation":"2363:8:23","nodeType":"VariableDeclaration","scope":8123,"src":"2307:64:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo))"},"typeName":{"id":7352,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2315:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2307:48:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7351,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7348,"name":"address","nodeType":"ElementaryTypeName","src":"2334:7:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2326:28:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$","typeString":"mapping(address => struct FarmingC2N.UserInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7350,"nodeType":"UserDefinedTypeName","pathNode":{"id":7349,"name":"UserInfo","nameLocations":["2345:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7321,"src":"2345:8:23"},"referencedDeclaration":7321,"src":"2345:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"17caf6f1","id":7355,"mutability":"mutable","name":"totalAllocPoint","nameLocation":"2415:15:23","nodeType":"VariableDeclaration","scope":8123,"src":"2400:30:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7354,"name":"uint256","nodeType":"ElementaryTypeName","src":"2400:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e6fd48bc","id":7357,"mutability":"mutable","name":"startTimestamp","nameLocation":"2480:14:23","nodeType":"VariableDeclaration","scope":8123,"src":"2465:29:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2465:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a85adeab","id":7359,"mutability":"mutable","name":"endTimestamp","nameLocation":"2543:12:23","nodeType":"VariableDeclaration","scope":8123,"src":"2528:27:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2528:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","id":7367,"name":"Deposit","nameLocation":"2587:7:23","nodeType":"EventDefinition","parameters":{"id":7366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7361,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2611:4:23","nodeType":"VariableDeclaration","scope":7367,"src":"2595:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7360,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7363,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"2633:3:23","nodeType":"VariableDeclaration","scope":7367,"src":"2617:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2617:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7365,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2646:6:23","nodeType":"VariableDeclaration","scope":7367,"src":"2638:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7364,"name":"uint256","nodeType":"ElementaryTypeName","src":"2638:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2594:59:23"},"src":"2581:73:23"},{"anonymous":false,"eventSelector":"f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568","id":7375,"name":"Withdraw","nameLocation":"2665:8:23","nodeType":"EventDefinition","parameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7369,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2690:4:23","nodeType":"VariableDeclaration","scope":7375,"src":"2674:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7368,"name":"address","nodeType":"ElementaryTypeName","src":"2674:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7371,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"2712:3:23","nodeType":"VariableDeclaration","scope":7375,"src":"2696:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2696:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7373,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2725:6:23","nodeType":"VariableDeclaration","scope":7375,"src":"2717:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7372,"name":"uint256","nodeType":"ElementaryTypeName","src":"2717:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2673:59:23"},"src":"2659:74:23"},{"anonymous":false,"eventSelector":"bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595","id":7383,"name":"EmergencyWithdraw","nameLocation":"2744:17:23","nodeType":"EventDefinition","parameters":{"id":7382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7377,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2778:4:23","nodeType":"VariableDeclaration","scope":7383,"src":"2762:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7376,"name":"address","nodeType":"ElementaryTypeName","src":"2762:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7379,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"2800:3:23","nodeType":"VariableDeclaration","scope":7383,"src":"2784:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2784:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7381,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2813:6:23","nodeType":"VariableDeclaration","scope":7383,"src":"2805:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2805:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2761:59:23"},"src":"2738:83:23"},{"body":{"id":7413,"nodeType":"Block","src":"2934:157:23","statements":[{"expression":{"id":7399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7397,"name":"erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"2944:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7398,"name":"_erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7386,"src":"2952:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"src":"2944:14:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":7400,"nodeType":"ExpressionStatement","src":"2944:14:23"},{"expression":{"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7401,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"2968:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7402,"name":"_rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7388,"src":"2986:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2968:34:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7404,"nodeType":"ExpressionStatement","src":"2968:34:23"},{"expression":{"id":7407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7405,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"3012:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7406,"name":"_startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"3029:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3012:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7408,"nodeType":"ExpressionStatement","src":"3012:32:23"},{"expression":{"id":7411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7409,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"3054:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7410,"name":"_startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7390,"src":"3069:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3054:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7412,"nodeType":"ExpressionStatement","src":"3054:30:23"}]},"id":7414,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":7393,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2920:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:23","memberName":"sender","nodeType":"MemberAccess","src":"2920:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7395,"kind":"baseConstructorSpecifier","modifierName":{"id":7392,"name":"Ownable","nameLocations":["2912:7:23"],"nodeType":"IdentifierPath","referencedDeclaration":642,"src":"2912:7:23"},"nodeType":"ModifierInvocation","src":"2912:19:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"_erc20","nameLocation":"2853:6:23","nodeType":"VariableDeclaration","scope":7414,"src":"2846:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":7385,"nodeType":"UserDefinedTypeName","pathNode":{"id":7384,"name":"IERC20","nameLocations":["2846:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"2846:6:23"},"referencedDeclaration":1466,"src":"2846:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7388,"mutability":"mutable","name":"_rewardPerSecond","nameLocation":"2869:16:23","nodeType":"VariableDeclaration","scope":7414,"src":"2861:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2861:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7390,"mutability":"mutable","name":"_startTimestamp","nameLocation":"2895:15:23","nodeType":"VariableDeclaration","scope":7414,"src":"2887:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7389,"name":"uint256","nodeType":"ElementaryTypeName","src":"2887:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2845:66:23"},"returnParameters":{"id":7396,"nodeType":"ParameterList","parameters":[],"src":"2934:0:23"},"scope":8123,"src":"2834:257:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7422,"nodeType":"Block","src":"3177:39:23","statements":[{"expression":{"expression":{"id":7419,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"3194:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":7420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3203:6:23","memberName":"length","nodeType":"MemberAccess","src":"3194:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7418,"id":7421,"nodeType":"Return","src":"3187:22:23"}]},"functionSelector":"081e3eda","id":7423,"implemented":true,"kind":"function","modifiers":[],"name":"poolLength","nameLocation":"3132:10:23","nodeType":"FunctionDefinition","parameters":{"id":7415,"nodeType":"ParameterList","parameters":[],"src":"3142:2:23"},"returnParameters":{"id":7418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7417,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7423,"src":"3168:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7416,"name":"uint256","nodeType":"ElementaryTypeName","src":"3168:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3167:9:23"},"scope":8123,"src":"3123:93:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7463,"nodeType":"Block","src":"3305:265:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7429,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3323:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3329:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"3323:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7431,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"3341:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3323:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f736564","id":7433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3355:36:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0","typeString":"literal_string \"fund: too late, the farm is closed\""},"value":"fund: too late, the farm is closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0","typeString":"literal_string \"fund: too late, the farm is closed\""}],"id":7428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3315:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3315:77:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7435,"nodeType":"ExpressionStatement","src":"3315:77:23"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7441,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3433:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3437:6:23","memberName":"sender","nodeType":"MemberAccess","src":"3433:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3425:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7439,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:23","typeDescriptions":{}}},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7446,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3454:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FarmingC2N_$8123","typeString":"contract FarmingC2N"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FarmingC2N_$8123","typeString":"contract FarmingC2N"}],"id":7445,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3446:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7444,"name":"address","nodeType":"ElementaryTypeName","src":"3446:7:23","typeDescriptions":{}}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3446:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7448,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"3461:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7436,"name":"erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"3402:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":7438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3408:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1564,"src":"3402:22:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:67:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7450,"nodeType":"ExpressionStatement","src":"3402:67:23"},{"expression":{"id":7455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7451,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"3479:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7452,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"3495:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7453,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"3503:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3495:23:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3479:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7456,"nodeType":"ExpressionStatement","src":"3479:39:23"},{"expression":{"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7457,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"3528:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7458,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7342,"src":"3543:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7459,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7425,"src":"3556:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3543:20:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3528:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7462,"nodeType":"ExpressionStatement","src":"3528:35:23"}]},"functionSelector":"ca1d209d","id":7464,"implemented":true,"kind":"function","modifiers":[],"name":"fund","nameLocation":"3276:4:23","nodeType":"FunctionDefinition","parameters":{"id":7426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7425,"mutability":"mutable","name":"_amount","nameLocation":"3289:7:23","nodeType":"VariableDeclaration","scope":7464,"src":"3281:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7424,"name":"uint256","nodeType":"ElementaryTypeName","src":"3281:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3280:17:23"},"returnParameters":{"id":7427,"nodeType":"ParameterList","parameters":[],"src":"3305:0:23"},"scope":8123,"src":"3267:303:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7511,"nodeType":"Block","src":"3817:452:23","statements":[{"condition":{"id":7476,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7471,"src":"3831:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7481,"nodeType":"IfStatement","src":"3827:59:23","trueBody":{"id":7480,"nodeType":"Block","src":"3844:42:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7477,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"3858:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3858:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7479,"nodeType":"ExpressionStatement","src":"3858:17:23"}]}},{"assignments":[7483],"declarations":[{"constant":false,"id":7483,"mutability":"mutable","name":"lastRewardTimestamp","nameLocation":"3903:19:23","nodeType":"VariableDeclaration","scope":7511,"src":"3895:27:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7482,"name":"uint256","nodeType":"ElementaryTypeName","src":"3895:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7492,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7484,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3925:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3931:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"3925:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7486,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"3943:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3925:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7490,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"3978:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3925:67:23","trueExpression":{"expression":{"id":7488,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3960:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3966:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"3960:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3895:97:23"},{"expression":{"id":7497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7493,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"4002:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7494,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"4020:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7495,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"4036:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4020:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4002:45:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7498,"nodeType":"ExpressionStatement","src":"4002:45:23"},{"expression":{"arguments":[{"arguments":[{"id":7503,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7469,"src":"4100:8:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},{"id":7504,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7466,"src":"4131:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7505,"name":"lastRewardTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"4174:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":7506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4222:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4249:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7502,"name":"PoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7333,"src":"4071:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$7333_storage_ptr_$","typeString":"type(struct FarmingC2N.PoolInfo storage pointer)"}},"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4090:7:23","4118:10:23","4152:19:23","4203:16:23","4233:13:23"],"names":["lpToken","allocPoint","lastRewardTimestamp","accERC20PerShare","totalDeposits"],"nodeType":"FunctionCall","src":"4071:190:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_memory_ptr","typeString":"struct FarmingC2N.PoolInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolInfo_$7333_memory_ptr","typeString":"struct FarmingC2N.PoolInfo memory"}],"expression":{"id":7499,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"4057:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":7501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4066:4:23","memberName":"push","nodeType":"MemberAccess","src":"4057:13:23","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$7333_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage_ptr_$","typeString":"function (struct FarmingC2N.PoolInfo storage ref[] storage pointer,struct FarmingC2N.PoolInfo storage ref)"}},"id":7509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4057:205:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7510,"nodeType":"ExpressionStatement","src":"4057:205:23"}]},"functionSelector":"1eaaa045","id":7512,"implemented":true,"kind":"function","modifiers":[{"id":7474,"kind":"modifierInvocation","modifierName":{"id":7473,"name":"onlyOwner","nameLocations":["3807:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":553,"src":"3807:9:23"},"nodeType":"ModifierInvocation","src":"3807:9:23"}],"name":"add","nameLocation":"3740:3:23","nodeType":"FunctionDefinition","parameters":{"id":7472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7466,"mutability":"mutable","name":"_allocPoint","nameLocation":"3752:11:23","nodeType":"VariableDeclaration","scope":7512,"src":"3744:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7465,"name":"uint256","nodeType":"ElementaryTypeName","src":"3744:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7469,"mutability":"mutable","name":"_lpToken","nameLocation":"3772:8:23","nodeType":"VariableDeclaration","scope":7512,"src":"3765:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":7468,"nodeType":"UserDefinedTypeName","pathNode":{"id":7467,"name":"IERC20","nameLocations":["3765:6:23"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"3765:6:23"},"referencedDeclaration":1466,"src":"3765:6:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":7471,"mutability":"mutable","name":"_withUpdate","nameLocation":"3787:11:23","nodeType":"VariableDeclaration","scope":7512,"src":"3782:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7470,"name":"bool","nodeType":"ElementaryTypeName","src":"3782:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:56:23"},"returnParameters":{"id":7475,"nodeType":"ParameterList","parameters":[],"src":"3817:0:23"},"scope":8123,"src":"3731:538:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7547,"nodeType":"Block","src":"4446:205:23","statements":[{"condition":{"id":7523,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7518,"src":"4460:11:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7528,"nodeType":"IfStatement","src":"4456:59:23","trueBody":{"id":7527,"nodeType":"Block","src":"4473:42:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":7524,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7736,"src":"4487:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4487:17:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7526,"nodeType":"ExpressionStatement","src":"4487:17:23"}]}},{"expression":{"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7529,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"4524:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7530,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"4542:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":7531,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"4558:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":7533,"indexExpression":{"id":7532,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"4567:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4558:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage","typeString":"struct FarmingC2N.PoolInfo storage ref"}},"id":7534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4573:10:23","memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"4558:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4542:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7536,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"4584:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4542:53:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4524:71:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7539,"nodeType":"ExpressionStatement","src":"4524:71:23"},{"expression":{"id":7545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7540,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"4605:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":7542,"indexExpression":{"id":7541,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7514,"src":"4614:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4605:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage","typeString":"struct FarmingC2N.PoolInfo storage ref"}},"id":7543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4620:10:23","memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"4605:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7544,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"4633:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4605:39:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7546,"nodeType":"ExpressionStatement","src":"4605:39:23"}]},"functionSelector":"64482f79","id":7548,"implemented":true,"kind":"function","modifiers":[{"id":7521,"kind":"modifierInvocation","modifierName":{"id":7520,"name":"onlyOwner","nameLocations":["4436:9:23"],"nodeType":"IdentifierPath","referencedDeclaration":553,"src":"4436:9:23"},"nodeType":"ModifierInvocation","src":"4436:9:23"}],"name":"set","nameLocation":"4372:3:23","nodeType":"FunctionDefinition","parameters":{"id":7519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7514,"mutability":"mutable","name":"_pid","nameLocation":"4384:4:23","nodeType":"VariableDeclaration","scope":7548,"src":"4376:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7513,"name":"uint256","nodeType":"ElementaryTypeName","src":"4376:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7516,"mutability":"mutable","name":"_allocPoint","nameLocation":"4398:11:23","nodeType":"VariableDeclaration","scope":7548,"src":"4390:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7515,"name":"uint256","nodeType":"ElementaryTypeName","src":"4390:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7518,"mutability":"mutable","name":"_withUpdate","nameLocation":"4416:11:23","nodeType":"VariableDeclaration","scope":7548,"src":"4411:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7517,"name":"bool","nodeType":"ElementaryTypeName","src":"4411:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4375:53:23"},"returnParameters":{"id":7522,"nodeType":"ParameterList","parameters":[],"src":"4446:0:23"},"scope":8123,"src":"4363:288:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7569,"nodeType":"Block","src":"4790:90:23","statements":[{"assignments":[7559],"declarations":[{"constant":false,"id":7559,"mutability":"mutable","name":"user","nameLocation":"4817:4:23","nodeType":"VariableDeclaration","scope":7569,"src":"4800:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"},"typeName":{"id":7558,"nodeType":"UserDefinedTypeName","pathNode":{"id":7557,"name":"UserInfo","nameLocations":["4800:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7321,"src":"4800:8:23"},"referencedDeclaration":7321,"src":"4800:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"}},"visibility":"internal"}],"id":7565,"initialValue":{"baseExpression":{"baseExpression":{"id":7560,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"4824:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"}},"id":7562,"indexExpression":{"id":7561,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"4833:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4824:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$","typeString":"mapping(address => struct FarmingC2N.UserInfo storage ref)"}},"id":7564,"indexExpression":{"id":7563,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7552,"src":"4839:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4824:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage","typeString":"struct FarmingC2N.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4800:45:23"},{"expression":{"expression":{"id":7566,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7559,"src":"4862:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4867:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"4862:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7556,"id":7568,"nodeType":"Return","src":"4855:18:23"}]},"functionSelector":"a2383106","id":7570,"implemented":true,"kind":"function","modifiers":[],"name":"deposited","nameLocation":"4719:9:23","nodeType":"FunctionDefinition","parameters":{"id":7553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7550,"mutability":"mutable","name":"_pid","nameLocation":"4737:4:23","nodeType":"VariableDeclaration","scope":7570,"src":"4729:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7549,"name":"uint256","nodeType":"ElementaryTypeName","src":"4729:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7552,"mutability":"mutable","name":"_user","nameLocation":"4751:5:23","nodeType":"VariableDeclaration","scope":7570,"src":"4743:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7551,"name":"address","nodeType":"ElementaryTypeName","src":"4743:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4728:29:23"},"returnParameters":{"id":7556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7570,"src":"4781:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7554,"name":"uint256","nodeType":"ElementaryTypeName","src":"4781:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4780:9:23"},"scope":8123,"src":"4710:170:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7676,"nodeType":"Block","src":"5019:833:23","statements":[{"assignments":[7581],"declarations":[{"constant":false,"id":7581,"mutability":"mutable","name":"pool","nameLocation":"5046:4:23","nodeType":"VariableDeclaration","scope":7676,"src":"5029:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"},"typeName":{"id":7580,"nodeType":"UserDefinedTypeName","pathNode":{"id":7579,"name":"PoolInfo","nameLocations":["5029:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7333,"src":"5029:8:23"},"referencedDeclaration":7333,"src":"5029:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"}},"visibility":"internal"}],"id":7585,"initialValue":{"baseExpression":{"id":7582,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"5053:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":7584,"indexExpression":{"id":7583,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"5062:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5053:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage","typeString":"struct FarmingC2N.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5029:38:23"},{"assignments":[7588],"declarations":[{"constant":false,"id":7588,"mutability":"mutable","name":"user","nameLocation":"5094:4:23","nodeType":"VariableDeclaration","scope":7676,"src":"5077:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"},"typeName":{"id":7587,"nodeType":"UserDefinedTypeName","pathNode":{"id":7586,"name":"UserInfo","nameLocations":["5077:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7321,"src":"5077:8:23"},"referencedDeclaration":7321,"src":"5077:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"}},"visibility":"internal"}],"id":7594,"initialValue":{"baseExpression":{"baseExpression":{"id":7589,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"5101:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"}},"id":7591,"indexExpression":{"id":7590,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"5110:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5101:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$","typeString":"mapping(address => struct FarmingC2N.UserInfo storage ref)"}},"id":7593,"indexExpression":{"id":7592,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7574,"src":"5116:5:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5101:21:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage","typeString":"struct FarmingC2N.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5077:45:23"},{"assignments":[7596],"declarations":[{"constant":false,"id":7596,"mutability":"mutable","name":"accERC20PerShare","nameLocation":"5140:16:23","nodeType":"VariableDeclaration","scope":7676,"src":"5132:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7595,"name":"uint256","nodeType":"ElementaryTypeName","src":"5132:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7599,"initialValue":{"expression":{"id":7597,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"5159:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5164:16:23","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"5159:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5132:48:23"},{"assignments":[7601],"declarations":[{"constant":false,"id":7601,"mutability":"mutable","name":"lpSupply","nameLocation":"5199:8:23","nodeType":"VariableDeclaration","scope":7676,"src":"5191:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7600,"name":"uint256","nodeType":"ElementaryTypeName","src":"5191:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7604,"initialValue":{"expression":{"id":7602,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"5210:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5215:13:23","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"5210:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5191:37:23"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7605,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5243:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5249:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"5243:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":7607,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"5261:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5266:19:23","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"5261:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5243:42:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7610,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"5289:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5301:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5289:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5243:59:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7665,"nodeType":"IfStatement","src":"5239:541:23","trueBody":{"id":7664,"nodeType":"Block","src":"5304:476:23","statements":[{"assignments":[7615],"declarations":[{"constant":false,"id":7615,"mutability":"mutable","name":"lastTimestamp","nameLocation":"5326:13:23","nodeType":"VariableDeclaration","scope":7664,"src":"5318:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7614,"name":"uint256","nodeType":"ElementaryTypeName","src":"5318:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7624,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7616,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5342:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5348:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"5342:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7618,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"5360:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7622,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"5393:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5342:63:23","trueExpression":{"expression":{"id":7620,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5375:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5381:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"5375:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5318:87:23"},{"assignments":[7626],"declarations":[{"constant":false,"id":7626,"mutability":"mutable","name":"timestampToCompare","nameLocation":"5427:18:23","nodeType":"VariableDeclaration","scope":7664,"src":"5419:26:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7625,"name":"uint256","nodeType":"ElementaryTypeName","src":"5419:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7635,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7627,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"5448:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5453:19:23","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"5448:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7629,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"5475:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:39:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7633,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"5517:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"5448:81:23","trueExpression":{"expression":{"id":7631,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"5490:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5495:19:23","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"5490:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5419:110:23"},{"assignments":[7637],"declarations":[{"constant":false,"id":7637,"mutability":"mutable","name":"nrOfSeconds","nameLocation":"5551:11:23","nodeType":"VariableDeclaration","scope":7664,"src":"5543:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7636,"name":"uint256","nodeType":"ElementaryTypeName","src":"5543:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7641,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7638,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"5565:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7639,"name":"timestampToCompare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7626,"src":"5579:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5565:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5543:54:23"},{"assignments":[7643],"declarations":[{"constant":false,"id":7643,"mutability":"mutable","name":"erc20Reward","nameLocation":"5619:11:23","nodeType":"VariableDeclaration","scope":7664,"src":"5611:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7642,"name":"uint256","nodeType":"ElementaryTypeName","src":"5611:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7652,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7644,"name":"nrOfSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7637,"src":"5633:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7645,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"5645:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5633:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7647,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7581,"src":"5661:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5666:10:23","memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"5661:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5633:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7650,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"5677:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5633:59:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5611:81:23"},{"expression":{"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7653,"name":"accERC20PerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"5706:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7654,"name":"accERC20PerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"5725:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7655,"name":"erc20Reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7643,"src":"5743:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653336","id":7656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5755:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"5743:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7658,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7601,"src":"5760:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5743:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7660,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5742:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5725:44:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5706:63:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7663,"nodeType":"ExpressionStatement","src":"5706:63:23"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7666,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"5796:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7667,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5801:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"5796:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7668,"name":"accERC20PerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7596,"src":"5808:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5796:28:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":7670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5825:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"5796:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7672,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"5830:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5835:10:23","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":7320,"src":"5830:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5796:49:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7578,"id":7675,"nodeType":"Return","src":"5789:56:23"}]},"functionSelector":"e4c75c27","id":7677,"implemented":true,"kind":"function","modifiers":[],"name":"pending","nameLocation":"4950:7:23","nodeType":"FunctionDefinition","parameters":{"id":7575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"_pid","nameLocation":"4966:4:23","nodeType":"VariableDeclaration","scope":7677,"src":"4958:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7571,"name":"uint256","nodeType":"ElementaryTypeName","src":"4958:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7574,"mutability":"mutable","name":"_user","nameLocation":"4980:5:23","nodeType":"VariableDeclaration","scope":7677,"src":"4972:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7573,"name":"address","nodeType":"ElementaryTypeName","src":"4972:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4957:29:23"},"returnParameters":{"id":7578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7577,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7677,"src":"5010:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7576,"name":"uint256","nodeType":"ElementaryTypeName","src":"5010:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5009:9:23"},"scope":8123,"src":"4941:911:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7710,"nodeType":"Block","src":"5981:259:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7682,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5995:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"5995:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":7684,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"6014:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5995:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7689,"nodeType":"IfStatement","src":"5991:72:23","trueBody":{"id":7688,"nodeType":"Block","src":"6030:33:23","statements":[{"expression":{"hexValue":"30","id":7686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6051:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7681,"id":7687,"nodeType":"Return","src":"6044:8:23"}]}},{"assignments":[7691],"declarations":[{"constant":false,"id":7691,"mutability":"mutable","name":"lastTimestamp","nameLocation":"6081:13:23","nodeType":"VariableDeclaration","scope":7710,"src":"6073:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7690,"name":"uint256","nodeType":"ElementaryTypeName","src":"6073:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7700,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7692,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6097:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6103:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"6097:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7694,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"6115:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6097:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7698,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"6148:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6097:63:23","trueExpression":{"expression":{"id":7696,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6130:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6136:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"6130:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6073:87:23"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7701,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"6177:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7702,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7691,"src":"6194:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7703,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"6210:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6194:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6193:32:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6177:48:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7707,"name":"paidOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"6226:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6177:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7681,"id":7709,"nodeType":"Return","src":"6170:63:23"}]},"functionSelector":"3f90916a","id":7711,"implemented":true,"kind":"function","modifiers":[],"name":"totalPending","nameLocation":"5934:12:23","nodeType":"FunctionDefinition","parameters":{"id":7678,"nodeType":"ParameterList","parameters":[],"src":"5946:2:23"},"returnParameters":{"id":7681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7680,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7711,"src":"5972:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7679,"name":"uint256","nodeType":"ElementaryTypeName","src":"5972:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5971:9:23"},"scope":8123,"src":"5925:315:23","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7735,"nodeType":"Block","src":"6354:141:23","statements":[{"assignments":[7715],"declarations":[{"constant":false,"id":7715,"mutability":"mutable","name":"length","nameLocation":"6372:6:23","nodeType":"VariableDeclaration","scope":7735,"src":"6364:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7714,"name":"uint256","nodeType":"ElementaryTypeName","src":"6364:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7718,"initialValue":{"expression":{"id":7716,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"6381:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6390:6:23","memberName":"length","nodeType":"MemberAccess","src":"6381:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6364:32:23"},{"body":{"id":7733,"nodeType":"Block","src":"6449:40:23","statements":[{"expression":{"arguments":[{"id":7730,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"6474:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7729,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7822,"src":"6463:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6463:15:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7732,"nodeType":"ExpressionStatement","src":"6463:15:23"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7723,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"6428:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7724,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7715,"src":"6434:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6428:12:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7734,"initializationExpression":{"assignments":[7720],"declarations":[{"constant":false,"id":7720,"mutability":"mutable","name":"pid","nameLocation":"6419:3:23","nodeType":"VariableDeclaration","scope":7734,"src":"6411:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7719,"name":"uint256","nodeType":"ElementaryTypeName","src":"6411:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7722,"initialValue":{"hexValue":"30","id":7721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6425:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6411:15:23"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6442:5:23","subExpression":{"id":7726,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7720,"src":"6444:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7728,"nodeType":"ExpressionStatement","src":"6442:5:23"},"nodeType":"ForStatement","src":"6406:83:23"}]},"functionSelector":"630b5ba1","id":7736,"implemented":true,"kind":"function","modifiers":[],"name":"massUpdatePools","nameLocation":"6329:15:23","nodeType":"FunctionDefinition","parameters":{"id":7712,"nodeType":"ParameterList","parameters":[],"src":"6344:2:23"},"returnParameters":{"id":7713,"nodeType":"ParameterList","parameters":[],"src":"6354:0:23"},"scope":8123,"src":"6320:175:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7821,"nodeType":"Block","src":"6609:697:23","statements":[{"assignments":[7743],"declarations":[{"constant":false,"id":7743,"mutability":"mutable","name":"pool","nameLocation":"6636:4:23","nodeType":"VariableDeclaration","scope":7821,"src":"6619:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"},"typeName":{"id":7742,"nodeType":"UserDefinedTypeName","pathNode":{"id":7741,"name":"PoolInfo","nameLocations":["6619:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7333,"src":"6619:8:23"},"referencedDeclaration":7333,"src":"6619:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"}},"visibility":"internal"}],"id":7747,"initialValue":{"baseExpression":{"id":7744,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"6643:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":7746,"indexExpression":{"id":7745,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7738,"src":"6652:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6643:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage","typeString":"struct FarmingC2N.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6619:38:23"},{"assignments":[7749],"declarations":[{"constant":false,"id":7749,"mutability":"mutable","name":"lastTimestamp","nameLocation":"6675:13:23","nodeType":"VariableDeclaration","scope":7821,"src":"6667:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7748,"name":"uint256","nodeType":"ElementaryTypeName","src":"6667:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7758,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7750,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6691:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6697:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"6691:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7752,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"6709:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6691:30:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":7756,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7359,"src":"6742:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6691:63:23","trueExpression":{"expression":{"id":7754,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6724:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6730:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"6724:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6667:87:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7759,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"6769:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":7760,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"6786:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6791:19:23","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"6786:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6769:41:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7765,"nodeType":"IfStatement","src":"6765:78:23","trueBody":{"id":7764,"nodeType":"Block","src":"6812:31:23","statements":[{"functionReturnParameters":7740,"id":7763,"nodeType":"Return","src":"6826:7:23"}]}},{"assignments":[7767],"declarations":[{"constant":false,"id":7767,"mutability":"mutable","name":"lpSupply","nameLocation":"6860:8:23","nodeType":"VariableDeclaration","scope":7821,"src":"6852:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7766,"name":"uint256","nodeType":"ElementaryTypeName","src":"6852:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7770,"initialValue":{"expression":{"id":7768,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"6871:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6876:13:23","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"6871:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6852:37:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7771,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"6904:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6916:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6904:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7782,"nodeType":"IfStatement","src":"6900:104:23","trueBody":{"id":7781,"nodeType":"Block","src":"6919:85:23","statements":[{"expression":{"id":7778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7774,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"6933:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6938:19:23","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"6933:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7777,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"6960:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:40:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7779,"nodeType":"ExpressionStatement","src":"6933:40:23"},{"functionReturnParameters":7740,"id":7780,"nodeType":"Return","src":"6987:7:23"}]}},{"assignments":[7784],"declarations":[{"constant":false,"id":7784,"mutability":"mutable","name":"nrOfSeconds","nameLocation":"7022:11:23","nodeType":"VariableDeclaration","scope":7821,"src":"7014:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7783,"name":"uint256","nodeType":"ElementaryTypeName","src":"7014:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7789,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7785,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7749,"src":"7036:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7786,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"7050:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7055:19:23","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"7050:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7036:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7014:60:23"},{"assignments":[7791],"declarations":[{"constant":false,"id":7791,"mutability":"mutable","name":"erc20Reward","nameLocation":"7092:11:23","nodeType":"VariableDeclaration","scope":7821,"src":"7084:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7790,"name":"uint256","nodeType":"ElementaryTypeName","src":"7084:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7800,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7792,"name":"nrOfSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7784,"src":"7106:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7793,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7340,"src":"7118:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7106:27:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7795,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"7134:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7796,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7139:10:23","memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":7326,"src":"7134:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7106:43:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7798,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7355,"src":"7150:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7106:59:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7084:81:23"},{"expression":{"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7801,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"7176:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7803,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7181:16:23","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"7176:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7804,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"7200:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7205:16:23","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"7200:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7806,"name":"erc20Reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7791,"src":"7222:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653336","id":7807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7234:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"7222:16:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7809,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7767,"src":"7239:8:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7222:25:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7200:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7176:71:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7813,"nodeType":"ExpressionStatement","src":"7176:71:23"},{"expression":{"id":7819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7814,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7743,"src":"7257:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7816,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7262:19:23","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":7328,"src":"7257:24:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7817,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7284:5:23","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7290:9:23","memberName":"timestamp","nodeType":"MemberAccess","src":"7284:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7257:42:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7820,"nodeType":"ExpressionStatement","src":"7257:42:23"}]},"functionSelector":"51eb05a6","id":7822,"implemented":true,"kind":"function","modifiers":[],"name":"updatePool","nameLocation":"6577:10:23","nodeType":"FunctionDefinition","parameters":{"id":7739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7738,"mutability":"mutable","name":"_pid","nameLocation":"6596:4:23","nodeType":"VariableDeclaration","scope":7822,"src":"6588:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7737,"name":"uint256","nodeType":"ElementaryTypeName","src":"6588:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6587:14:23"},"returnParameters":{"id":7740,"nodeType":"ParameterList","parameters":[],"src":"6609:0:23"},"scope":8123,"src":"6568:738:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7929,"nodeType":"Block","src":"7422:631:23","statements":[{"assignments":[7831],"declarations":[{"constant":false,"id":7831,"mutability":"mutable","name":"pool","nameLocation":"7449:4:23","nodeType":"VariableDeclaration","scope":7929,"src":"7432:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"},"typeName":{"id":7830,"nodeType":"UserDefinedTypeName","pathNode":{"id":7829,"name":"PoolInfo","nameLocations":["7432:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7333,"src":"7432:8:23"},"referencedDeclaration":7333,"src":"7432:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"}},"visibility":"internal"}],"id":7835,"initialValue":{"baseExpression":{"id":7832,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"7456:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":7834,"indexExpression":{"id":7833,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"7465:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7456:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage","typeString":"struct FarmingC2N.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7432:38:23"},{"assignments":[7838],"declarations":[{"constant":false,"id":7838,"mutability":"mutable","name":"user","nameLocation":"7497:4:23","nodeType":"VariableDeclaration","scope":7929,"src":"7480:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"},"typeName":{"id":7837,"nodeType":"UserDefinedTypeName","pathNode":{"id":7836,"name":"UserInfo","nameLocations":["7480:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7321,"src":"7480:8:23"},"referencedDeclaration":7321,"src":"7480:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"}},"visibility":"internal"}],"id":7845,"initialValue":{"baseExpression":{"baseExpression":{"id":7839,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"7504:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"}},"id":7841,"indexExpression":{"id":7840,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"7513:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7504:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$","typeString":"mapping(address => struct FarmingC2N.UserInfo storage ref)"}},"id":7844,"indexExpression":{"expression":{"id":7842,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7519:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7523:6:23","memberName":"sender","nodeType":"MemberAccess","src":"7519:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7504:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage","typeString":"struct FarmingC2N.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7480:50:23"},{"expression":{"arguments":[{"id":7847,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"7552:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7846,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7822,"src":"7541:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7541:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7849,"nodeType":"ExpressionStatement","src":"7541:16:23"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7850,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"7572:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7577:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"7572:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7586:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7572:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7874,"nodeType":"IfStatement","src":"7568:178:23","trueBody":{"id":7873,"nodeType":"Block","src":"7589:157:23","statements":[{"assignments":[7855],"declarations":[{"constant":false,"id":7855,"mutability":"mutable","name":"pendingAmount","nameLocation":"7611:13:23","nodeType":"VariableDeclaration","scope":7873,"src":"7603:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7854,"name":"uint256","nodeType":"ElementaryTypeName","src":"7603:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7866,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7856,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"7627:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7632:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"7627:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7858,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"7639:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7859,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7644:16:23","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"7639:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7627:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":7861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7661:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"7627:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7863,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"7666:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7671:10:23","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":7320,"src":"7666:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7627:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7603:78:23"},{"expression":{"arguments":[{"expression":{"id":7868,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7709:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7713:6:23","memberName":"sender","nodeType":"MemberAccess","src":"7709:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7870,"name":"pendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7855,"src":"7721:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7867,"name":"erc20Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"7695:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7695:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7872,"nodeType":"ExpressionStatement","src":"7695:40:23"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":7882,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7794:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7798:6:23","memberName":"sender","nodeType":"MemberAccess","src":"7794:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7786:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7880,"name":"address","nodeType":"ElementaryTypeName","src":"7786:7:23","typeDescriptions":{}}},"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7786:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":7887,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7815:4:23","typeDescriptions":{"typeIdentifier":"t_contract$_FarmingC2N_$8123","typeString":"contract FarmingC2N"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_FarmingC2N_$8123","typeString":"contract FarmingC2N"}],"id":7886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7807:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7885,"name":"address","nodeType":"ElementaryTypeName","src":"7807:7:23","typeDescriptions":{}}},"id":7888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7807:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7889,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"7822:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":7875,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"7756:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7761:7:23","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7324,"src":"7756:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":7879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7769:16:23","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1564,"src":"7756:29:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7756:74:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7891,"nodeType":"ExpressionStatement","src":"7756:74:23"},{"expression":{"id":7899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7892,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"7840:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7845:13:23","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"7840:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7895,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"7861:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7866:13:23","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"7861:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7897,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"7880:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7861:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7840:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7900,"nodeType":"ExpressionStatement","src":"7840:47:23"},{"expression":{"id":7908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7901,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"7898:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7903:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"7898:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7904,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"7912:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"7912:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7906,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"7924:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7912:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7898:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7909,"nodeType":"ExpressionStatement","src":"7898:33:23"},{"expression":{"id":7920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7910,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"7941:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7912,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7946:10:23","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":7320,"src":"7941:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7913,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"7959:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7914,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7964:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"7959:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7915,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7831,"src":"7971:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7976:16:23","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"7971:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7959:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":7918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7993:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"7959:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7941:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7921,"nodeType":"ExpressionStatement","src":"7941:56:23"},{"eventCall":{"arguments":[{"expression":{"id":7923,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8020:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8024:6:23","memberName":"sender","nodeType":"MemberAccess","src":"8020:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7925,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"8032:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7926,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7826,"src":"8038:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7922,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"8012:7:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":7927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8012:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7928,"nodeType":"EmitStatement","src":"8007:39:23"}]},"functionSelector":"e2bbb158","id":7930,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"7376:7:23","nodeType":"FunctionDefinition","parameters":{"id":7827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7824,"mutability":"mutable","name":"_pid","nameLocation":"7392:4:23","nodeType":"VariableDeclaration","scope":7930,"src":"7384:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7823,"name":"uint256","nodeType":"ElementaryTypeName","src":"7384:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7826,"mutability":"mutable","name":"_amount","nameLocation":"7406:7:23","nodeType":"VariableDeclaration","scope":7930,"src":"7398:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7825,"name":"uint256","nodeType":"ElementaryTypeName","src":"7398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7383:31:23"},"returnParameters":{"id":7828,"nodeType":"ParameterList","parameters":[],"src":"7422:0:23"},"scope":8123,"src":"7367:686:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8035,"nodeType":"Block","src":"8208:701:23","statements":[{"assignments":[7939],"declarations":[{"constant":false,"id":7939,"mutability":"mutable","name":"pool","nameLocation":"8235:4:23","nodeType":"VariableDeclaration","scope":8035,"src":"8218:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"},"typeName":{"id":7938,"nodeType":"UserDefinedTypeName","pathNode":{"id":7937,"name":"PoolInfo","nameLocations":["8218:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7333,"src":"8218:8:23"},"referencedDeclaration":7333,"src":"8218:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"}},"visibility":"internal"}],"id":7943,"initialValue":{"baseExpression":{"id":7940,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"8242:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":7942,"indexExpression":{"id":7941,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"8251:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8242:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage","typeString":"struct FarmingC2N.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8218:38:23"},{"assignments":[7946],"declarations":[{"constant":false,"id":7946,"mutability":"mutable","name":"user","nameLocation":"8283:4:23","nodeType":"VariableDeclaration","scope":8035,"src":"8266:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"},"typeName":{"id":7945,"nodeType":"UserDefinedTypeName","pathNode":{"id":7944,"name":"UserInfo","nameLocations":["8266:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7321,"src":"8266:8:23"},"referencedDeclaration":7321,"src":"8266:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"}},"visibility":"internal"}],"id":7953,"initialValue":{"baseExpression":{"baseExpression":{"id":7947,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"8290:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"}},"id":7949,"indexExpression":{"id":7948,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"8299:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8290:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$","typeString":"mapping(address => struct FarmingC2N.UserInfo storage ref)"}},"id":7952,"indexExpression":{"expression":{"id":7950,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8305:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8309:6:23","memberName":"sender","nodeType":"MemberAccess","src":"8305:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8290:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage","typeString":"struct FarmingC2N.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8266:50:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7955,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"8334:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7956,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8339:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"8334:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":7957,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"8349:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8334:22:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77697468647261773a2063616e2774207769746864726177206d6f7265207468616e206465706f736974","id":7959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8358:44:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2","typeString":"literal_string \"withdraw: can't withdraw more than deposit\""},"value":"withdraw: can't withdraw more than deposit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2","typeString":"literal_string \"withdraw: can't withdraw more than deposit\""}],"id":7954,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8326:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8326:77:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7961,"nodeType":"ExpressionStatement","src":"8326:77:23"},{"expression":{"arguments":[{"id":7963,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"8424:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7962,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7822,"src":"8413:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":7964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8413:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7965,"nodeType":"ExpressionStatement","src":"8413:16:23"},{"assignments":[7967],"declarations":[{"constant":false,"id":7967,"mutability":"mutable","name":"pendingAmount","nameLocation":"8472:13:23","nodeType":"VariableDeclaration","scope":8035,"src":"8464:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7966,"name":"uint256","nodeType":"ElementaryTypeName","src":"8464:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7978,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7968,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"8488:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7969,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8493:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"8488:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7970,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7939,"src":"8500:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":7971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8505:16:23","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"8500:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8488:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":7973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8522:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"8488:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":7975,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"8527:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8532:10:23","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":7320,"src":"8527:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8488:54:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8464:78:23"},{"expression":{"arguments":[{"expression":{"id":7980,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8567:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8571:6:23","memberName":"sender","nodeType":"MemberAccess","src":"8567:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7982,"name":"pendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7967,"src":"8579:13:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7979,"name":"erc20Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8122,"src":"8553:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7984,"nodeType":"ExpressionStatement","src":"8553:40:23"},{"expression":{"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7985,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"8603:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8608:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"8603:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7988,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"8617:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8622:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"8617:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7990,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"8629:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8617:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8603:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7993,"nodeType":"ExpressionStatement","src":"8603:33:23"},{"expression":{"id":8004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":7994,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"8646:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7996,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8651:10:23","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":7320,"src":"8646:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":7997,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7946,"src":"8664:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":7998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8669:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"8664:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":7999,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7939,"src":"8676:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":8000,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8681:16:23","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"8676:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8664:33:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":8002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8698:4:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"8664:38:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8646:56:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8005,"nodeType":"ExpressionStatement","src":"8646:56:23"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8013,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8773:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8777:6:23","memberName":"sender","nodeType":"MemberAccess","src":"8773:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8765:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8011,"name":"address","nodeType":"ElementaryTypeName","src":"8765:7:23","typeDescriptions":{}}},"id":8015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8016,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"8786:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":8006,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7939,"src":"8739:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":8009,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8744:7:23","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7324,"src":"8739:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8752:12:23","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"8739:25:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8739:55:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8018,"nodeType":"ExpressionStatement","src":"8739:55:23"},{"expression":{"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8019,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7939,"src":"8804:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":8021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8809:13:23","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"8804:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8022,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7939,"src":"8825:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":8023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8830:13:23","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"8825:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8024,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"8844:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8825:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8804:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8027,"nodeType":"ExpressionStatement","src":"8804:47:23"},{"eventCall":{"arguments":[{"expression":{"id":8029,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8876:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8880:6:23","memberName":"sender","nodeType":"MemberAccess","src":"8876:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8031,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"8888:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8032,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7934,"src":"8894:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8028,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7375,"src":"8867:8:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8867:35:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8034,"nodeType":"EmitStatement","src":"8862:40:23"}]},"functionSelector":"441a3e70","id":8036,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"8161:8:23","nodeType":"FunctionDefinition","parameters":{"id":7935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7932,"mutability":"mutable","name":"_pid","nameLocation":"8178:4:23","nodeType":"VariableDeclaration","scope":8036,"src":"8170:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7931,"name":"uint256","nodeType":"ElementaryTypeName","src":"8170:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7934,"mutability":"mutable","name":"_amount","nameLocation":"8192:7:23","nodeType":"VariableDeclaration","scope":8036,"src":"8184:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7933,"name":"uint256","nodeType":"ElementaryTypeName","src":"8184:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8169:31:23"},"returnParameters":{"id":7936,"nodeType":"ParameterList","parameters":[],"src":"8208:0:23"},"scope":8123,"src":"8152:757:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8102,"nodeType":"Block","src":"9025:362:23","statements":[{"assignments":[8043],"declarations":[{"constant":false,"id":8043,"mutability":"mutable","name":"pool","nameLocation":"9052:4:23","nodeType":"VariableDeclaration","scope":8102,"src":"9035:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"},"typeName":{"id":8042,"nodeType":"UserDefinedTypeName","pathNode":{"id":8041,"name":"PoolInfo","nameLocations":["9035:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7333,"src":"9035:8:23"},"referencedDeclaration":7333,"src":"9035:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo"}},"visibility":"internal"}],"id":8047,"initialValue":{"baseExpression":{"id":8044,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"9059:8:23","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$7333_storage_$dyn_storage","typeString":"struct FarmingC2N.PoolInfo storage ref[] storage ref"}},"id":8046,"indexExpression":{"id":8045,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"9068:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9059:14:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage","typeString":"struct FarmingC2N.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9035:38:23"},{"assignments":[8050],"declarations":[{"constant":false,"id":8050,"mutability":"mutable","name":"user","nameLocation":"9100:4:23","nodeType":"VariableDeclaration","scope":8102,"src":"9083:21:23","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"},"typeName":{"id":8049,"nodeType":"UserDefinedTypeName","pathNode":{"id":8048,"name":"UserInfo","nameLocations":["9083:8:23"],"nodeType":"IdentifierPath","referencedDeclaration":7321,"src":"9083:8:23"},"referencedDeclaration":7321,"src":"9083:8:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo"}},"visibility":"internal"}],"id":8057,"initialValue":{"baseExpression":{"baseExpression":{"id":8051,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7353,"src":"9107:8:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo storage ref))"}},"id":8053,"indexExpression":{"id":8052,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"9116:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9107:14:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$7321_storage_$","typeString":"mapping(address => struct FarmingC2N.UserInfo storage ref)"}},"id":8056,"indexExpression":{"expression":{"id":8054,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9122:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9126:6:23","memberName":"sender","nodeType":"MemberAccess","src":"9122:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9107:26:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage","typeString":"struct FarmingC2N.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9083:50:23"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8065,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9177:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9181:6:23","memberName":"sender","nodeType":"MemberAccess","src":"9177:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9169:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8063,"name":"address","nodeType":"ElementaryTypeName","src":"9169:7:23","typeDescriptions":{}}},"id":8067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9169:19:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":8068,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"9190:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":8069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9195:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"9190:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":8058,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"9143:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":8061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9148:7:23","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":7324,"src":"9143:12:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9156:12:23","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"9143:25:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,uint256)"}},"id":8070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9143:59:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8071,"nodeType":"ExpressionStatement","src":"9143:59:23"},{"expression":{"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8072,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"9212:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":8074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9217:13:23","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"9212:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8075,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"9233:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$7333_storage_ptr","typeString":"struct FarmingC2N.PoolInfo storage pointer"}},"id":8076,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9238:13:23","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"9233:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8077,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"9252:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":8078,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9257:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"9252:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9233:30:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9212:51:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8081,"nodeType":"ExpressionStatement","src":"9212:51:23"},{"eventCall":{"arguments":[{"expression":{"id":8083,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9296:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9300:6:23","memberName":"sender","nodeType":"MemberAccess","src":"9296:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8085,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8038,"src":"9308:4:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8086,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"9314:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":8087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9319:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"9314:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8082,"name":"EmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"9278:17:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:48:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8089,"nodeType":"EmitStatement","src":"9273:53:23"},{"expression":{"id":8094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8090,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"9336:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":8092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9341:6:23","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":7318,"src":"9336:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9350:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9336:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8095,"nodeType":"ExpressionStatement","src":"9336:15:23"},{"expression":{"id":8100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8096,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8050,"src":"9361:4:23","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$7321_storage_ptr","typeString":"struct FarmingC2N.UserInfo storage pointer"}},"id":8098,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9366:10:23","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":7320,"src":"9361:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":8099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9379:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9361:19:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8101,"nodeType":"ExpressionStatement","src":"9361:19:23"}]},"functionSelector":"5312ea8e","id":8103,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyWithdraw","nameLocation":"8986:17:23","nodeType":"FunctionDefinition","parameters":{"id":8039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8038,"mutability":"mutable","name":"_pid","nameLocation":"9012:4:23","nodeType":"VariableDeclaration","scope":8103,"src":"9004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8037,"name":"uint256","nodeType":"ElementaryTypeName","src":"9004:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9003:14:23"},"returnParameters":{"id":8040,"nodeType":"ParameterList","parameters":[],"src":"9025:0:23"},"scope":8123,"src":"8977:410:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8121,"nodeType":"Block","src":"9529:73:23","statements":[{"expression":{"arguments":[{"id":8113,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8105,"src":"9554:3:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8114,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8107,"src":"9559:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8110,"name":"erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7336,"src":"9539:5:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":8112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9545:8:23","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1433,"src":"9539:14:23","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":8115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9539:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8116,"nodeType":"ExpressionStatement","src":"9539:28:23"},{"expression":{"id":8119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8117,"name":"paidOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7338,"src":"9577:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":8118,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8107,"src":"9588:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9577:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8120,"nodeType":"ExpressionStatement","src":"9577:18:23"}]},"id":8122,"implemented":true,"kind":"function","modifiers":[],"name":"erc20Transfer","nameLocation":"9476:13:23","nodeType":"FunctionDefinition","parameters":{"id":8108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8105,"mutability":"mutable","name":"_to","nameLocation":"9498:3:23","nodeType":"VariableDeclaration","scope":8122,"src":"9490:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8104,"name":"address","nodeType":"ElementaryTypeName","src":"9490:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8107,"mutability":"mutable","name":"_amount","nameLocation":"9511:7:23","nodeType":"VariableDeclaration","scope":8122,"src":"9503:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8106,"name":"uint256","nodeType":"ElementaryTypeName","src":"9503:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9489:30:23"},"returnParameters":{"id":8109,"nodeType":"ParameterList","parameters":[],"src":"9529:0:23"},"scope":8123,"src":"9467:135:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":8124,"src":"466:9138:23","usedErrors":[508,513,1504],"usedEvents":[519,7367,7375,7383]}],"src":"32:9573:23"},"id":23},"contracts/interfaces/IAdmin.sol":{"ast":{"absolutePath":"contracts/interfaces/IAdmin.sol","exportedSymbols":{"IAdmin":[8133]},"id":8134,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":8125,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:24"},{"abstract":false,"baseContracts":[],"canonicalName":"IAdmin","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8133,"linearizedBaseContracts":[8133],"name":"IAdmin","nameLocation":"73:6:24","nodeType":"ContractDefinition","nodes":[{"functionSelector":"24d7806c","id":8132,"implemented":false,"kind":"function","modifiers":[],"name":"isAdmin","nameLocation":"95:7:24","nodeType":"FunctionDefinition","parameters":{"id":8128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8127,"mutability":"mutable","name":"user","nameLocation":"111:4:24","nodeType":"VariableDeclaration","scope":8132,"src":"103:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8126,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:14:24"},"returnParameters":{"id":8131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8132,"src":"140:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8129,"name":"bool","nodeType":"ElementaryTypeName","src":"140:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"139:6:24"},"scope":8133,"src":"86:60:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8134,"src":"63:85:24","usedErrors":[],"usedEvents":[]}],"src":"38:111:24"},"id":24},"contracts/interfaces/IAllocationStaking.sol":{"ast":{"absolutePath":"contracts/interfaces/IAllocationStaking.sol","exportedSymbols":{"IAllocationStaking":[8154]},"id":8155,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":8135,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IAllocationStaking","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8154,"linearizedBaseContracts":[8154],"name":"IAllocationStaking","nameLocation":"73:18:25","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a2383106","id":8144,"implemented":false,"kind":"function","modifiers":[],"name":"deposited","nameLocation":"107:9:25","nodeType":"FunctionDefinition","parameters":{"id":8140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8137,"mutability":"mutable","name":"_pid","nameLocation":"125:4:25","nodeType":"VariableDeclaration","scope":8144,"src":"117:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8136,"name":"uint256","nodeType":"ElementaryTypeName","src":"117:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8139,"mutability":"mutable","name":"_user","nameLocation":"139:5:25","nodeType":"VariableDeclaration","scope":8144,"src":"131:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8138,"name":"address","nodeType":"ElementaryTypeName","src":"131:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"116:29:25"},"returnParameters":{"id":8143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8144,"src":"169:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8141,"name":"uint256","nodeType":"ElementaryTypeName","src":"169:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"168:9:25"},"scope":8154,"src":"98:80:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"e6f04acc","id":8153,"implemented":false,"kind":"function","modifiers":[],"name":"setTokensUnlockTime","nameLocation":"192:19:25","nodeType":"FunctionDefinition","parameters":{"id":8151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8146,"mutability":"mutable","name":"_pid","nameLocation":"220:4:25","nodeType":"VariableDeclaration","scope":8153,"src":"212:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8145,"name":"uint256","nodeType":"ElementaryTypeName","src":"212:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8148,"mutability":"mutable","name":"_user","nameLocation":"234:5:25","nodeType":"VariableDeclaration","scope":8153,"src":"226:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8147,"name":"address","nodeType":"ElementaryTypeName","src":"226:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8150,"mutability":"mutable","name":"_tokensUnlockTime","nameLocation":"249:17:25","nodeType":"VariableDeclaration","scope":8153,"src":"241:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8149,"name":"uint256","nodeType":"ElementaryTypeName","src":"241:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"211:56:25"},"returnParameters":{"id":8152,"nodeType":"ParameterList","parameters":[],"src":"276:0:25"},"scope":8154,"src":"183:94:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8155,"src":"63:217:25","usedErrors":[],"usedEvents":[]}],"src":"38:243:25"},"id":25},"contracts/interfaces/ISalesFactory.sol":{"ast":{"absolutePath":"contracts/interfaces/ISalesFactory.sol","exportedSymbols":{"ISalesFactory":[8171]},"id":8172,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":8156,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:26"},{"abstract":false,"baseContracts":[],"canonicalName":"ISalesFactory","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":8171,"linearizedBaseContracts":[8171],"name":"ISalesFactory","nameLocation":"73:13:26","nodeType":"ContractDefinition","nodes":[{"functionSelector":"4c0ec736","id":8163,"implemented":false,"kind":"function","modifiers":[],"name":"setSaleOwnerAndToken","nameLocation":"102:20:26","nodeType":"FunctionDefinition","parameters":{"id":8161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8158,"mutability":"mutable","name":"saleOwner","nameLocation":"131:9:26","nodeType":"VariableDeclaration","scope":8163,"src":"123:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8157,"name":"address","nodeType":"ElementaryTypeName","src":"123:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8160,"mutability":"mutable","name":"saleToken","nameLocation":"150:9:26","nodeType":"VariableDeclaration","scope":8163,"src":"142:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8159,"name":"address","nodeType":"ElementaryTypeName","src":"142:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"122:38:26"},"returnParameters":{"id":8162,"nodeType":"ParameterList","parameters":[],"src":"169:0:26"},"scope":8171,"src":"93:77:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a00249e8","id":8170,"implemented":false,"kind":"function","modifiers":[],"name":"isSaleCreatedThroughFactory","nameLocation":"184:27:26","nodeType":"FunctionDefinition","parameters":{"id":8166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8165,"mutability":"mutable","name":"sale","nameLocation":"220:4:26","nodeType":"VariableDeclaration","scope":8170,"src":"212:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8164,"name":"address","nodeType":"ElementaryTypeName","src":"212:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"211:14:26"},"returnParameters":{"id":8169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8170,"src":"249:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8167,"name":"bool","nodeType":"ElementaryTypeName","src":"249:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"248:6:26"},"scope":8171,"src":"175:80:26","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":8172,"src":"63:194:26","usedErrors":[],"usedEvents":[]}],"src":"38:220:26"},"id":26},"contracts/sales/AllocationStaking.sol":{"ast":{"absolutePath":"contracts/sales/AllocationStaking.sol","exportedSymbols":{"AllocationStaking":[9297],"Context":[1931],"ContextUpgradeable":[494],"IERC1363":[724],"IERC20":[1466],"ISalesFactory":[8171],"Initializable":[448],"OwnableUpgradeable":[194],"SafeERC20":[1901]},"id":9298,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":8173,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:27"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":8174,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9298,"sourceUnit":1467,"src":"63:56:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":8175,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9298,"sourceUnit":1902,"src":"120:65:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","id":8176,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9298,"sourceUnit":195,"src":"186:75:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISalesFactory.sol","file":"../interfaces/ISalesFactory.sol","id":8177,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9298,"sourceUnit":8172,"src":"262:41:27","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"@openzeppelin/contracts/utils/Context.sol","id":8178,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9298,"sourceUnit":1932,"src":"304:51:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8179,"name":"OwnableUpgradeable","nameLocations":["387:18:27"],"nodeType":"IdentifierPath","referencedDeclaration":194,"src":"387:18:27"},"id":8180,"nodeType":"InheritanceSpecifier","src":"387:18:27"}],"canonicalName":"AllocationStaking","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":9297,"linearizedBaseContracts":[9297,194,494,448],"name":"AllocationStaking","nameLocation":"366:17:27","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8184,"libraryName":{"id":8181,"name":"SafeERC20","nameLocations":["418:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"418:9:27"},"nodeType":"UsingForDirective","src":"412:27:27","typeName":{"id":8183,"nodeType":"UserDefinedTypeName","pathNode":{"id":8182,"name":"IERC20","nameLocations":["432:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"432:6:27"},"referencedDeclaration":1466,"src":"432:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}}},{"canonicalName":"AllocationStaking.UserInfo","id":8194,"members":[{"constant":false,"id":8186,"mutability":"mutable","name":"amount","nameLocation":"505:6:27","nodeType":"VariableDeclaration","scope":8194,"src":"497:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8185,"name":"uint256","nodeType":"ElementaryTypeName","src":"497:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8188,"mutability":"mutable","name":"rewardDebt","nameLocation":"578:10:27","nodeType":"VariableDeclaration","scope":8194,"src":"570:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8187,"name":"uint256","nodeType":"ElementaryTypeName","src":"570:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8190,"mutability":"mutable","name":"tokensUnlockTime","nameLocation":"1309:16:27","nodeType":"VariableDeclaration","scope":8194,"src":"1301:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8189,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8193,"mutability":"mutable","name":"salesRegistered","nameLocation":"1419:15:27","nodeType":"VariableDeclaration","scope":8194,"src":"1408:26:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":8191,"name":"address","nodeType":"ElementaryTypeName","src":"1408:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":8192,"nodeType":"ArrayTypeName","src":"1408:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"UserInfo","nameLocation":"478:8:27","nodeType":"StructDefinition","scope":9297,"src":"471:970:27","visibility":"public"},{"canonicalName":"AllocationStaking.PoolInfo","id":8206,"members":[{"constant":false,"id":8197,"mutability":"mutable","name":"lpToken","nameLocation":"1506:7:27","nodeType":"VariableDeclaration","scope":8206,"src":"1499:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":8196,"nodeType":"UserDefinedTypeName","pathNode":{"id":8195,"name":"IERC20","nameLocations":["1499:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"1499:6:27"},"referencedDeclaration":1466,"src":"1499:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8199,"mutability":"mutable","name":"allocPoint","nameLocation":"1576:10:27","nodeType":"VariableDeclaration","scope":8206,"src":"1568:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8198,"name":"uint256","nodeType":"ElementaryTypeName","src":"1568:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8201,"mutability":"mutable","name":"lastRewardTimestamp","nameLocation":"1697:19:27","nodeType":"VariableDeclaration","scope":8206,"src":"1689:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8200,"name":"uint256","nodeType":"ElementaryTypeName","src":"1689:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8203,"mutability":"mutable","name":"accERC20PerShare","nameLocation":"1787:16:27","nodeType":"VariableDeclaration","scope":8206,"src":"1779:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8205,"mutability":"mutable","name":"totalDeposits","nameLocation":"1868:13:27","nodeType":"VariableDeclaration","scope":8206,"src":"1860:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8204,"name":"uint256","nodeType":"ElementaryTypeName","src":"1860:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"PoolInfo","nameLocation":"1480:8:27","nodeType":"StructDefinition","scope":9297,"src":"1473:474:27","visibility":"public"},{"constant":false,"functionSelector":"785e9e86","id":8209,"mutability":"mutable","name":"erc20","nameLocation":"2012:5:27","nodeType":"VariableDeclaration","scope":9297,"src":"1998:19:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":8208,"nodeType":"UserDefinedTypeName","pathNode":{"id":8207,"name":"IERC20","nameLocations":["1998:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"1998:6:27"},"referencedDeclaration":1466,"src":"1998:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"5c76ca2d","id":8211,"mutability":"mutable","name":"paidOut","nameLocation":"2098:7:27","nodeType":"VariableDeclaration","scope":9297,"src":"2083:22:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8210,"name":"uint256","nodeType":"ElementaryTypeName","src":"2083:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8f10369a","id":8213,"mutability":"mutable","name":"rewardPerSecond","nameLocation":"2167:15:27","nodeType":"VariableDeclaration","scope":9297,"src":"2152:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2152:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"0e15561a","id":8215,"mutability":"mutable","name":"totalRewards","nameLocation":"2238:12:27","nodeType":"VariableDeclaration","scope":9297,"src":"2223:27:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8214,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ed95f07f","id":8218,"mutability":"mutable","name":"salesFactory","nameLocation":"2318:12:27","nodeType":"VariableDeclaration","scope":9297,"src":"2297:33:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"},"typeName":{"id":8217,"nodeType":"UserDefinedTypeName","pathNode":{"id":8216,"name":"ISalesFactory","nameLocations":["2297:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":8171,"src":"2297:13:27"},"referencedDeclaration":8171,"src":"2297:13:27","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"visibility":"public"},{"constant":false,"functionSelector":"1526fe27","id":8222,"mutability":"mutable","name":"poolInfo","nameLocation":"2380:8:27","nodeType":"VariableDeclaration","scope":9297,"src":"2362:26:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo[]"},"typeName":{"baseType":{"id":8220,"nodeType":"UserDefinedTypeName","pathNode":{"id":8219,"name":"PoolInfo","nameLocations":["2362:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8206,"src":"2362:8:27"},"referencedDeclaration":8206,"src":"2362:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"}},"id":8221,"nodeType":"ArrayTypeName","src":"2362:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage_ptr","typeString":"struct AllocationStaking.PoolInfo[]"}},"visibility":"public"},{"constant":false,"functionSelector":"93f1a40b","id":8229,"mutability":"mutable","name":"userInfo","nameLocation":"2498:8:27","nodeType":"VariableDeclaration","scope":9297,"src":"2442:64:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo))"},"typeName":{"id":8228,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8223,"name":"uint256","nodeType":"ElementaryTypeName","src":"2450:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"2442:48:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8227,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8224,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2461:28:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$","typeString":"mapping(address => struct AllocationStaking.UserInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8226,"nodeType":"UserDefinedTypeName","pathNode":{"id":8225,"name":"UserInfo","nameLocations":["2480:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"2480:8:27"},"referencedDeclaration":8194,"src":"2480:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"}}}},"visibility":"public"},{"constant":false,"functionSelector":"17caf6f1","id":8231,"mutability":"mutable","name":"totalAllocPoint","nameLocation":"2614:15:27","nodeType":"VariableDeclaration","scope":9297,"src":"2599:30:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8230,"name":"uint256","nodeType":"ElementaryTypeName","src":"2599:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e6fd48bc","id":8233,"mutability":"mutable","name":"startTimestamp","nameLocation":"2693:14:27","nodeType":"VariableDeclaration","scope":9297,"src":"2678:29:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2678:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a85adeab","id":8235,"mutability":"mutable","name":"endTimestamp","nameLocation":"2768:12:27","nodeType":"VariableDeclaration","scope":9297,"src":"2753:27:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8234,"name":"uint256","nodeType":"ElementaryTypeName","src":"2753:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15","id":8243,"name":"Deposit","nameLocation":"2807:7:27","nodeType":"EventDefinition","parameters":{"id":8242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8237,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2831:4:27","nodeType":"VariableDeclaration","scope":8243,"src":"2815:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8236,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8239,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"2853:3:27","nodeType":"VariableDeclaration","scope":8243,"src":"2837:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2837:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8241,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2866:6:27","nodeType":"VariableDeclaration","scope":8243,"src":"2858:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8240,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2814:59:27"},"src":"2801:73:27"},{"anonymous":false,"eventSelector":"f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568","id":8251,"name":"Withdraw","nameLocation":"2885:8:27","nodeType":"EventDefinition","parameters":{"id":8250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8245,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2910:4:27","nodeType":"VariableDeclaration","scope":8251,"src":"2894:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8244,"name":"address","nodeType":"ElementaryTypeName","src":"2894:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8247,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"2932:3:27","nodeType":"VariableDeclaration","scope":8251,"src":"2916:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8246,"name":"uint256","nodeType":"ElementaryTypeName","src":"2916:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8249,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2945:6:27","nodeType":"VariableDeclaration","scope":8251,"src":"2937:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8248,"name":"uint256","nodeType":"ElementaryTypeName","src":"2937:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2893:59:27"},"src":"2879:74:27"},{"anonymous":false,"eventSelector":"bb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595","id":8259,"name":"EmergencyWithdraw","nameLocation":"2964:17:27","nodeType":"EventDefinition","parameters":{"id":8258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8253,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2998:4:27","nodeType":"VariableDeclaration","scope":8259,"src":"2982:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8252,"name":"address","nodeType":"ElementaryTypeName","src":"2982:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8255,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"3020:3:27","nodeType":"VariableDeclaration","scope":8259,"src":"3004:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8254,"name":"uint256","nodeType":"ElementaryTypeName","src":"3004:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8257,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3033:6:27","nodeType":"VariableDeclaration","scope":8259,"src":"3025:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8256,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2981:59:27"},"src":"2958:83:27"},{"anonymous":false,"eventSelector":"92f0bdf80f3916a4279540865e94ef327cf48639092106cca4bddc9bb1de4a86","id":8269,"name":"CompoundedEarnings","nameLocation":"3052:18:27","nodeType":"EventDefinition","parameters":{"id":8268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8261,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3087:4:27","nodeType":"VariableDeclaration","scope":8269,"src":"3071:20:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8260,"name":"address","nodeType":"ElementaryTypeName","src":"3071:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8263,"indexed":true,"mutability":"mutable","name":"pid","nameLocation":"3109:3:27","nodeType":"VariableDeclaration","scope":8269,"src":"3093:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8262,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8265,"indexed":false,"mutability":"mutable","name":"amountAdded","nameLocation":"3122:11:27","nodeType":"VariableDeclaration","scope":8269,"src":"3114:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8264,"name":"uint256","nodeType":"ElementaryTypeName","src":"3114:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8267,"indexed":false,"mutability":"mutable","name":"totalDeposited","nameLocation":"3143:14:27","nodeType":"VariableDeclaration","scope":8269,"src":"3135:22:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8266,"name":"uint256","nodeType":"ElementaryTypeName","src":"3135:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3070:88:27"},"src":"3046:113:27"},{"body":{"id":8281,"nodeType":"Block","src":"3240:126:27","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":8274,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3299:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3303:6:27","memberName":"sender","nodeType":"MemberAccess","src":"3299:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8272,"name":"salesFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"3258:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"id":8273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3271:27:27","memberName":"isSaleCreatedThroughFactory","nodeType":"MemberAccess","referencedDeclaration":8170,"src":"3258:40:27","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":8276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:52:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616c65206e6f742063726561746564207468726f75676820666163746f72792e","id":8277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3312:35:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_f95e2b94b64afe2d9116800b91afd89844f4c614e9be6f53796fc62d9ae9798e","typeString":"literal_string \"Sale not created through factory.\""},"value":"Sale not created through factory."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f95e2b94b64afe2d9116800b91afd89844f4c614e9be6f53796fc62d9ae9798e","typeString":"literal_string \"Sale not created through factory.\""}],"id":8271,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3250:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3250:98:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8279,"nodeType":"ExpressionStatement","src":"3250:98:27"},{"id":8280,"nodeType":"PlaceholderStatement","src":"3358:1:27"}]},"id":8282,"name":"onlyVerifiedSales","nameLocation":"3222:17:27","nodeType":"ModifierDefinition","parameters":{"id":8270,"nodeType":"ParameterList","parameters":[],"src":"3240:0:27"},"src":"3213:153:27","virtual":false,"visibility":"internal"},{"body":{"id":8323,"nodeType":"Block","src":"3546:290:27","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":8297,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":476,"src":"3571:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":8298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3571:12:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8296,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"3556:14:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":8299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3556:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8300,"nodeType":"ExpressionStatement","src":"3556:28:27"},{"expression":{"id":8303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8301,"name":"erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"3595:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8302,"name":"_erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8285,"src":"3603:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"src":"3595:14:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":8304,"nodeType":"ExpressionStatement","src":"3595:14:27"},{"expression":{"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8305,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"3619:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8306,"name":"_rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8287,"src":"3637:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3619:34:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8308,"nodeType":"ExpressionStatement","src":"3619:34:27"},{"expression":{"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8309,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"3663:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8310,"name":"_startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"3680:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3663:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8312,"nodeType":"ExpressionStatement","src":"3663:32:27"},{"expression":{"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8313,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"3705:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8314,"name":"_startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8289,"src":"3720:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3705:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8316,"nodeType":"ExpressionStatement","src":"3705:30:27"},{"expression":{"id":8321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8317,"name":"salesFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"3786:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8319,"name":"_salesFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8291,"src":"3815:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8318,"name":"ISalesFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"3801:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISalesFactory_$8171_$","typeString":"type(contract ISalesFactory)"}},"id":8320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3801:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"src":"3786:43:27","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"id":8322,"nodeType":"ExpressionStatement","src":"3786:43:27"}]},"functionSelector":"9e3d87cd","id":8324,"implemented":true,"kind":"function","modifiers":[{"id":8294,"kind":"modifierInvocation","modifierName":{"id":8293,"name":"initializer","nameLocations":["3519:11:27"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"3519:11:27"},"nodeType":"ModifierInvocation","src":"3519:11:27"}],"name":"initialize","nameLocation":"3381:10:27","nodeType":"FunctionDefinition","parameters":{"id":8292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8285,"mutability":"mutable","name":"_erc20","nameLocation":"3408:6:27","nodeType":"VariableDeclaration","scope":8324,"src":"3401:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":8284,"nodeType":"UserDefinedTypeName","pathNode":{"id":8283,"name":"IERC20","nameLocations":["3401:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"3401:6:27"},"referencedDeclaration":1466,"src":"3401:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8287,"mutability":"mutable","name":"_rewardPerSecond","nameLocation":"3432:16:27","nodeType":"VariableDeclaration","scope":8324,"src":"3424:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8286,"name":"uint256","nodeType":"ElementaryTypeName","src":"3424:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8289,"mutability":"mutable","name":"_startTimestamp","nameLocation":"3466:15:27","nodeType":"VariableDeclaration","scope":8324,"src":"3458:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8288,"name":"uint256","nodeType":"ElementaryTypeName","src":"3458:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8291,"mutability":"mutable","name":"_salesFactory","nameLocation":"3499:13:27","nodeType":"VariableDeclaration","scope":8324,"src":"3491:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8290,"name":"address","nodeType":"ElementaryTypeName","src":"3491:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3391:127:27"},"returnParameters":{"id":8295,"nodeType":"ParameterList","parameters":[],"src":"3546:0:27"},"scope":9297,"src":"3372:464:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8346,"nodeType":"Block","src":"4004:106:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8332,"name":"_salesFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"4022:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4047:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4039:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8333,"name":"address","nodeType":"ElementaryTypeName","src":"4039:7:27","typeDescriptions":{}}},"id":8336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4039:10:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4022:27:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4014:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4014:36:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8339,"nodeType":"ExpressionStatement","src":"4014:36:27"},{"expression":{"id":8344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8340,"name":"salesFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8218,"src":"4060:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8342,"name":"_salesFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"4089:13:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8341,"name":"ISalesFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"4075:13:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISalesFactory_$8171_$","typeString":"type(contract ISalesFactory)"}},"id":8343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4075:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"src":"4060:43:27","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"id":8345,"nodeType":"ExpressionStatement","src":"4060:43:27"}]},"functionSelector":"3dfcb861","id":8347,"implemented":true,"kind":"function","modifiers":[{"id":8329,"kind":"modifierInvocation","modifierName":{"id":8328,"name":"onlyOwner","nameLocations":["3994:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"3994:9:27"},"nodeType":"ModifierInvocation","src":"3994:9:27"}],"name":"setSalesFactory","nameLocation":"3946:15:27","nodeType":"FunctionDefinition","parameters":{"id":8327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8326,"mutability":"mutable","name":"_salesFactory","nameLocation":"3970:13:27","nodeType":"VariableDeclaration","scope":8347,"src":"3962:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8325,"name":"address","nodeType":"ElementaryTypeName","src":"3962:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3961:23:27"},"returnParameters":{"id":8330,"nodeType":"ParameterList","parameters":[],"src":"4004:0:27"},"scope":9297,"src":"3937:173:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8355,"nodeType":"Block","src":"4196:39:27","statements":[{"expression":{"expression":{"id":8352,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"4213:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4222:6:27","memberName":"length","nodeType":"MemberAccess","src":"4213:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8351,"id":8354,"nodeType":"Return","src":"4206:22:27"}]},"functionSelector":"081e3eda","id":8356,"implemented":true,"kind":"function","modifiers":[],"name":"poolLength","nameLocation":"4151:10:27","nodeType":"FunctionDefinition","parameters":{"id":8348,"nodeType":"ParameterList","parameters":[],"src":"4161:2:27"},"returnParameters":{"id":8351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8356,"src":"4187:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8349,"name":"uint256","nodeType":"ElementaryTypeName","src":"4187:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4186:9:27"},"scope":9297,"src":"4142:93:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8396,"nodeType":"Block","src":"4324:265:27","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8362,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4342:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4348:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"4342:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8364,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"4360:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4342:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f736564","id":8366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4374:36:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0","typeString":"literal_string \"fund: too late, the farm is closed\""},"value":"fund: too late, the farm is closed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1f372f095d84d45c58f7e8158f3d68cb1e914a21f34f133fd3873670f357cd0","typeString":"literal_string \"fund: too late, the farm is closed\""}],"id":8361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4334:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4334:77:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8368,"nodeType":"ExpressionStatement","src":"4334:77:27"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8374,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4452:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4456:6:27","memberName":"sender","nodeType":"MemberAccess","src":"4452:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4444:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8372,"name":"address","nodeType":"ElementaryTypeName","src":"4444:7:27","typeDescriptions":{}}},"id":8376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4444:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8379,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4473:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AllocationStaking_$9297","typeString":"contract AllocationStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AllocationStaking_$9297","typeString":"contract AllocationStaking"}],"id":8378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4465:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8377,"name":"address","nodeType":"ElementaryTypeName","src":"4465:7:27","typeDescriptions":{}}},"id":8380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4465:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8381,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"4480:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":8369,"name":"erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"4421:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":8371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4427:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1564,"src":"4421:22:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4421:67:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8383,"nodeType":"ExpressionStatement","src":"4421:67:27"},{"expression":{"id":8388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8384,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"4498:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8385,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"4514:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8386,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"4522:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4514:23:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4498:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8389,"nodeType":"ExpressionStatement","src":"4498:39:27"},{"expression":{"id":8394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8390,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"4547:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8391,"name":"totalRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"4562:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8392,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8358,"src":"4575:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4562:20:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4547:35:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8395,"nodeType":"ExpressionStatement","src":"4547:35:27"}]},"functionSelector":"ca1d209d","id":8397,"implemented":true,"kind":"function","modifiers":[],"name":"fund","nameLocation":"4295:4:27","nodeType":"FunctionDefinition","parameters":{"id":8359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8358,"mutability":"mutable","name":"_amount","nameLocation":"4308:7:27","nodeType":"VariableDeclaration","scope":8397,"src":"4300:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8357,"name":"uint256","nodeType":"ElementaryTypeName","src":"4300:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4299:17:27"},"returnParameters":{"id":8360,"nodeType":"ParameterList","parameters":[],"src":"4324:0:27"},"scope":9297,"src":"4286:303:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8444,"nodeType":"Block","src":"4836:503:27","statements":[{"condition":{"id":8409,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"4850:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8414,"nodeType":"IfStatement","src":"4846:59:27","trueBody":{"id":8413,"nodeType":"Block","src":"4863:42:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8410,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"4877:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4877:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8412,"nodeType":"ExpressionStatement","src":"4877:17:27"}]}},{"assignments":[8416],"declarations":[{"constant":false,"id":8416,"mutability":"mutable","name":"lastRewardTimestamp","nameLocation":"4922:19:27","nodeType":"VariableDeclaration","scope":8444,"src":"4914:27:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8415,"name":"uint256","nodeType":"ElementaryTypeName","src":"4914:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8425,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8417,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4944:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4950:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"4944:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8419,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"4962:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4944:32:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8423,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"4997:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4944:67:27","trueExpression":{"expression":{"id":8421,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4979:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4985:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"4979:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4914:97:27"},{"expression":{"id":8430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8426,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"5021:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8427,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"5039:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8428,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"5055:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5039:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5021:45:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8431,"nodeType":"ExpressionStatement","src":"5021:45:27"},{"expression":{"arguments":[{"arguments":[{"id":8436,"name":"_lpToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8402,"src":"5161:8:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},{"id":8437,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8399,"src":"5192:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8438,"name":"lastRewardTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"5235:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":8439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5283:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":8440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5310:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8435,"name":"PoolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8206,"src":"5132:8:27","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolInfo_$8206_storage_ptr_$","typeString":"type(struct AllocationStaking.PoolInfo storage pointer)"}},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5151:7:27","5179:10:27","5213:19:27","5264:16:27","5294:13:27"],"names":["lpToken","allocPoint","lastRewardTimestamp","accERC20PerShare","totalDeposits"],"nodeType":"FunctionCall","src":"5132:190:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_memory_ptr","typeString":"struct AllocationStaking.PoolInfo memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_PoolInfo_$8206_memory_ptr","typeString":"struct AllocationStaking.PoolInfo memory"}],"expression":{"id":8432,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"5105:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":8434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5114:4:27","memberName":"push","nodeType":"MemberAccess","src":"5105:13:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$8206_storage_$returns$__$attached_to$_t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage_ptr_$","typeString":"function (struct AllocationStaking.PoolInfo storage ref[] storage pointer,struct AllocationStaking.PoolInfo storage ref)"}},"id":8442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5105:227:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8443,"nodeType":"ExpressionStatement","src":"5105:227:27"}]},"functionSelector":"1eaaa045","id":8445,"implemented":true,"kind":"function","modifiers":[{"id":8407,"kind":"modifierInvocation","modifierName":{"id":8406,"name":"onlyOwner","nameLocations":["4826:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"4826:9:27"},"nodeType":"ModifierInvocation","src":"4826:9:27"}],"name":"add","nameLocation":"4759:3:27","nodeType":"FunctionDefinition","parameters":{"id":8405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8399,"mutability":"mutable","name":"_allocPoint","nameLocation":"4771:11:27","nodeType":"VariableDeclaration","scope":8445,"src":"4763:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4763:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8402,"mutability":"mutable","name":"_lpToken","nameLocation":"4791:8:27","nodeType":"VariableDeclaration","scope":8445,"src":"4784:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":8401,"nodeType":"UserDefinedTypeName","pathNode":{"id":8400,"name":"IERC20","nameLocations":["4784:6:27"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"4784:6:27"},"referencedDeclaration":1466,"src":"4784:6:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":8404,"mutability":"mutable","name":"_withUpdate","nameLocation":"4806:11:27","nodeType":"VariableDeclaration","scope":8445,"src":"4801:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8403,"name":"bool","nodeType":"ElementaryTypeName","src":"4801:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4762:56:27"},"returnParameters":{"id":8408,"nodeType":"ParameterList","parameters":[],"src":"4836:0:27"},"scope":9297,"src":"4750:589:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8480,"nodeType":"Block","src":"5516:205:27","statements":[{"condition":{"id":8456,"name":"_withUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8451,"src":"5530:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8461,"nodeType":"IfStatement","src":"5526:59:27","trueBody":{"id":8460,"nodeType":"Block","src":"5543:42:27","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":8457,"name":"massUpdatePools","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8659,"src":"5557:15:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":8458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5557:17:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8459,"nodeType":"ExpressionStatement","src":"5557:17:27"}]}},{"expression":{"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8462,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"5594:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8463,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"5612:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"baseExpression":{"id":8464,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"5628:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":8466,"indexExpression":{"id":8465,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8447,"src":"5637:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5628:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage","typeString":"struct AllocationStaking.PoolInfo storage ref"}},"id":8467,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5643:10:27","memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":8199,"src":"5628:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5612:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8469,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"5654:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5612:53:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5594:71:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8472,"nodeType":"ExpressionStatement","src":"5594:71:27"},{"expression":{"id":8478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":8473,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"5675:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":8475,"indexExpression":{"id":8474,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8447,"src":"5684:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5675:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage","typeString":"struct AllocationStaking.PoolInfo storage ref"}},"id":8476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5690:10:27","memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":8199,"src":"5675:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8477,"name":"_allocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8449,"src":"5703:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5675:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8479,"nodeType":"ExpressionStatement","src":"5675:39:27"}]},"functionSelector":"64482f79","id":8481,"implemented":true,"kind":"function","modifiers":[{"id":8454,"kind":"modifierInvocation","modifierName":{"id":8453,"name":"onlyOwner","nameLocations":["5506:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":89,"src":"5506:9:27"},"nodeType":"ModifierInvocation","src":"5506:9:27"}],"name":"set","nameLocation":"5442:3:27","nodeType":"FunctionDefinition","parameters":{"id":8452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8447,"mutability":"mutable","name":"_pid","nameLocation":"5454:4:27","nodeType":"VariableDeclaration","scope":8481,"src":"5446:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8446,"name":"uint256","nodeType":"ElementaryTypeName","src":"5446:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8449,"mutability":"mutable","name":"_allocPoint","nameLocation":"5468:11:27","nodeType":"VariableDeclaration","scope":8481,"src":"5460:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8448,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8451,"mutability":"mutable","name":"_withUpdate","nameLocation":"5486:11:27","nodeType":"VariableDeclaration","scope":8481,"src":"5481:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8450,"name":"bool","nodeType":"ElementaryTypeName","src":"5481:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5445:53:27"},"returnParameters":{"id":8455,"nodeType":"ParameterList","parameters":[],"src":"5516:0:27"},"scope":9297,"src":"5433:288:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8502,"nodeType":"Block","src":"5858:90:27","statements":[{"assignments":[8492],"declarations":[{"constant":false,"id":8492,"mutability":"mutable","name":"user","nameLocation":"5885:4:27","nodeType":"VariableDeclaration","scope":8502,"src":"5868:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"},"typeName":{"id":8491,"nodeType":"UserDefinedTypeName","pathNode":{"id":8490,"name":"UserInfo","nameLocations":["5868:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"5868:8:27"},"referencedDeclaration":8194,"src":"5868:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"}},"visibility":"internal"}],"id":8498,"initialValue":{"baseExpression":{"baseExpression":{"id":8493,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"5892:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"}},"id":8495,"indexExpression":{"id":8494,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8483,"src":"5901:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5892:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$","typeString":"mapping(address => struct AllocationStaking.UserInfo storage ref)"}},"id":8497,"indexExpression":{"id":8496,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8485,"src":"5907:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5892:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage","typeString":"struct AllocationStaking.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5868:45:27"},{"expression":{"expression":{"id":8499,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8492,"src":"5930:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5935:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"5930:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8489,"id":8501,"nodeType":"Return","src":"5923:18:27"}]},"functionSelector":"a2383106","id":8503,"implemented":true,"kind":"function","modifiers":[],"name":"deposited","nameLocation":"5789:9:27","nodeType":"FunctionDefinition","parameters":{"id":8486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8483,"mutability":"mutable","name":"_pid","nameLocation":"5807:4:27","nodeType":"VariableDeclaration","scope":8503,"src":"5799:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8482,"name":"uint256","nodeType":"ElementaryTypeName","src":"5799:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8485,"mutability":"mutable","name":"_user","nameLocation":"5821:5:27","nodeType":"VariableDeclaration","scope":8503,"src":"5813:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8484,"name":"address","nodeType":"ElementaryTypeName","src":"5813:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5798:29:27"},"returnParameters":{"id":8489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8503,"src":"5849:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8487,"name":"uint256","nodeType":"ElementaryTypeName","src":"5849:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5848:9:27"},"scope":9297,"src":"5780:168:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8599,"nodeType":"Block","src":"6085:749:27","statements":[{"assignments":[8514],"declarations":[{"constant":false,"id":8514,"mutability":"mutable","name":"pool","nameLocation":"6112:4:27","nodeType":"VariableDeclaration","scope":8599,"src":"6095:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"},"typeName":{"id":8513,"nodeType":"UserDefinedTypeName","pathNode":{"id":8512,"name":"PoolInfo","nameLocations":["6095:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8206,"src":"6095:8:27"},"referencedDeclaration":8206,"src":"6095:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"}},"visibility":"internal"}],"id":8518,"initialValue":{"baseExpression":{"id":8515,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"6119:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":8517,"indexExpression":{"id":8516,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"6128:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6119:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage","typeString":"struct AllocationStaking.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6095:38:27"},{"assignments":[8521],"declarations":[{"constant":false,"id":8521,"mutability":"mutable","name":"user","nameLocation":"6160:4:27","nodeType":"VariableDeclaration","scope":8599,"src":"6143:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"},"typeName":{"id":8520,"nodeType":"UserDefinedTypeName","pathNode":{"id":8519,"name":"UserInfo","nameLocations":["6143:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"6143:8:27"},"referencedDeclaration":8194,"src":"6143:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"}},"visibility":"internal"}],"id":8527,"initialValue":{"baseExpression":{"baseExpression":{"id":8522,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"6167:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"}},"id":8524,"indexExpression":{"id":8523,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"6176:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6167:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$","typeString":"mapping(address => struct AllocationStaking.UserInfo storage ref)"}},"id":8526,"indexExpression":{"id":8525,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8507,"src":"6182:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6167:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage","typeString":"struct AllocationStaking.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6143:45:27"},{"assignments":[8529],"declarations":[{"constant":false,"id":8529,"mutability":"mutable","name":"accERC20PerShare","nameLocation":"6206:16:27","nodeType":"VariableDeclaration","scope":8599,"src":"6198:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8528,"name":"uint256","nodeType":"ElementaryTypeName","src":"6198:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8532,"initialValue":{"expression":{"id":8530,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"6225:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8531,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6230:16:27","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"6225:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6198:48:27"},{"assignments":[8534],"declarations":[{"constant":false,"id":8534,"mutability":"mutable","name":"lpSupply","nameLocation":"6265:8:27","nodeType":"VariableDeclaration","scope":8599,"src":"6257:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8533,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8537,"initialValue":{"expression":{"id":8535,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"6276:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6281:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"6276:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6257:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8538,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6343:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6349:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"6343:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":8540,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"6361:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6366:19:27","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"6361:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6343:42:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8543,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"6389:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":8544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6401:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6389:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6343:59:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8588,"nodeType":"IfStatement","src":"6339:423:27","trueBody":{"id":8587,"nodeType":"Block","src":"6404:358:27","statements":[{"assignments":[8548],"declarations":[{"constant":false,"id":8548,"mutability":"mutable","name":"lastTimestamp","nameLocation":"6426:13:27","nodeType":"VariableDeclaration","scope":8587,"src":"6418:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8547,"name":"uint256","nodeType":"ElementaryTypeName","src":"6418:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8557,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8549,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6442:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6448:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"6442:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8551,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"6460:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6442:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8555,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"6493:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6442:63:27","trueExpression":{"expression":{"id":8553,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6475:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6481:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"6475:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6418:87:27"},{"assignments":[8559],"declarations":[{"constant":false,"id":8559,"mutability":"mutable","name":"nrOfSeconds","nameLocation":"6527:11:27","nodeType":"VariableDeclaration","scope":8587,"src":"6519:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8558,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8564,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8560,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8548,"src":"6541:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8561,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"6555:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6560:19:27","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"6555:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6541:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6519:60:27"},{"assignments":[8566],"declarations":[{"constant":false,"id":8566,"mutability":"mutable","name":"erc20Reward","nameLocation":"6601:11:27","nodeType":"VariableDeclaration","scope":8587,"src":"6593:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8565,"name":"uint256","nodeType":"ElementaryTypeName","src":"6593:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8575,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8567,"name":"nrOfSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8559,"src":"6615:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8568,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"6627:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6615:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8570,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8514,"src":"6643:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8571,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6648:10:27","memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":8199,"src":"6643:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6615:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8573,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"6659:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6615:59:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6593:81:27"},{"expression":{"id":8585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8576,"name":"accERC20PerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"6688:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8577,"name":"accERC20PerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"6707:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8578,"name":"erc20Reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"6725:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653336","id":8579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6737:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"6725:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8581,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"6742:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6725:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8583,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6724:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6707:44:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6688:63:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8586,"nodeType":"ExpressionStatement","src":"6688:63:27"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8589,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8521,"src":"6778:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8590,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6783:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"6778:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8591,"name":"accERC20PerShare","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8529,"src":"6790:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6778:28:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":8593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6807:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"6778:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8595,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8521,"src":"6812:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6817:10:27","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":8188,"src":"6812:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6778:49:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8511,"id":8598,"nodeType":"Return","src":"6771:56:27"}]},"functionSelector":"e4c75c27","id":8600,"implemented":true,"kind":"function","modifiers":[],"name":"pending","nameLocation":"6018:7:27","nodeType":"FunctionDefinition","parameters":{"id":8508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8505,"mutability":"mutable","name":"_pid","nameLocation":"6034:4:27","nodeType":"VariableDeclaration","scope":8600,"src":"6026:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8504,"name":"uint256","nodeType":"ElementaryTypeName","src":"6026:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8507,"mutability":"mutable","name":"_user","nameLocation":"6048:5:27","nodeType":"VariableDeclaration","scope":8600,"src":"6040:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8506,"name":"address","nodeType":"ElementaryTypeName","src":"6040:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6025:29:27"},"returnParameters":{"id":8511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8600,"src":"6076:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8509,"name":"uint256","nodeType":"ElementaryTypeName","src":"6076:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6075:9:27"},"scope":9297,"src":"6009:825:27","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":8633,"nodeType":"Block","src":"7178:259:27","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8605,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7192:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7198:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"7192:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":8607,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"7211:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7192:33:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8612,"nodeType":"IfStatement","src":"7188:72:27","trueBody":{"id":8611,"nodeType":"Block","src":"7227:33:27","statements":[{"expression":{"hexValue":"30","id":8609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7248:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":8604,"id":8610,"nodeType":"Return","src":"7241:8:27"}]}},{"assignments":[8614],"declarations":[{"constant":false,"id":8614,"mutability":"mutable","name":"lastTimestamp","nameLocation":"7278:13:27","nodeType":"VariableDeclaration","scope":8633,"src":"7270:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8613,"name":"uint256","nodeType":"ElementaryTypeName","src":"7270:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8623,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8615,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7294:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7300:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"7294:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8617,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"7312:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7294:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8621,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"7345:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7294:63:27","trueExpression":{"expression":{"id":8619,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7327:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7333:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"7327:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7270:87:27"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8624,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"7374:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8625,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8614,"src":"7391:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8626,"name":"startTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8233,"src":"7407:14:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7391:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8628,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7390:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7374:48:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8630,"name":"paidOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"7423:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7374:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8604,"id":8632,"nodeType":"Return","src":"7367:63:27"}]},"functionSelector":"3f90916a","id":8634,"implemented":true,"kind":"function","modifiers":[],"name":"totalPending","nameLocation":"7131:12:27","nodeType":"FunctionDefinition","parameters":{"id":8601,"nodeType":"ParameterList","parameters":[],"src":"7143:2:27"},"returnParameters":{"id":8604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8634,"src":"7169:7:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8602,"name":"uint256","nodeType":"ElementaryTypeName","src":"7169:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7168:9:27"},"scope":9297,"src":"7122:315:27","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8658,"nodeType":"Block","src":"7551:141:27","statements":[{"assignments":[8638],"declarations":[{"constant":false,"id":8638,"mutability":"mutable","name":"length","nameLocation":"7569:6:27","nodeType":"VariableDeclaration","scope":8658,"src":"7561:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8637,"name":"uint256","nodeType":"ElementaryTypeName","src":"7561:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8641,"initialValue":{"expression":{"id":8639,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"7578:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":8640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7587:6:27","memberName":"length","nodeType":"MemberAccess","src":"7578:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7561:32:27"},{"body":{"id":8656,"nodeType":"Block","src":"7646:40:27","statements":[{"expression":{"arguments":[{"id":8653,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8643,"src":"7671:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8652,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8792,"src":"7660:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7660:15:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8655,"nodeType":"ExpressionStatement","src":"7660:15:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8646,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8643,"src":"7625:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8647,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"7631:6:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7625:12:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8657,"initializationExpression":{"assignments":[8643],"declarations":[{"constant":false,"id":8643,"mutability":"mutable","name":"pid","nameLocation":"7616:3:27","nodeType":"VariableDeclaration","scope":8657,"src":"7608:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8642,"name":"uint256","nodeType":"ElementaryTypeName","src":"7608:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8645,"initialValue":{"hexValue":"30","id":8644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7622:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7608:15:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7639:5:27","subExpression":{"id":8649,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8643,"src":"7641:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8651,"nodeType":"ExpressionStatement","src":"7639:5:27"},"nodeType":"ForStatement","src":"7603:83:27"}]},"functionSelector":"630b5ba1","id":8659,"implemented":true,"kind":"function","modifiers":[],"name":"massUpdatePools","nameLocation":"7526:15:27","nodeType":"FunctionDefinition","parameters":{"id":8635,"nodeType":"ParameterList","parameters":[],"src":"7541:2:27"},"returnParameters":{"id":8636,"nodeType":"ParameterList","parameters":[],"src":"7551:0:27"},"scope":9297,"src":"7517:175:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8702,"nodeType":"Block","src":"7810:336:27","statements":[{"assignments":[8672],"declarations":[{"constant":false,"id":8672,"mutability":"mutable","name":"user","nameLocation":"7837:4:27","nodeType":"VariableDeclaration","scope":8702,"src":"7820:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"},"typeName":{"id":8671,"nodeType":"UserDefinedTypeName","pathNode":{"id":8670,"name":"UserInfo","nameLocations":["7820:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"7820:8:27"},"referencedDeclaration":8194,"src":"7820:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"}},"visibility":"internal"}],"id":8678,"initialValue":{"baseExpression":{"baseExpression":{"id":8673,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"7844:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"}},"id":8675,"indexExpression":{"id":8674,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"7853:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7844:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$","typeString":"mapping(address => struct AllocationStaking.UserInfo storage ref)"}},"id":8677,"indexExpression":{"id":8676,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8663,"src":"7859:5:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7844:21:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage","typeString":"struct AllocationStaking.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7820:45:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8680,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"7937:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7942:16:27","memberName":"tokensUnlockTime","nodeType":"MemberAccess","referencedDeclaration":8190,"src":"7937:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8682,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7962:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7968:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"7962:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7937:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":8679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7929:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":8685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7929:49:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8686,"nodeType":"ExpressionStatement","src":"7929:49:27"},{"expression":{"id":8691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8687,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"7988:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7993:16:27","memberName":"tokensUnlockTime","nodeType":"MemberAccess","referencedDeclaration":8190,"src":"7988:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8690,"name":"_tokensUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8665,"src":"8012:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:41:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8692,"nodeType":"ExpressionStatement","src":"7988:41:27"},{"expression":{"arguments":[{"expression":{"id":8698,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8128:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8132:6:27","memberName":"sender","nodeType":"MemberAccess","src":"8128:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":8693,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8672,"src":"8102:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8107:15:27","memberName":"salesRegistered","nodeType":"MemberAccess","referencedDeclaration":8193,"src":"8102:20:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":8697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8123:4:27","memberName":"push","nodeType":"MemberAccess","src":"8102:25:27","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":8700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8102:37:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8701,"nodeType":"ExpressionStatement","src":"8102:37:27"}]},"functionSelector":"e6f04acc","id":8703,"implemented":true,"kind":"function","modifiers":[{"id":8668,"kind":"modifierInvocation","modifierName":{"id":8667,"name":"onlyVerifiedSales","nameLocations":["7792:17:27"],"nodeType":"IdentifierPath","referencedDeclaration":8282,"src":"7792:17:27"},"nodeType":"ModifierInvocation","src":"7792:17:27"}],"name":"setTokensUnlockTime","nameLocation":"7707:19:27","nodeType":"FunctionDefinition","parameters":{"id":8666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8661,"mutability":"mutable","name":"_pid","nameLocation":"7735:4:27","nodeType":"VariableDeclaration","scope":8703,"src":"7727:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8660,"name":"uint256","nodeType":"ElementaryTypeName","src":"7727:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8663,"mutability":"mutable","name":"_user","nameLocation":"7749:5:27","nodeType":"VariableDeclaration","scope":8703,"src":"7741:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8662,"name":"address","nodeType":"ElementaryTypeName","src":"7741:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8665,"mutability":"mutable","name":"_tokensUnlockTime","nameLocation":"7764:17:27","nodeType":"VariableDeclaration","scope":8703,"src":"7756:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8664,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7726:56:27"},"returnParameters":{"id":8669,"nodeType":"ParameterList","parameters":[],"src":"7810:0:27"},"scope":9297,"src":"7698:448:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8791,"nodeType":"Block","src":"8260:815:27","statements":[{"assignments":[8710],"declarations":[{"constant":false,"id":8710,"mutability":"mutable","name":"pool","nameLocation":"8287:4:27","nodeType":"VariableDeclaration","scope":8791,"src":"8270:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"},"typeName":{"id":8709,"nodeType":"UserDefinedTypeName","pathNode":{"id":8708,"name":"PoolInfo","nameLocations":["8270:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8206,"src":"8270:8:27"},"referencedDeclaration":8206,"src":"8270:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"}},"visibility":"internal"}],"id":8714,"initialValue":{"baseExpression":{"id":8711,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"8294:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":8713,"indexExpression":{"id":8712,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8705,"src":"8303:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8294:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage","typeString":"struct AllocationStaking.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8270:38:27"},{"assignments":[8716],"declarations":[{"constant":false,"id":8716,"mutability":"mutable","name":"lastTimestamp","nameLocation":"8327:13:27","nodeType":"VariableDeclaration","scope":8791,"src":"8319:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8715,"name":"uint256","nodeType":"ElementaryTypeName","src":"8319:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8725,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8717,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8343:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8349:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"8343:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8719,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"8361:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8343:30:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":8723,"name":"endTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8235,"src":"8394:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8343:63:27","trueExpression":{"expression":{"id":8721,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8376:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8382:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"8376:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8319:87:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8726,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"8421:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8727,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"8438:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8443:19:27","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"8438:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8421:41:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8736,"nodeType":"IfStatement","src":"8417:112:27","trueBody":{"id":8735,"nodeType":"Block","src":"8464:65:27","statements":[{"expression":{"id":8733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8730,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"8478:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":8731,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"8494:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8499:19:27","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"8494:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8478:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8734,"nodeType":"ExpressionStatement","src":"8478:40:27"}]}},{"assignments":[8738],"declarations":[{"constant":false,"id":8738,"mutability":"mutable","name":"lpSupply","nameLocation":"8547:8:27","nodeType":"VariableDeclaration","scope":8791,"src":"8539:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8737,"name":"uint256","nodeType":"ElementaryTypeName","src":"8539:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8741,"initialValue":{"expression":{"id":8739,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"8558:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8563:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"8558:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8539:37:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8742,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"8591:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8603:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8591:13:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8753,"nodeType":"IfStatement","src":"8587:104:27","trueBody":{"id":8752,"nodeType":"Block","src":"8606:85:27","statements":[{"expression":{"id":8749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8745,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"8620:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8625:19:27","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"8620:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8748,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"8647:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8620:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8750,"nodeType":"ExpressionStatement","src":"8620:40:27"},{"functionReturnParameters":8707,"id":8751,"nodeType":"Return","src":"8674:7:27"}]}},{"assignments":[8755],"declarations":[{"constant":false,"id":8755,"mutability":"mutable","name":"nrOfSeconds","nameLocation":"8709:11:27","nodeType":"VariableDeclaration","scope":8791,"src":"8701:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8754,"name":"uint256","nodeType":"ElementaryTypeName","src":"8701:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8760,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8756,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"8723:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8757,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"8737:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8758,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8742:19:27","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"8737:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8723:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8701:60:27"},{"assignments":[8762],"declarations":[{"constant":false,"id":8762,"mutability":"mutable","name":"erc20Reward","nameLocation":"8779:11:27","nodeType":"VariableDeclaration","scope":8791,"src":"8771:19:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8761,"name":"uint256","nodeType":"ElementaryTypeName","src":"8771:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8771,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8763,"name":"nrOfSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8755,"src":"8793:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":8764,"name":"rewardPerSecond","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8213,"src":"8805:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:27:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8766,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"8821:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8826:10:27","memberName":"allocPoint","nodeType":"MemberAccess","referencedDeclaration":8199,"src":"8821:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:43:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8769,"name":"totalAllocPoint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8231,"src":"8837:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8793:59:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8771:81:27"},{"expression":{"id":8783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8772,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"8903:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8774,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8908:16:27","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"8903:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8775,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"8927:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8932:16:27","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"8927:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8777,"name":"erc20Reward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8762,"src":"8949:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31653336","id":8778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8961:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"8949:16:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":8780,"name":"lpSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8738,"src":"8966:8:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8949:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8927:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8903:71:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8784,"nodeType":"ExpressionStatement","src":"8903:71:27"},{"expression":{"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8785,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8710,"src":"9028:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9033:19:27","memberName":"lastRewardTimestamp","nodeType":"MemberAccess","referencedDeclaration":8201,"src":"9028:24:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8788,"name":"lastTimestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"9055:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9028:40:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8790,"nodeType":"ExpressionStatement","src":"9028:40:27"}]},"functionSelector":"51eb05a6","id":8792,"implemented":true,"kind":"function","modifiers":[],"name":"updatePool","nameLocation":"8228:10:27","nodeType":"FunctionDefinition","parameters":{"id":8706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8705,"mutability":"mutable","name":"_pid","nameLocation":"8247:4:27","nodeType":"VariableDeclaration","scope":8792,"src":"8239:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8704,"name":"uint256","nodeType":"ElementaryTypeName","src":"8239:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8238:14:27"},"returnParameters":{"id":8707,"nodeType":"ParameterList","parameters":[],"src":"8260:0:27"},"scope":9297,"src":"8219:856:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8903,"nodeType":"Block","src":"9191:961:27","statements":[{"assignments":[8801],"declarations":[{"constant":false,"id":8801,"mutability":"mutable","name":"pool","nameLocation":"9218:4:27","nodeType":"VariableDeclaration","scope":8903,"src":"9201:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"},"typeName":{"id":8800,"nodeType":"UserDefinedTypeName","pathNode":{"id":8799,"name":"PoolInfo","nameLocations":["9201:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8206,"src":"9201:8:27"},"referencedDeclaration":8206,"src":"9201:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"}},"visibility":"internal"}],"id":8805,"initialValue":{"baseExpression":{"id":8802,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"9225:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":8804,"indexExpression":{"id":8803,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8794,"src":"9234:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9225:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage","typeString":"struct AllocationStaking.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9201:38:27"},{"assignments":[8808],"declarations":[{"constant":false,"id":8808,"mutability":"mutable","name":"user","nameLocation":"9266:4:27","nodeType":"VariableDeclaration","scope":8903,"src":"9249:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"},"typeName":{"id":8807,"nodeType":"UserDefinedTypeName","pathNode":{"id":8806,"name":"UserInfo","nameLocations":["9249:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"9249:8:27"},"referencedDeclaration":8194,"src":"9249:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"}},"visibility":"internal"}],"id":8815,"initialValue":{"baseExpression":{"baseExpression":{"id":8809,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"9273:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"}},"id":8811,"indexExpression":{"id":8810,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8794,"src":"9282:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9273:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$","typeString":"mapping(address => struct AllocationStaking.UserInfo storage ref)"}},"id":8814,"indexExpression":{"expression":{"id":8812,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9288:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9292:6:27","memberName":"sender","nodeType":"MemberAccess","src":"9288:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9273:26:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage","typeString":"struct AllocationStaking.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9249:50:27"},{"assignments":[8817],"declarations":[{"constant":false,"id":8817,"mutability":"mutable","name":"depositAmount","nameLocation":"9318:13:27","nodeType":"VariableDeclaration","scope":8903,"src":"9310:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8816,"name":"uint256","nodeType":"ElementaryTypeName","src":"9310:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8819,"initialValue":{"id":8818,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"9334:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9310:31:27"},{"expression":{"arguments":[{"id":8821,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8794,"src":"9386:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8820,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8792,"src":"9375:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8823,"nodeType":"ExpressionStatement","src":"9375:16:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8824,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"9468:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9473:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"9468:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9482:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9468:15:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8848,"nodeType":"IfStatement","src":"9464:178:27","trueBody":{"id":8847,"nodeType":"Block","src":"9485:157:27","statements":[{"assignments":[8829],"declarations":[{"constant":false,"id":8829,"mutability":"mutable","name":"pendingAmount","nameLocation":"9507:13:27","nodeType":"VariableDeclaration","scope":8847,"src":"9499:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8828,"name":"uint256","nodeType":"ElementaryTypeName","src":"9499:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8840,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8830,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"9523:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8831,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9528:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"9523:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8832,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"9535:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8833,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9540:16:27","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"9535:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9523:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":8835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9557:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"9523:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8837,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"9562:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8838,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9567:10:27","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":8188,"src":"9562:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9523:54:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9499:78:27"},{"expression":{"arguments":[{"expression":{"id":8842,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9605:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9609:6:27","memberName":"sender","nodeType":"MemberAccess","src":"9605:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8844,"name":"pendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8829,"src":"9617:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8841,"name":"erc20Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9218,"src":"9591:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9591:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8846,"nodeType":"ExpressionStatement","src":"9591:40:27"}]}},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9733:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9737:6:27","memberName":"sender","nodeType":"MemberAccess","src":"9733:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8855,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9725:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8854,"name":"address","nodeType":"ElementaryTypeName","src":"9725:7:27","typeDescriptions":{}}},"id":8858,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9725:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":8861,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9754:4:27","typeDescriptions":{"typeIdentifier":"t_contract$_AllocationStaking_$9297","typeString":"contract AllocationStaking"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AllocationStaking_$9297","typeString":"contract AllocationStaking"}],"id":8860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9746:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8859,"name":"address","nodeType":"ElementaryTypeName","src":"9746:7:27","typeDescriptions":{}}},"id":8862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9746:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8863,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8796,"src":"9761:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":8849,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"9695:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8852,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9700:7:27","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":8197,"src":"9695:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":8853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9708:16:27","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1564,"src":"9695:29:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":8864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9695:74:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8865,"nodeType":"ExpressionStatement","src":"9695:74:27"},{"expression":{"id":8873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8866,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"9820:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9825:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"9820:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8869,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"9841:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9846:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"9841:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8871,"name":"depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"9860:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9841:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9820:53:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8874,"nodeType":"ExpressionStatement","src":"9820:53:27"},{"expression":{"id":8882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8875,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"9923:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9928:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"9923:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8878,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"9937:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9942:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"9937:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8880,"name":"depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"9949:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9937:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9923:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8883,"nodeType":"ExpressionStatement","src":"9923:39:27"},{"expression":{"id":8894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8884,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"10003:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8886,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10008:10:27","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":8188,"src":"10003:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8887,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8808,"src":"10021:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10026:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"10021:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8889,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8801,"src":"10033:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10038:16:27","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"10033:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10021:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":8892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10055:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"10021:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10003:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8895,"nodeType":"ExpressionStatement","src":"10003:56:27"},{"eventCall":{"arguments":[{"expression":{"id":8897,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10113:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10117:6:27","memberName":"sender","nodeType":"MemberAccess","src":"10113:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8899,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8794,"src":"10125:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8900,"name":"depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8817,"src":"10131:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8896,"name":"Deposit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8243,"src":"10105:7:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":8901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10105:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8902,"nodeType":"EmitStatement","src":"10100:45:27"}]},"functionSelector":"e2bbb158","id":8904,"implemented":true,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"9145:7:27","nodeType":"FunctionDefinition","parameters":{"id":8797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8794,"mutability":"mutable","name":"_pid","nameLocation":"9161:4:27","nodeType":"VariableDeclaration","scope":8904,"src":"9153:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8793,"name":"uint256","nodeType":"ElementaryTypeName","src":"9153:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8796,"mutability":"mutable","name":"_amount","nameLocation":"9175:7:27","nodeType":"VariableDeclaration","scope":8904,"src":"9167:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8795,"name":"uint256","nodeType":"ElementaryTypeName","src":"9167:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9152:31:27"},"returnParameters":{"id":8798,"nodeType":"ParameterList","parameters":[],"src":"9191:0:27"},"scope":9297,"src":"9136:1016:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9029,"nodeType":"Block","src":"10251:1070:27","statements":[{"assignments":[8913],"declarations":[{"constant":false,"id":8913,"mutability":"mutable","name":"pool","nameLocation":"10278:4:27","nodeType":"VariableDeclaration","scope":9029,"src":"10261:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"},"typeName":{"id":8912,"nodeType":"UserDefinedTypeName","pathNode":{"id":8911,"name":"PoolInfo","nameLocations":["10261:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8206,"src":"10261:8:27"},"referencedDeclaration":8206,"src":"10261:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"}},"visibility":"internal"}],"id":8917,"initialValue":{"baseExpression":{"id":8914,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"10285:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":8916,"indexExpression":{"id":8915,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"10294:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10285:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage","typeString":"struct AllocationStaking.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10261:38:27"},{"assignments":[8920],"declarations":[{"constant":false,"id":8920,"mutability":"mutable","name":"user","nameLocation":"10326:4:27","nodeType":"VariableDeclaration","scope":9029,"src":"10309:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"},"typeName":{"id":8919,"nodeType":"UserDefinedTypeName","pathNode":{"id":8918,"name":"UserInfo","nameLocations":["10309:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"10309:8:27"},"referencedDeclaration":8194,"src":"10309:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"}},"visibility":"internal"}],"id":8927,"initialValue":{"baseExpression":{"baseExpression":{"id":8921,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"10333:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"}},"id":8923,"indexExpression":{"id":8922,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"10342:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10333:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$","typeString":"mapping(address => struct AllocationStaking.UserInfo storage ref)"}},"id":8926,"indexExpression":{"expression":{"id":8924,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10348:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10352:6:27","memberName":"sender","nodeType":"MemberAccess","src":"10348:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10333:26:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage","typeString":"struct AllocationStaking.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10309:50:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8929,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"10378:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8930,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10383:16:27","memberName":"tokensUnlockTime","nodeType":"MemberAccess","referencedDeclaration":8190,"src":"10378:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":8931,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10403:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10409:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"10403:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c6173742073616c6520796f75207265676973746572656420666f72206973206e6f742066696e6973686564207965742e","id":8934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10420:51:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f13159535f66a78aff8e87048116728eebc9a6eadc436340bf8ddf945a670f5","typeString":"literal_string \"Last sale you registered for is not finished yet.\""},"value":"Last sale you registered for is not finished yet."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f13159535f66a78aff8e87048116728eebc9a6eadc436340bf8ddf945a670f5","typeString":"literal_string \"Last sale you registered for is not finished yet.\""}],"id":8928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10370:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:102:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8936,"nodeType":"ExpressionStatement","src":"10370:102:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8938,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"10490:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10495:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"10490:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8940,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"10505:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10490:22:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"77697468647261773a2063616e2774207769746864726177206d6f7265207468616e206465706f736974","id":8942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10514:44:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2","typeString":"literal_string \"withdraw: can't withdraw more than deposit\""},"value":"withdraw: can't withdraw more than deposit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_abf8724bc3d4c5d875094d98fa3f028dba24b59cba665cf6bf8be780731de8a2","typeString":"literal_string \"withdraw: can't withdraw more than deposit\""}],"id":8937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10482:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10482:77:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8944,"nodeType":"ExpressionStatement","src":"10482:77:27"},{"expression":{"arguments":[{"id":8946,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"10604:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8945,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8792,"src":"10593:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":8947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10593:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8948,"nodeType":"ExpressionStatement","src":"10593:16:27"},{"assignments":[8950],"declarations":[{"constant":false,"id":8950,"mutability":"mutable","name":"pendingAmount","nameLocation":"10669:13:27","nodeType":"VariableDeclaration","scope":9029,"src":"10661:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8949,"name":"uint256","nodeType":"ElementaryTypeName","src":"10661:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8961,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8951,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"10685:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10690:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"10685:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8953,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8913,"src":"10697:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8954,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10702:16:27","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"10697:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10685:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":8956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10719:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"10685:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":8958,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"10724:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8959,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10729:10:27","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":8188,"src":"10724:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10685:54:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10661:78:27"},{"expression":{"arguments":[{"expression":{"id":8963,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10807:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10811:6:27","memberName":"sender","nodeType":"MemberAccess","src":"10807:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8965,"name":"pendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8950,"src":"10819:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8962,"name":"erc20Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9218,"src":"10793:13:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":8966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:40:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8967,"nodeType":"ExpressionStatement","src":"10793:40:27"},{"expression":{"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8968,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"10843:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8970,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10848:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"10843:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8971,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"10857:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10862:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"10857:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8973,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"10869:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10857:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10843:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8976,"nodeType":"ExpressionStatement","src":"10843:33:27"},{"expression":{"id":8987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8977,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"10886:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8979,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10891:10:27","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":8188,"src":"10886:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8980,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"10904:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":8981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10909:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"10904:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":8982,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8913,"src":"10916:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8983,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10921:16:27","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"10916:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10904:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":8985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10938:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"10904:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10886:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8988,"nodeType":"ExpressionStatement","src":"10886:56:27"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":8996,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11033:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11037:6:27","memberName":"sender","nodeType":"MemberAccess","src":"11033:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8995,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11025:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8994,"name":"address","nodeType":"ElementaryTypeName","src":"11025:7:27","typeDescriptions":{}}},"id":8998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11025:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8999,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"11046:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":8989,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8913,"src":"10999:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":8992,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11004:7:27","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":8197,"src":"10999:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":8993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11012:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"10999:25:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,uint256)"}},"id":9000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10999:55:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9001,"nodeType":"ExpressionStatement","src":"10999:55:27"},{"expression":{"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9002,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8913,"src":"11064:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":9004,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11069:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"11064:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9005,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8913,"src":"11085:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":9006,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11090:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"11085:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9007,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"11104:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11085:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11064:47:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9010,"nodeType":"ExpressionStatement","src":"11064:47:27"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9011,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"11126:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11136:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11126:11:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9021,"nodeType":"IfStatement","src":"11122:111:27","trueBody":{"id":9020,"nodeType":"Block","src":"11139:94:27","statements":[{"expression":{"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9014,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8920,"src":"11197:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11202:16:27","memberName":"tokensUnlockTime","nodeType":"MemberAccess","referencedDeclaration":8190,"src":"11197:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11221:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11197:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9019,"nodeType":"ExpressionStatement","src":"11197:25:27"}]}},{"eventCall":{"arguments":[{"expression":{"id":9023,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11288:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11292:6:27","memberName":"sender","nodeType":"MemberAccess","src":"11288:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9025,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8906,"src":"11300:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9026,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8908,"src":"11306:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9022,"name":"Withdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8251,"src":"11279:8:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11279:35:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9028,"nodeType":"EmitStatement","src":"11274:40:27"}]},"functionSelector":"441a3e70","id":9030,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"10204:8:27","nodeType":"FunctionDefinition","parameters":{"id":8909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8906,"mutability":"mutable","name":"_pid","nameLocation":"10221:4:27","nodeType":"VariableDeclaration","scope":9030,"src":"10213:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8905,"name":"uint256","nodeType":"ElementaryTypeName","src":"10213:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8908,"mutability":"mutable","name":"_amount","nameLocation":"10235:7:27","nodeType":"VariableDeclaration","scope":9030,"src":"10227:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8907,"name":"uint256","nodeType":"ElementaryTypeName","src":"10227:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10212:31:27"},"returnParameters":{"id":8910,"nodeType":"ParameterList","parameters":[],"src":"10251:0:27"},"scope":9297,"src":"10195:1126:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9116,"nodeType":"Block","src":"11416:673:27","statements":[{"assignments":[9037],"declarations":[{"constant":false,"id":9037,"mutability":"mutable","name":"pool","nameLocation":"11443:4:27","nodeType":"VariableDeclaration","scope":9116,"src":"11426:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"},"typeName":{"id":9036,"nodeType":"UserDefinedTypeName","pathNode":{"id":9035,"name":"PoolInfo","nameLocations":["11426:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8206,"src":"11426:8:27"},"referencedDeclaration":8206,"src":"11426:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"}},"visibility":"internal"}],"id":9041,"initialValue":{"baseExpression":{"id":9038,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"11450:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":9040,"indexExpression":{"id":9039,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9032,"src":"11459:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11450:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage","typeString":"struct AllocationStaking.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11426:38:27"},{"assignments":[9044],"declarations":[{"constant":false,"id":9044,"mutability":"mutable","name":"user","nameLocation":"11491:4:27","nodeType":"VariableDeclaration","scope":9116,"src":"11474:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"},"typeName":{"id":9043,"nodeType":"UserDefinedTypeName","pathNode":{"id":9042,"name":"UserInfo","nameLocations":["11474:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"11474:8:27"},"referencedDeclaration":8194,"src":"11474:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"}},"visibility":"internal"}],"id":9051,"initialValue":{"baseExpression":{"baseExpression":{"id":9045,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"11498:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"}},"id":9047,"indexExpression":{"id":9046,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9032,"src":"11507:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11498:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$","typeString":"mapping(address => struct AllocationStaking.UserInfo storage ref)"}},"id":9050,"indexExpression":{"expression":{"id":9048,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11513:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11517:6:27","memberName":"sender","nodeType":"MemberAccess","src":"11513:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11498:26:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage","typeString":"struct AllocationStaking.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"11474:50:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9053,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"11543:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9054,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11548:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"11543:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":9055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11558:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11543:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5573657220646f6573206e6f74206861766520616e797468696e67207374616b65642e","id":9057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11561:37:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea8c4190832cfece80b3f2404c6211d113e3c15b0e1b7b1fbf8c07c9c81bca0e","typeString":"literal_string \"User does not have anything staked.\""},"value":"User does not have anything staked."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ea8c4190832cfece80b3f2404c6211d113e3c15b0e1b7b1fbf8c07c9c81bca0e","typeString":"literal_string \"User does not have anything staked.\""}],"id":9052,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11535:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11535:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9059,"nodeType":"ExpressionStatement","src":"11535:64:27"},{"expression":{"arguments":[{"id":9061,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9032,"src":"11644:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9060,"name":"updatePool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8792,"src":"11633:10:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11633:16:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9063,"nodeType":"ExpressionStatement","src":"11633:16:27"},{"assignments":[9065],"declarations":[{"constant":false,"id":9065,"mutability":"mutable","name":"pendingAmount","nameLocation":"11668:13:27","nodeType":"VariableDeclaration","scope":9116,"src":"11660:21:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9064,"name":"uint256","nodeType":"ElementaryTypeName","src":"11660:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9076,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9066,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"11684:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11689:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"11684:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":9068,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"11696:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":9069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11701:16:27","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"11696:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11684:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":9071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11718:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"11684:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9073,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"11723:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11728:10:27","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":8188,"src":"11723:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11684:54:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11660:78:27"},{"expression":{"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9077,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"11792:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11797:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"11792:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9080,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"11806:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11811:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"11806:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9082,"name":"pendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"11818:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11806:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11792:39:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9085,"nodeType":"ExpressionStatement","src":"11792:39:27"},{"expression":{"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9086,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"11841:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9088,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11846:10:27","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":8188,"src":"11841:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9089,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"11859:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9090,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11864:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"11859:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":9091,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"11871:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":9092,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11876:16:27","memberName":"accERC20PerShare","nodeType":"MemberAccess","referencedDeclaration":8203,"src":"11871:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11859:33:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31653336","id":9094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11893:4:27","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(29 digits omitted)...0000"},"value":"1e36"},"src":"11859:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11841:56:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9097,"nodeType":"ExpressionStatement","src":"11841:56:27"},{"expression":{"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9098,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"11950:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":9100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11955:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"11950:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9101,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9037,"src":"11971:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":9102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11976:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"11971:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9103,"name":"pendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"11990:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11971:32:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11950:53:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9106,"nodeType":"ExpressionStatement","src":"11950:53:27"},{"eventCall":{"arguments":[{"expression":{"id":9108,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12037:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12041:6:27","memberName":"sender","nodeType":"MemberAccess","src":"12037:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9110,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9032,"src":"12049:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":9111,"name":"pendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9065,"src":"12055:13:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9112,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9044,"src":"12070:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12075:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"12070:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9107,"name":"CompoundedEarnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8269,"src":"12018:18:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":9114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12018:64:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9115,"nodeType":"EmitStatement","src":"12013:69:27"}]},"functionSelector":"aa5f7e26","id":9117,"implemented":true,"kind":"function","modifiers":[],"name":"compound","nameLocation":"11386:8:27","nodeType":"FunctionDefinition","parameters":{"id":9033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9032,"mutability":"mutable","name":"_pid","nameLocation":"11403:4:27","nodeType":"VariableDeclaration","scope":9117,"src":"11395:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9031,"name":"uint256","nodeType":"ElementaryTypeName","src":"11395:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11394:14:27"},"returnParameters":{"id":9034,"nodeType":"ParameterList","parameters":[],"src":"11416:0:27"},"scope":9297,"src":"11377:712:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9198,"nodeType":"Block","src":"12205:597:27","statements":[{"assignments":[9124],"declarations":[{"constant":false,"id":9124,"mutability":"mutable","name":"pool","nameLocation":"12232:4:27","nodeType":"VariableDeclaration","scope":9198,"src":"12215:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"},"typeName":{"id":9123,"nodeType":"UserDefinedTypeName","pathNode":{"id":9122,"name":"PoolInfo","nameLocations":["12215:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8206,"src":"12215:8:27"},"referencedDeclaration":8206,"src":"12215:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo"}},"visibility":"internal"}],"id":9128,"initialValue":{"baseExpression":{"id":9125,"name":"poolInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"12239:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PoolInfo_$8206_storage_$dyn_storage","typeString":"struct AllocationStaking.PoolInfo storage ref[] storage ref"}},"id":9127,"indexExpression":{"id":9126,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"12248:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12239:14:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage","typeString":"struct AllocationStaking.PoolInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12215:38:27"},{"assignments":[9131],"declarations":[{"constant":false,"id":9131,"mutability":"mutable","name":"user","nameLocation":"12280:4:27","nodeType":"VariableDeclaration","scope":9198,"src":"12263:21:27","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"},"typeName":{"id":9130,"nodeType":"UserDefinedTypeName","pathNode":{"id":9129,"name":"UserInfo","nameLocations":["12263:8:27"],"nodeType":"IdentifierPath","referencedDeclaration":8194,"src":"12263:8:27"},"referencedDeclaration":8194,"src":"12263:8:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo"}},"visibility":"internal"}],"id":9138,"initialValue":{"baseExpression":{"baseExpression":{"id":9132,"name":"userInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8229,"src":"12287:8:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo storage ref))"}},"id":9134,"indexExpression":{"id":9133,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"12296:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12287:14:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserInfo_$8194_storage_$","typeString":"mapping(address => struct AllocationStaking.UserInfo storage ref)"}},"id":9137,"indexExpression":{"expression":{"id":9135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12302:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12306:6:27","memberName":"sender","nodeType":"MemberAccess","src":"12302:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12287:26:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage","typeString":"struct AllocationStaking.UserInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"12263:50:27"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9140,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"12331:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9141,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12336:16:27","memberName":"tokensUnlockTime","nodeType":"MemberAccess","referencedDeclaration":8190,"src":"12331:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9142,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12356:5:27","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12362:9:27","memberName":"timestamp","nodeType":"MemberAccess","src":"12356:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12331:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456d657267656e637920776974686472617720626c6f636b656420647572696e672073616c6520616e6420636f6f6c646f776e20706572696f642e","id":9145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12385:61:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_56b9ca3553e1051f7fcbcaba90d07b4176d745112fcce0c7cc3b593a9da191ed","typeString":"literal_string \"Emergency withdraw blocked during sale and cooldown period.\""},"value":"Emergency withdraw blocked during sale and cooldown period."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_56b9ca3553e1051f7fcbcaba90d07b4176d745112fcce0c7cc3b593a9da191ed","typeString":"literal_string \"Emergency withdraw blocked during sale and cooldown period.\""}],"id":9139,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12323:7:27","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12323:124:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9147,"nodeType":"ExpressionStatement","src":"12323:124:27"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":9155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12524:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12528:6:27","memberName":"sender","nodeType":"MemberAccess","src":"12524:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12516:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9153,"name":"address","nodeType":"ElementaryTypeName","src":"12516:7:27","typeDescriptions":{}}},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12516:19:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9158,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"12537:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12542:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"12537:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":9148,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"12490:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":9151,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12495:7:27","memberName":"lpToken","nodeType":"MemberAccess","referencedDeclaration":8197,"src":"12490:12:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":9152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12503:12:27","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"12490:25:27","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,uint256)"}},"id":9160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12490:59:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9161,"nodeType":"ExpressionStatement","src":"12490:59:27"},{"eventCall":{"arguments":[{"expression":{"id":9163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12582:3:27","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12586:6:27","memberName":"sender","nodeType":"MemberAccess","src":"12582:10:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9165,"name":"_pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9119,"src":"12594:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9166,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"12600:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12605:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"12600:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9162,"name":"EmergencyWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8259,"src":"12564:17:27","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12564:48:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9169,"nodeType":"EmitStatement","src":"12559:53:27"},{"expression":{"id":9178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9170,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"12655:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":9172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12660:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"12655:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9173,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"12676:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_PoolInfo_$8206_storage_ptr","typeString":"struct AllocationStaking.PoolInfo storage pointer"}},"id":9174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12681:13:27","memberName":"totalDeposits","nodeType":"MemberAccess","referencedDeclaration":8205,"src":"12676:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":9175,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"12695:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12700:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"12695:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12676:30:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12655:51:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9179,"nodeType":"ExpressionStatement","src":"12655:51:27"},{"expression":{"id":9184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9180,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"12716:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9182,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12721:6:27","memberName":"amount","nodeType":"MemberAccess","referencedDeclaration":8186,"src":"12716:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12716:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9185,"nodeType":"ExpressionStatement","src":"12716:15:27"},{"expression":{"id":9190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9186,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"12741:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12746:10:27","memberName":"rewardDebt","nodeType":"MemberAccess","referencedDeclaration":8188,"src":"12741:15:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12741:19:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9191,"nodeType":"ExpressionStatement","src":"12741:19:27"},{"expression":{"id":9196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9192,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9131,"src":"12770:4:27","typeDescriptions":{"typeIdentifier":"t_struct$_UserInfo_$8194_storage_ptr","typeString":"struct AllocationStaking.UserInfo storage pointer"}},"id":9194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12775:16:27","memberName":"tokensUnlockTime","nodeType":"MemberAccess","referencedDeclaration":8190,"src":"12770:21:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12794:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12770:25:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9197,"nodeType":"ExpressionStatement","src":"12770:25:27"}]},"functionSelector":"5312ea8e","id":9199,"implemented":true,"kind":"function","modifiers":[],"name":"emergencyWithdraw","nameLocation":"12166:17:27","nodeType":"FunctionDefinition","parameters":{"id":9120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9119,"mutability":"mutable","name":"_pid","nameLocation":"12192:4:27","nodeType":"VariableDeclaration","scope":9199,"src":"12184:12:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9118,"name":"uint256","nodeType":"ElementaryTypeName","src":"12184:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12183:14:27"},"returnParameters":{"id":9121,"nodeType":"ParameterList","parameters":[],"src":"12205:0:27"},"scope":9297,"src":"12157:645:27","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9217,"nodeType":"Block","src":"12944:73:27","statements":[{"expression":{"arguments":[{"id":9209,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9201,"src":"12969:3:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9210,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"12974:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9206,"name":"erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8209,"src":"12954:5:27","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":9208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12960:8:27","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1433,"src":"12954:14:27","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":9211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12954:28:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9212,"nodeType":"ExpressionStatement","src":"12954:28:27"},{"expression":{"id":9215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9213,"name":"paidOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8211,"src":"12992:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9214,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"13003:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12992:18:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9216,"nodeType":"ExpressionStatement","src":"12992:18:27"}]},"id":9218,"implemented":true,"kind":"function","modifiers":[],"name":"erc20Transfer","nameLocation":"12891:13:27","nodeType":"FunctionDefinition","parameters":{"id":9204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9201,"mutability":"mutable","name":"_to","nameLocation":"12913:3:27","nodeType":"VariableDeclaration","scope":9218,"src":"12905:11:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9200,"name":"address","nodeType":"ElementaryTypeName","src":"12905:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9203,"mutability":"mutable","name":"_amount","nameLocation":"12926:7:27","nodeType":"VariableDeclaration","scope":9218,"src":"12918:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9202,"name":"uint256","nodeType":"ElementaryTypeName","src":"12918:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12904:30:27"},"returnParameters":{"id":9205,"nodeType":"ParameterList","parameters":[],"src":"12944:0:27"},"scope":9297,"src":"12882:135:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":9295,"nodeType":"Block","src":"13273:396:27","statements":[{"assignments":[9236],"declarations":[{"constant":false,"id":9236,"mutability":"mutable","name":"deposits","nameLocation":"13301:8:27","nodeType":"VariableDeclaration","scope":9295,"src":"13283:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9234,"name":"uint256","nodeType":"ElementaryTypeName","src":"13283:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9235,"nodeType":"ArrayTypeName","src":"13283:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":9243,"initialValue":{"arguments":[{"expression":{"id":9240,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"13326:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13332:6:27","memberName":"length","nodeType":"MemberAccess","src":"13326:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9239,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13312:13:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":9237,"name":"uint256","nodeType":"ElementaryTypeName","src":"13316:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9238,"nodeType":"ArrayTypeName","src":"13316:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13312:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13283:56:27"},{"assignments":[9248],"declarations":[{"constant":false,"id":9248,"mutability":"mutable","name":"earnings","nameLocation":"13367:8:27","nodeType":"VariableDeclaration","scope":9295,"src":"13349:26:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9246,"name":"uint256","nodeType":"ElementaryTypeName","src":"13349:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9247,"nodeType":"ArrayTypeName","src":"13349:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":9255,"initialValue":{"arguments":[{"expression":{"id":9252,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"13392:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13398:6:27","memberName":"length","nodeType":"MemberAccess","src":"13392:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"13378:13:27","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":9249,"name":"uint256","nodeType":"ElementaryTypeName","src":"13382:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9250,"nodeType":"ArrayTypeName","src":"13382:9:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":9254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13378:27:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"13349:56:27"},{"body":{"id":9289,"nodeType":"Block","src":"13512:113:27","statements":[{"expression":{"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9267,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9236,"src":"13526:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9269,"indexExpression":{"id":9268,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"13535:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13526:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9271,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"13550:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":9272,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"13555:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9274,"indexExpression":{"id":9273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"13561:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13555:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9270,"name":"deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8503,"src":"13540:9:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":9275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:24:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13526:38:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9277,"nodeType":"ExpressionStatement","src":"13526:38:27"},{"expression":{"id":9287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9278,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"13578:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9280,"indexExpression":{"id":9279,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"13587:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13578:11:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9282,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9223,"src":"13600:3:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":9283,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"13605:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9285,"indexExpression":{"id":9284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"13611:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13605:8:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9281,"name":"pending","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8600,"src":"13592:7:27","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_address_$returns$_t_uint256_$","typeString":"function (uint256,address) view returns (uint256)"}},"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13592:22:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13578:36:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9288,"nodeType":"ExpressionStatement","src":"13578:36:27"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9260,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"13489:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9261,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9221,"src":"13493:5:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":9262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13499:6:27","memberName":"length","nodeType":"MemberAccess","src":"13493:12:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13489:16:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9290,"initializationExpression":{"assignments":[9257],"declarations":[{"constant":false,"id":9257,"mutability":"mutable","name":"i","nameLocation":"13482:1:27","nodeType":"VariableDeclaration","scope":9290,"src":"13477:6:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9256,"name":"uint","nodeType":"ElementaryTypeName","src":"13477:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9259,"initialValue":{"hexValue":"30","id":9258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13486:1:27","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13477:10:27"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13507:3:27","subExpression":{"id":9264,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9257,"src":"13507:1:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9266,"nodeType":"ExpressionStatement","src":"13507:3:27"},"nodeType":"ForStatement","src":"13472:153:27"},{"expression":{"components":[{"id":9291,"name":"deposits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9236,"src":"13643:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":9292,"name":"earnings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9248,"src":"13653:8:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":9293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13642:20:27","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"functionReturnParameters":9231,"id":9294,"nodeType":"Return","src":"13635:27:27"}]},"functionSelector":"fcfc1b14","id":9296,"implemented":true,"kind":"function","modifiers":[],"name":"getPendingAndDepositedForUsers","nameLocation":"13130:30:27","nodeType":"FunctionDefinition","parameters":{"id":9224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9221,"mutability":"mutable","name":"users","nameLocation":"13179:5:27","nodeType":"VariableDeclaration","scope":9296,"src":"13161:23:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":9219,"name":"address","nodeType":"ElementaryTypeName","src":"13161:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9220,"nodeType":"ArrayTypeName","src":"13161:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":9223,"mutability":"mutable","name":"pid","nameLocation":"13191:3:27","nodeType":"VariableDeclaration","scope":9296,"src":"13186:8:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9222,"name":"uint","nodeType":"ElementaryTypeName","src":"13186:4:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13160:35:27"},"returnParameters":{"id":9231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9296,"src":"13231:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9225,"name":"uint256","nodeType":"ElementaryTypeName","src":"13231:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9226,"nodeType":"ArrayTypeName","src":"13231:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9296,"src":"13250:17:27","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9228,"name":"uint256","nodeType":"ElementaryTypeName","src":"13250:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9229,"nodeType":"ArrayTypeName","src":"13250:10:27","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13230:38:27"},"scope":9297,"src":"13121:548:27","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":9298,"src":"357:13316:27","usedErrors":[30,35,211,214,1504],"usedEvents":[41,219,8243,8251,8259,8269]}],"src":"38:13636:27"},"id":27},"contracts/sales/C2NSale.sol":{"ast":{"absolutePath":"contracts/sales/C2NSale.sol","exportedSymbols":{"C2NSale":[10859],"ECDSA":[3531],"IAdmin":[8133],"IAllocationStaking":[8154],"IERC1363":[724],"IERC20":[1466],"IERC20Metadata":[1492],"ISalesFactory":[8171],"MessageHashUtils":[3605],"SafeERC20":[1901],"Strings":[3183]},"id":10860,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":9299,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:28"},{"absolutePath":"contracts/interfaces/IAdmin.sol","file":"../interfaces/IAdmin.sol","id":9300,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10860,"sourceUnit":8134,"src":"63:34:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/ISalesFactory.sol","file":"../interfaces/ISalesFactory.sol","id":9301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10860,"sourceUnit":8172,"src":"98:41:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAllocationStaking.sol","file":"../interfaces/IAllocationStaking.sol","id":9302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10860,"sourceUnit":8155,"src":"140:46:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":9303,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10860,"sourceUnit":3532,"src":"187:62:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol","id":9304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10860,"sourceUnit":1902,"src":"250:65:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC20Metadata.sol","file":"@openzeppelin/contracts/interfaces/IERC20Metadata.sol","id":9305,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10860,"sourceUnit":737,"src":"316:63:28","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":9306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10860,"sourceUnit":3606,"src":"380:73:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"C2NSale","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10859,"linearizedBaseContracts":[10859],"name":"C2NSale","nameLocation":"464:7:28","nodeType":"ContractDefinition","nodes":[{"global":false,"id":9309,"libraryName":{"id":9307,"name":"ECDSA","nameLocations":["484:5:28"],"nodeType":"IdentifierPath","referencedDeclaration":3531,"src":"484:5:28"},"nodeType":"UsingForDirective","src":"478:24:28","typeName":{"id":9308,"name":"bytes32","nodeType":"ElementaryTypeName","src":"494:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":9312,"libraryName":{"id":9310,"name":"MessageHashUtils","nameLocations":["513:16:28"],"nodeType":"IdentifierPath","referencedDeclaration":3605,"src":"513:16:28"},"nodeType":"UsingForDirective","src":"507:35:28","typeName":{"id":9311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"534:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":9316,"libraryName":{"id":9313,"name":"SafeERC20","nameLocations":["553:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":1901,"src":"553:9:28"},"nodeType":"UsingForDirective","src":"547:27:28","typeName":{"id":9315,"nodeType":"UserDefinedTypeName","pathNode":{"id":9314,"name":"IERC20","nameLocations":["567:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"567:6:28"},"referencedDeclaration":1466,"src":"567:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}}},{"constant":false,"functionSelector":"059ea172","id":9319,"mutability":"mutable","name":"allocationStakingContract","nameLocation":"652:25:28","nodeType":"VariableDeclaration","scope":10859,"src":"626:51:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAllocationStaking_$8154","typeString":"contract IAllocationStaking"},"typeName":{"id":9318,"nodeType":"UserDefinedTypeName","pathNode":{"id":9317,"name":"IAllocationStaking","nameLocations":["626:18:28"],"nodeType":"IdentifierPath","referencedDeclaration":8154,"src":"626:18:28"},"referencedDeclaration":8154,"src":"626:18:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllocationStaking_$8154","typeString":"contract IAllocationStaking"}},"visibility":"public"},{"constant":false,"functionSelector":"c45a0155","id":9322,"mutability":"mutable","name":"factory","nameLocation":"745:7:28","nodeType":"VariableDeclaration","scope":10859,"src":"724:28:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"},"typeName":{"id":9321,"nodeType":"UserDefinedTypeName","pathNode":{"id":9320,"name":"ISalesFactory","nameLocations":["724:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":8171,"src":"724:13:28"},"referencedDeclaration":8171,"src":"724:13:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":9325,"mutability":"mutable","name":"admin","nameLocation":"794:5:28","nodeType":"VariableDeclaration","scope":10859,"src":"780:19:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"},"typeName":{"id":9324,"nodeType":"UserDefinedTypeName","pathNode":{"id":9323,"name":"IAdmin","nameLocations":["780:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":8133,"src":"780:6:28"},"referencedDeclaration":8133,"src":"780:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"visibility":"public"},{"canonicalName":"C2NSale.Sale","id":9355,"members":[{"constant":false,"id":9328,"mutability":"mutable","name":"token","nameLocation":"863:5:28","nodeType":"VariableDeclaration","scope":9355,"src":"856:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":9327,"nodeType":"UserDefinedTypeName","pathNode":{"id":9326,"name":"IERC20","nameLocations":["856:6:28"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"856:6:28"},"referencedDeclaration":1466,"src":"856:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":9330,"mutability":"mutable","name":"isCreated","nameLocation":"910:9:28","nodeType":"VariableDeclaration","scope":9355,"src":"905:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9329,"name":"bool","nodeType":"ElementaryTypeName","src":"905:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9332,"mutability":"mutable","name":"earningsWithdrawn","nameLocation":"968:17:28","nodeType":"VariableDeclaration","scope":9355,"src":"963:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9331,"name":"bool","nodeType":"ElementaryTypeName","src":"963:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9334,"mutability":"mutable","name":"leftoverWithdrawn","nameLocation":"1033:17:28","nodeType":"VariableDeclaration","scope":9355,"src":"1028:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9333,"name":"bool","nodeType":"ElementaryTypeName","src":"1028:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9336,"mutability":"mutable","name":"tokensDeposited","nameLocation":"1103:15:28","nodeType":"VariableDeclaration","scope":9355,"src":"1098:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9335,"name":"bool","nodeType":"ElementaryTypeName","src":"1098:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9338,"mutability":"mutable","name":"saleOwner","nameLocation":"1169:9:28","nodeType":"VariableDeclaration","scope":9355,"src":"1161:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9337,"name":"address","nodeType":"ElementaryTypeName","src":"1161:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9340,"mutability":"mutable","name":"tokenPriceInETH","nameLocation":"1240:15:28","nodeType":"VariableDeclaration","scope":9355,"src":"1232:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1232:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9342,"mutability":"mutable","name":"amountOfTokensToSell","nameLocation":"1309:20:28","nodeType":"VariableDeclaration","scope":9355,"src":"1301:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9341,"name":"uint256","nodeType":"ElementaryTypeName","src":"1301:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9344,"mutability":"mutable","name":"totalTokensSold","nameLocation":"1382:15:28","nodeType":"VariableDeclaration","scope":9355,"src":"1374:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9343,"name":"uint256","nodeType":"ElementaryTypeName","src":"1374:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9346,"mutability":"mutable","name":"totalETHRaised","nameLocation":"1443:14:28","nodeType":"VariableDeclaration","scope":9355,"src":"1435:22:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9345,"name":"uint256","nodeType":"ElementaryTypeName","src":"1435:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9348,"mutability":"mutable","name":"saleStart","nameLocation":"1502:9:28","nodeType":"VariableDeclaration","scope":9355,"src":"1494:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1494:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9350,"mutability":"mutable","name":"saleEnd","nameLocation":"1554:7:28","nodeType":"VariableDeclaration","scope":9355,"src":"1546:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9349,"name":"uint256","nodeType":"ElementaryTypeName","src":"1546:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9352,"mutability":"mutable","name":"tokensUnlockTime","nameLocation":"1619:16:28","nodeType":"VariableDeclaration","scope":9355,"src":"1611:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1611:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9354,"mutability":"mutable","name":"maxParticipation","nameLocation":"1681:16:28","nodeType":"VariableDeclaration","scope":9355,"src":"1673:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9353,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Sale","nameLocation":"813:4:28","nodeType":"StructDefinition","scope":10859,"src":"806:898:28","visibility":"public"},{"canonicalName":"C2NSale.Participation","id":9365,"members":[{"constant":false,"id":9357,"mutability":"mutable","name":"amountBought","nameLocation":"1780:12:28","nodeType":"VariableDeclaration","scope":9365,"src":"1772:20:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9356,"name":"uint256","nodeType":"ElementaryTypeName","src":"1772:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9359,"mutability":"mutable","name":"amountETHPaid","nameLocation":"1810:13:28","nodeType":"VariableDeclaration","scope":9365,"src":"1802:21:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1802:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9361,"mutability":"mutable","name":"timeParticipated","nameLocation":"1841:16:28","nodeType":"VariableDeclaration","scope":9365,"src":"1833:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9360,"name":"uint256","nodeType":"ElementaryTypeName","src":"1833:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9364,"mutability":"mutable","name":"isPortionWithdrawn","nameLocation":"1874:18:28","nodeType":"VariableDeclaration","scope":9365,"src":"1867:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":9362,"name":"bool","nodeType":"ElementaryTypeName","src":"1867:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9363,"nodeType":"ArrayTypeName","src":"1867:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"name":"Participation","nameLocation":"1748:13:28","nodeType":"StructDefinition","scope":10859,"src":"1741:158:28","visibility":"public"},{"canonicalName":"C2NSale.Registration","id":9372,"members":[{"constant":false,"id":9367,"mutability":"mutable","name":"registrationTimeStarts","nameLocation":"1943:22:28","nodeType":"VariableDeclaration","scope":9372,"src":"1935:30:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9366,"name":"uint256","nodeType":"ElementaryTypeName","src":"1935:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9369,"mutability":"mutable","name":"registrationTimeEnds","nameLocation":"1983:20:28","nodeType":"VariableDeclaration","scope":9372,"src":"1975:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9368,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9371,"mutability":"mutable","name":"numberOfRegistrants","nameLocation":"2021:19:28","nodeType":"VariableDeclaration","scope":9372,"src":"2013:27:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9370,"name":"uint256","nodeType":"ElementaryTypeName","src":"2013:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Registration","nameLocation":"1912:12:28","nodeType":"StructDefinition","scope":10859,"src":"1905:142:28","visibility":"public"},{"constant":false,"functionSelector":"6ad1fe02","id":9375,"mutability":"mutable","name":"sale","nameLocation":"2077:4:28","nodeType":"VariableDeclaration","scope":10859,"src":"2065:16:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale"},"typeName":{"id":9374,"nodeType":"UserDefinedTypeName","pathNode":{"id":9373,"name":"Sale","nameLocations":["2065:4:28"],"nodeType":"IdentifierPath","referencedDeclaration":9355,"src":"2065:4:28"},"referencedDeclaration":9355,"src":"2065:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage_ptr","typeString":"struct C2NSale.Sale"}},"visibility":"public"},{"constant":false,"functionSelector":"443bd1d0","id":9378,"mutability":"mutable","name":"registration","nameLocation":"2127:12:28","nodeType":"VariableDeclaration","scope":10859,"src":"2107:32:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration"},"typeName":{"id":9377,"nodeType":"UserDefinedTypeName","pathNode":{"id":9376,"name":"Registration","nameLocations":["2107:12:28"],"nodeType":"IdentifierPath","referencedDeclaration":9372,"src":"2107:12:28"},"referencedDeclaration":9372,"src":"2107:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage_ptr","typeString":"struct C2NSale.Registration"}},"visibility":"public"},{"constant":false,"functionSelector":"7417040e","id":9380,"mutability":"mutable","name":"numberOfParticipants","nameLocation":"2209:20:28","nodeType":"VariableDeclaration","scope":10859,"src":"2194:35:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"5e7464f6","id":9385,"mutability":"mutable","name":"userToParticipation","nameLocation":"2317:19:28","nodeType":"VariableDeclaration","scope":10859,"src":"2276:60:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participation_$9365_storage_$","typeString":"mapping(address => struct C2NSale.Participation)"},"typeName":{"id":9384,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9381,"name":"address","nodeType":"ElementaryTypeName","src":"2284:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2276:33:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participation_$9365_storage_$","typeString":"mapping(address => struct C2NSale.Participation)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9383,"nodeType":"UserDefinedTypeName","pathNode":{"id":9382,"name":"Participation","nameLocations":["2295:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9365,"src":"2295:13:28"},"referencedDeclaration":9365,"src":"2295:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation"}}},"visibility":"public"},{"constant":false,"functionSelector":"c3c5a547","id":9389,"mutability":"mutable","name":"isRegistered","nameLocation":"2418:12:28","nodeType":"VariableDeclaration","scope":10859,"src":"2386:44:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9388,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9386,"name":"address","nodeType":"ElementaryTypeName","src":"2394:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2386:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9387,"name":"bool","nodeType":"ElementaryTypeName","src":"2405:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"cf5b8d4b","id":9393,"mutability":"mutable","name":"isParticipated","nameLocation":"2514:14:28","nodeType":"VariableDeclaration","scope":10859,"src":"2482:46:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9392,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9390,"name":"address","nodeType":"ElementaryTypeName","src":"2490:7:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2482:24:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9391,"name":"bool","nodeType":"ElementaryTypeName","src":"2501:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f1ef7ff2","id":9396,"mutability":"mutable","name":"vestingPortionsUnlockTime","nameLocation":"2599:25:28","nodeType":"VariableDeclaration","scope":10859,"src":"2582:42:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":9394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2582:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9395,"nodeType":"ArrayTypeName","src":"2582:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"927f6aee","id":9399,"mutability":"mutable","name":"vestingPercentPerPortion","nameLocation":"2701:24:28","nodeType":"VariableDeclaration","scope":10859,"src":"2684:41:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[]"},"typeName":{"baseType":{"id":9397,"name":"uint256","nodeType":"ElementaryTypeName","src":"2684:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9398,"nodeType":"ArrayTypeName","src":"2684:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"public"},{"constant":false,"functionSelector":"2a7c35de","id":9401,"mutability":"mutable","name":"portionVestingPrecision","nameLocation":"2794:23:28","nodeType":"VariableDeclaration","scope":10859,"src":"2779:38:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9400,"name":"uint256","nodeType":"ElementaryTypeName","src":"2779:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"ccc171f5","id":9403,"mutability":"mutable","name":"maxVestingTimeShift","nameLocation":"2868:19:28","nodeType":"VariableDeclaration","scope":10859,"src":"2853:34:28","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9402,"name":"uint256","nodeType":"ElementaryTypeName","src":"2853:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":9415,"nodeType":"Block","src":"2963:95:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9406,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2981:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2985:6:28","memberName":"sender","nodeType":"MemberAccess","src":"2981:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9408,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"2995:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9409,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3000:9:28","memberName":"saleOwner","nodeType":"MemberAccess","referencedDeclaration":9338,"src":"2995:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2981:28:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c7953616c654f776e65723a3a2052657374726963746564","id":9411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3011:28:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bd44e99e9dd645a7346c6af7b8c358cc26e154b91cc32ca0854dc4885f9021b","typeString":"literal_string \"OnlySaleOwner:: Restricted\""},"value":"OnlySaleOwner:: Restricted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0bd44e99e9dd645a7346c6af7b8c358cc26e154b91cc32ca0854dc4885f9021b","typeString":"literal_string \"OnlySaleOwner:: Restricted\""}],"id":9405,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2973:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2973:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9413,"nodeType":"ExpressionStatement","src":"2973:67:28"},{"id":9414,"nodeType":"PlaceholderStatement","src":"3050:1:28"}]},"id":9416,"name":"onlySaleOwner","nameLocation":"2947:13:28","nodeType":"ModifierDefinition","parameters":{"id":9404,"nodeType":"ParameterList","parameters":[],"src":"2960:2:28"},"src":"2938:120:28","virtual":false,"visibility":"internal"},{"body":{"id":9428,"nodeType":"Block","src":"3085:134:28","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":9421,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3130:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3134:6:28","memberName":"sender","nodeType":"MemberAccess","src":"3130:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":9419,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"3116:5:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"id":9420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3122:7:28","memberName":"isAdmin","nodeType":"MemberAccess","referencedDeclaration":8132,"src":"3116:13:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":9423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e2e","id":9424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3155:36:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd","typeString":"literal_string \"Only admin can call this function.\""},"value":"Only admin can call this function."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94af4b59765c7b138ef06798b92d6105423ba5fc6ed7bba92dbea243ded06fcd","typeString":"literal_string \"Only admin can call this function.\""}],"id":9418,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3095:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3095:106:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9426,"nodeType":"ExpressionStatement","src":"3095:106:28"},{"id":9427,"nodeType":"PlaceholderStatement","src":"3211:1:28"}]},"id":9429,"name":"onlyAdmin","nameLocation":"3073:9:28","nodeType":"ModifierDefinition","parameters":{"id":9417,"nodeType":"ParameterList","parameters":[],"src":"3082:2:28"},"src":"3064:155:28","virtual":false,"visibility":"internal"},{"anonymous":false,"eventSelector":"57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e","id":9435,"name":"TokensSold","nameLocation":"3245:10:28","nodeType":"EventDefinition","parameters":{"id":9434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9431,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3264:4:28","nodeType":"VariableDeclaration","scope":9435,"src":"3256:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9430,"name":"address","nodeType":"ElementaryTypeName","src":"3256:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9433,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3278:6:28","nodeType":"VariableDeclaration","scope":9435,"src":"3270:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9432,"name":"uint256","nodeType":"ElementaryTypeName","src":"3270:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3255:30:28"},"src":"3239:47:28"},{"anonymous":false,"eventSelector":"54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b9","id":9439,"name":"UserRegistered","nameLocation":"3297:14:28","nodeType":"EventDefinition","parameters":{"id":9438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9437,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3320:4:28","nodeType":"VariableDeclaration","scope":9439,"src":"3312:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9436,"name":"address","nodeType":"ElementaryTypeName","src":"3312:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3311:14:28"},"src":"3291:35:28"},{"anonymous":false,"eventSelector":"4b59d61d9ffdc3db926d0ce7e06ebabb6bd1bf9dcdae262667e48be368227216","id":9443,"name":"TokenPriceSet","nameLocation":"3337:13:28","nodeType":"EventDefinition","parameters":{"id":9442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9441,"indexed":false,"mutability":"mutable","name":"newPrice","nameLocation":"3359:8:28","nodeType":"VariableDeclaration","scope":9443,"src":"3351:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9440,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3350:18:28"},"src":"3331:38:28"},{"anonymous":false,"eventSelector":"37cfb0744bdb923d0300a0c37fac13cfec5fc2ee313cb9b217d284122980bada","id":9447,"name":"MaxParticipationSet","nameLocation":"3380:19:28","nodeType":"EventDefinition","parameters":{"id":9446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9445,"indexed":false,"mutability":"mutable","name":"maxParticipation","nameLocation":"3408:16:28","nodeType":"VariableDeclaration","scope":9447,"src":"3400:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9444,"name":"uint256","nodeType":"ElementaryTypeName","src":"3400:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3399:26:28"},"src":"3374:52:28"},{"anonymous":false,"eventSelector":"6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b","id":9453,"name":"TokensWithdrawn","nameLocation":"3437:15:28","nodeType":"EventDefinition","parameters":{"id":9452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9449,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"3461:4:28","nodeType":"VariableDeclaration","scope":9453,"src":"3453:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9448,"name":"address","nodeType":"ElementaryTypeName","src":"3453:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9451,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3475:6:28","nodeType":"VariableDeclaration","scope":9453,"src":"3467:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9450,"name":"uint256","nodeType":"ElementaryTypeName","src":"3467:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3452:30:28"},"src":"3431:52:28"},{"anonymous":false,"eventSelector":"2cd2dfcdeb2b58c4b80527e9df5e12da537fa4f6c958a4fb623a83ab74eeab63","id":9463,"name":"SaleCreated","nameLocation":"3494:11:28","nodeType":"EventDefinition","parameters":{"id":9462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9455,"indexed":false,"mutability":"mutable","name":"saleOwner","nameLocation":"3523:9:28","nodeType":"VariableDeclaration","scope":9463,"src":"3515:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9454,"name":"address","nodeType":"ElementaryTypeName","src":"3515:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9457,"indexed":false,"mutability":"mutable","name":"tokenPriceInETH","nameLocation":"3550:15:28","nodeType":"VariableDeclaration","scope":9463,"src":"3542:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9456,"name":"uint256","nodeType":"ElementaryTypeName","src":"3542:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9459,"indexed":false,"mutability":"mutable","name":"amountOfTokensToSell","nameLocation":"3583:20:28","nodeType":"VariableDeclaration","scope":9463,"src":"3575:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9458,"name":"uint256","nodeType":"ElementaryTypeName","src":"3575:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9461,"indexed":false,"mutability":"mutable","name":"saleEnd","nameLocation":"3621:7:28","nodeType":"VariableDeclaration","scope":9463,"src":"3613:15:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9460,"name":"uint256","nodeType":"ElementaryTypeName","src":"3613:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3505:129:28"},"src":"3488:147:28"},{"anonymous":false,"eventSelector":"aad53c4362ef2fe5a5390cc046e71fd8423a0a8dceebc156ac9bbcd15997eec2","id":9467,"name":"StartTimeSet","nameLocation":"3646:12:28","nodeType":"EventDefinition","parameters":{"id":9466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9465,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"3667:9:28","nodeType":"VariableDeclaration","scope":9467,"src":"3659:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9464,"name":"uint256","nodeType":"ElementaryTypeName","src":"3659:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3658:19:28"},"src":"3640:38:28"},{"anonymous":false,"eventSelector":"af6e91c17885891414abbe7fa95074976b3e429980b0d8790034468e69650dd9","id":9473,"name":"RegistrationTimeSet","nameLocation":"3689:19:28","nodeType":"EventDefinition","parameters":{"id":9472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9469,"indexed":false,"mutability":"mutable","name":"registrationTimeStarts","nameLocation":"3726:22:28","nodeType":"VariableDeclaration","scope":9473,"src":"3718:30:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9468,"name":"uint256","nodeType":"ElementaryTypeName","src":"3718:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9471,"indexed":false,"mutability":"mutable","name":"registrationTimeEnds","nameLocation":"3766:20:28","nodeType":"VariableDeclaration","scope":9473,"src":"3758:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9470,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3708:84:28"},"src":"3683:110:28"},{"body":{"id":9517,"nodeType":"Block","src":"3915:250:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9481,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9475,"src":"3933:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3951:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3943:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9482,"name":"address","nodeType":"ElementaryTypeName","src":"3943:7:28","typeDescriptions":{}}},"id":9485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3933:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9480,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3925:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3925:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9488,"nodeType":"ExpressionStatement","src":"3925:29:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9490,"name":"_allocationStaking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"3972:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4002:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3994:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9491,"name":"address","nodeType":"ElementaryTypeName","src":"3994:7:28","typeDescriptions":{}}},"id":9494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3994:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3972:32:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9489,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"3964:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3964:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9497,"nodeType":"ExpressionStatement","src":"3964:41:28"},{"expression":{"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9498,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"4015:5:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9500,"name":"_admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9475,"src":"4030:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9499,"name":"IAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"4023:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAdmin_$8133_$","typeString":"type(contract IAdmin)"}},"id":9501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4023:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"src":"4015:22:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"id":9503,"nodeType":"ExpressionStatement","src":"4015:22:28"},{"expression":{"id":9509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9504,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9322,"src":"4047:7:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":9506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4071:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4075:6:28","memberName":"sender","nodeType":"MemberAccess","src":"4071:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9505,"name":"ISalesFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8171,"src":"4057:13:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISalesFactory_$8171_$","typeString":"type(contract ISalesFactory)"}},"id":9508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4057:25:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"src":"4047:35:28","typeDescriptions":{"typeIdentifier":"t_contract$_ISalesFactory_$8171","typeString":"contract ISalesFactory"}},"id":9510,"nodeType":"ExpressionStatement","src":"4047:35:28"},{"expression":{"id":9515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9511,"name":"allocationStakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9319,"src":"4092:25:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllocationStaking_$8154","typeString":"contract IAllocationStaking"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9513,"name":"_allocationStaking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"4139:18:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9512,"name":"IAllocationStaking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8154,"src":"4120:18:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAllocationStaking_$8154_$","typeString":"type(contract IAllocationStaking)"}},"id":9514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4120:38:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAllocationStaking_$8154","typeString":"contract IAllocationStaking"}},"src":"4092:66:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllocationStaking_$8154","typeString":"contract IAllocationStaking"}},"id":9516,"nodeType":"ExpressionStatement","src":"4092:66:28"}]},"id":9518,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9475,"mutability":"mutable","name":"_admin","nameLocation":"3879:6:28","nodeType":"VariableDeclaration","scope":9518,"src":"3871:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9474,"name":"address","nodeType":"ElementaryTypeName","src":"3871:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9477,"mutability":"mutable","name":"_allocationStaking","nameLocation":"3895:18:28","nodeType":"VariableDeclaration","scope":9518,"src":"3887:26:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9476,"name":"address","nodeType":"ElementaryTypeName","src":"3887:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3870:44:28"},"returnParameters":{"id":9479,"nodeType":"ParameterList","parameters":[],"src":"3915:0:28"},"scope":10859,"src":"3859:306:28","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9615,"nodeType":"Block","src":"4393:806:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9533,"name":"vestingPercentPerPortion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"4424:24:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4449:6:28","memberName":"length","nodeType":"MemberAccess","src":"4424:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4459:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4424:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9537,"name":"vestingPortionsUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"4476:25:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4502:6:28","memberName":"length","nodeType":"MemberAccess","src":"4476:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4512:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4476:37:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4424:89:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9532,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4403:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4403:120:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9543,"nodeType":"ExpressionStatement","src":"4403:120:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9545,"name":"_unlockingTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"4541:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4557:6:28","memberName":"length","nodeType":"MemberAccess","src":"4541:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":9547,"name":"_percents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"4567:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4577:6:28","memberName":"length","nodeType":"MemberAccess","src":"4567:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4541:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9544,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4533:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4533:51:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9551,"nodeType":"ExpressionStatement","src":"4533:51:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9553,"name":"portionVestingPrecision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9401,"src":"4602:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4628:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4602:27:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665677561726420666f72206d616b696e6720737572652073657453616c65506172616d73206765742066697273742063616c6c65642e","id":9556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4631:59:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_106bd342e334bc5aad14f44ca9ac97aa1bdef16484ded7bec4da7d7a1b9c9f65","typeString":"literal_string \"Safeguard for making sure setSaleParams get first called.\""},"value":"Safeguard for making sure setSaleParams get first called."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_106bd342e334bc5aad14f44ca9ac97aa1bdef16484ded7bec4da7d7a1b9c9f65","typeString":"literal_string \"Safeguard for making sure setSaleParams get first called.\""}],"id":9552,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4594:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4594:97:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9558,"nodeType":"ExpressionStatement","src":"4594:97:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9560,"name":"_maxVestingTimeShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9527,"src":"4709:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3330","id":9561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4733:7:28","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_2592000_by_1","typeString":"int_const 2592000"},"value":"30"},"src":"4709:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6178696d616c20736869667420697320333020646179732e","id":9563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4742:27:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5e0d430bd4ce3d669b4487523427bd19981f9fc87c58b39ff56974b03f59366b","typeString":"literal_string \"Maximal shift is 30 days.\""},"value":"Maximal shift is 30 days."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5e0d430bd4ce3d669b4487523427bd19981f9fc87c58b39ff56974b03f59366b","typeString":"literal_string \"Maximal shift is 30 days.\""}],"id":9559,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"4701:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4701:69:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9565,"nodeType":"ExpressionStatement","src":"4701:69:28"},{"expression":{"id":9568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9566,"name":"maxVestingTimeShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"4819:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9567,"name":"_maxVestingTimeShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9527,"src":"4841:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4819:42:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9569,"nodeType":"ExpressionStatement","src":"4819:42:28"},{"assignments":[9571],"declarations":[{"constant":false,"id":9571,"mutability":"mutable","name":"sum","nameLocation":"4880:3:28","nodeType":"VariableDeclaration","scope":9615,"src":"4872:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4872:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9572,"nodeType":"VariableDeclarationStatement","src":"4872:11:28"},{"body":{"id":9606,"nodeType":"Block","src":"4947:165:28","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9587,"name":"_unlockingTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"4992:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9589,"indexExpression":{"id":9588,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"5008:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4992:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9584,"name":"vestingPortionsUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"4961:25:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4987:4:28","memberName":"push","nodeType":"MemberAccess","src":"4961:30:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":9590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4961:50:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9591,"nodeType":"ExpressionStatement","src":"4961:50:28"},{"expression":{"arguments":[{"baseExpression":{"id":9595,"name":"_percents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"5055:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9597,"indexExpression":{"id":9596,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"5065:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5055:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":9592,"name":"vestingPercentPerPortion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"5025:24:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5050:4:28","memberName":"push","nodeType":"MemberAccess","src":"5025:29:28","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":9598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5025:43:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9599,"nodeType":"ExpressionStatement","src":"5025:43:28"},{"expression":{"id":9604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9600,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"5082:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":9601,"name":"_percents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9525,"src":"5089:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9603,"indexExpression":{"id":9602,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"5099:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5089:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5082:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9605,"nodeType":"ExpressionStatement","src":"5082:19:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9577,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"4914:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9578,"name":"_unlockingTimes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9522,"src":"4918:15:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":9579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4934:6:28","memberName":"length","nodeType":"MemberAccess","src":"4918:22:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4914:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9607,"initializationExpression":{"assignments":[9574],"declarations":[{"constant":false,"id":9574,"mutability":"mutable","name":"i","nameLocation":"4907:1:28","nodeType":"VariableDeclaration","scope":9607,"src":"4899:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9573,"name":"uint256","nodeType":"ElementaryTypeName","src":"4899:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9576,"initialValue":{"hexValue":"30","id":9575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4911:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4899:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4942:3:28","subExpression":{"id":9581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9574,"src":"4942:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9583,"nodeType":"ExpressionStatement","src":"4942:3:28"},"nodeType":"ForStatement","src":"4894:218:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9609,"name":"sum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9571,"src":"5130:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9610,"name":"portionVestingPrecision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9401,"src":"5137:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5130:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50657263656e7420646973747269627574696f6e2069737375652e","id":9612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5162:29:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_41640a7e615c9b9045d794247c09a19c59d5f9813fa675d4f86f7d5cdf8d47fd","typeString":"literal_string \"Percent distribution issue.\""},"value":"Percent distribution issue."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_41640a7e615c9b9045d794247c09a19c59d5f9813fa675d4f86f7d5cdf8d47fd","typeString":"literal_string \"Percent distribution issue.\""}],"id":9608,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5122:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5122:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9614,"nodeType":"ExpressionStatement","src":"5122:70:28"}]},"documentation":{"id":9519,"nodeType":"StructuredDocumentation","src":"4171:50:28","text":"@notice         Function to set vesting params"},"functionSelector":"d937d456","id":9616,"implemented":true,"kind":"function","modifiers":[{"id":9530,"kind":"modifierInvocation","modifierName":{"id":9529,"name":"onlyAdmin","nameLocations":["4383:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"4383:9:28"},"nodeType":"ModifierInvocation","src":"4383:9:28"}],"name":"setVestingParams","nameLocation":"4235:16:28","nodeType":"FunctionDefinition","parameters":{"id":9528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9522,"mutability":"mutable","name":"_unlockingTimes","nameLocation":"4278:15:28","nodeType":"VariableDeclaration","scope":9616,"src":"4261:32:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4261:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9521,"nodeType":"ArrayTypeName","src":"4261:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9525,"mutability":"mutable","name":"_percents","nameLocation":"4320:9:28","nodeType":"VariableDeclaration","scope":9616,"src":"4303:26:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9523,"name":"uint256","nodeType":"ElementaryTypeName","src":"4303:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9524,"nodeType":"ArrayTypeName","src":"4303:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":9527,"mutability":"mutable","name":"_maxVestingTimeShift","nameLocation":"4347:20:28","nodeType":"VariableDeclaration","scope":9616,"src":"4339:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9526,"name":"uint256","nodeType":"ElementaryTypeName","src":"4339:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4251:122:28"},"returnParameters":{"id":9531,"nodeType":"ParameterList","parameters":[],"src":"4393:0:28"},"scope":10859,"src":"4226:973:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9661,"nodeType":"Block","src":"5293:421:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9624,"name":"timeToShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"5324:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5338:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5324:15:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9627,"name":"timeToShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"5343:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9628,"name":"maxVestingTimeShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"5357:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5343:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5324:52:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5368696674206d757374206265206e6f6e7a65726f20616e6420736d616c6c6572207468616e206d617856657374696e6754696d6553686966742e","id":9631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5390:61:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb9e397fb2044e5c8e4c320e636628ae63febabccdaf65a374653ab0326b41af","typeString":"literal_string \"Shift must be nonzero and smaller than maxVestingTimeShift.\""},"value":"Shift must be nonzero and smaller than maxVestingTimeShift."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb9e397fb2044e5c8e4c320e636628ae63febabccdaf65a374653ab0326b41af","typeString":"literal_string \"Shift must be nonzero and smaller than maxVestingTimeShift.\""}],"id":9623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5303:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5303:158:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9633,"nodeType":"ExpressionStatement","src":"5303:158:28"},{"expression":{"id":9636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9634,"name":"maxVestingTimeShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9403,"src":"5514:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":9635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5536:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5514:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9637,"nodeType":"ExpressionStatement","src":"5514:23:28"},{"body":{"id":9659,"nodeType":"Block","src":"5611:97:28","statements":[{"expression":{"id":9657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9649,"name":"vestingPortionsUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"5625:25:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9651,"indexExpression":{"id":9650,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9639,"src":"5651:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5625:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9652,"name":"vestingPortionsUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"5656:25:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9654,"indexExpression":{"id":9653,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9639,"src":"5682:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5656:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9655,"name":"timeToShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"5686:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5656:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5625:72:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9658,"nodeType":"ExpressionStatement","src":"5625:72:28"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9642,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9639,"src":"5568:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9643,"name":"vestingPortionsUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"5572:25:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5598:6:28","memberName":"length","nodeType":"MemberAccess","src":"5572:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5568:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9660,"initializationExpression":{"assignments":[9639],"declarations":[{"constant":false,"id":9639,"mutability":"mutable","name":"i","nameLocation":"5561:1:28","nodeType":"VariableDeclaration","scope":9660,"src":"5553:9:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9638,"name":"uint256","nodeType":"ElementaryTypeName","src":"5553:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9641,"initialValue":{"hexValue":"30","id":9640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5565:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5553:13:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":9647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5606:3:28","subExpression":{"id":9646,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9639,"src":"5606:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9648,"nodeType":"ExpressionStatement","src":"5606:3:28"},"nodeType":"ForStatement","src":"5548:160:28"}]},"functionSelector":"abee6927","id":9662,"implemented":true,"kind":"function","modifiers":[{"id":9621,"kind":"modifierInvocation","modifierName":{"id":9620,"name":"onlyAdmin","nameLocations":["5279:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"5279:9:28"},"nodeType":"ModifierInvocation","src":"5279:9:28"}],"name":"shiftVestingUnlockingTimes","nameLocation":"5214:26:28","nodeType":"FunctionDefinition","parameters":{"id":9619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9618,"mutability":"mutable","name":"timeToShift","nameLocation":"5249:11:28","nodeType":"VariableDeclaration","scope":9662,"src":"5241:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9617,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5240:21:28"},"returnParameters":{"id":9622,"nodeType":"ParameterList","parameters":[],"src":"5293:0:28"},"scope":10859,"src":"5205:509:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9798,"nodeType":"Block","src":"6089:1220:28","statements":[{"expression":{"arguments":[{"id":9687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6107:15:28","subExpression":{"expression":{"id":9685,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6108:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6113:9:28","memberName":"isCreated","nodeType":"MemberAccess","referencedDeclaration":9330,"src":"6108:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73657453616c65506172616d733a2053616c6520697320616c726561647920637265617465642e","id":9688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6124:41:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_af8eb1ed553847e56a9274b118b685972cea4a53f70ffb2dbf0ad3d0dff1c7e2","typeString":"literal_string \"setSaleParams: Sale is already created.\""},"value":"setSaleParams: Sale is already created."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_af8eb1ed553847e56a9274b118b685972cea4a53f70ffb2dbf0ad3d0dff1c7e2","typeString":"literal_string \"setSaleParams: Sale is already created.\""}],"id":9684,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6099:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:67:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9690,"nodeType":"ExpressionStatement","src":"6099:67:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9692,"name":"_saleOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9667,"src":"6197:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":9695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6219:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6211:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9693,"name":"address","nodeType":"ElementaryTypeName","src":"6211:7:28","typeDescriptions":{}}},"id":9696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6211:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6197:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73657453616c65506172616d733a2053616c65206f776e657220616464726573732063616e206e6f7420626520302e","id":9698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6235:49:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5dff9ce996bf5e52910e6e698ca68c62b45f800ce95fead9f3eb6bfa2ddfb82","typeString":"literal_string \"setSaleParams: Sale owner address can not be 0.\""},"value":"setSaleParams: Sale owner address can not be 0."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f5dff9ce996bf5e52910e6e698ca68c62b45f800ce95fead9f3eb6bfa2ddfb82","typeString":"literal_string \"setSaleParams: Sale owner address can not be 0.\""}],"id":9691,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6176:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6176:118:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9700,"nodeType":"ExpressionStatement","src":"6176:118:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9702,"name":"_tokenPriceInETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"6325:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6325:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9705,"name":"_amountOfTokensToSell","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9671,"src":"6362:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6387:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6362:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6325:63:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9709,"name":"_saleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9673,"src":"6404:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9710,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6415:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6421:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"6415:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6404:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6325:105:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9714,"name":"_tokensUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"6446:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9715,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6466:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6472:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"6466:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6446:35:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6325:156:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9719,"name":"_maxParticipation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9679,"src":"6497:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6517:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6497:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6325:193:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73657453616c65506172616d733a2042616420696e707574","id":9723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6532:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d156a71e097d0a26ae12a4d14e6f0daad7d17a15bda99cd9725482700537ee3f","typeString":"literal_string \"setSaleParams: Bad input\""},"value":"setSaleParams: Bad input"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d156a71e097d0a26ae12a4d14e6f0daad7d17a15bda99cd9725482700537ee3f","typeString":"literal_string \"setSaleParams: Bad input\""}],"id":9701,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6304:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6304:264:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9725,"nodeType":"ExpressionStatement","src":"6304:264:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9727,"name":"_portionVestingPrecision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"6586:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313030","id":9728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6614:3:28","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"6586:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53686f756c64206265206174206c6561737420313030","id":9730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6619:24:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac3e095c56b9a1a43e01928743f90303ddd87b23bdb5c82ee864f4296d0f7d38","typeString":"literal_string \"Should be at least 100\""},"value":"Should be at least 100"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ac3e095c56b9a1a43e01928743f90303ddd87b23bdb5c82ee864f4296d0f7d38","typeString":"literal_string \"Should be at least 100\""}],"id":9726,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"6578:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6578:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9732,"nodeType":"ExpressionStatement","src":"6578:66:28"},{"expression":{"id":9739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9733,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6677:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9735,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6682:5:28","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9328,"src":"6677:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9737,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9665,"src":"6697:6:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9736,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"6690:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1466_$","typeString":"type(contract IERC20)"}},"id":9738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6690:14:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"src":"6677:27:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":9740,"nodeType":"ExpressionStatement","src":"6677:27:28"},{"expression":{"id":9745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9741,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6714:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6719:9:28","memberName":"isCreated","nodeType":"MemberAccess","referencedDeclaration":9330,"src":"6714:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6731:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6714:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9746,"nodeType":"ExpressionStatement","src":"6714:21:28"},{"expression":{"id":9751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9747,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6745:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6750:9:28","memberName":"saleOwner","nodeType":"MemberAccess","referencedDeclaration":9338,"src":"6745:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9750,"name":"_saleOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9667,"src":"6762:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6745:27:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9752,"nodeType":"ExpressionStatement","src":"6745:27:28"},{"expression":{"id":9757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9753,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6782:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6787:15:28","memberName":"tokenPriceInETH","nodeType":"MemberAccess","referencedDeclaration":9340,"src":"6782:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9756,"name":"_tokenPriceInETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9669,"src":"6805:16:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6782:39:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9758,"nodeType":"ExpressionStatement","src":"6782:39:28"},{"expression":{"id":9763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9759,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6831:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9761,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6836:20:28","memberName":"amountOfTokensToSell","nodeType":"MemberAccess","referencedDeclaration":9342,"src":"6831:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9762,"name":"_amountOfTokensToSell","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9671,"src":"6859:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6831:49:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9764,"nodeType":"ExpressionStatement","src":"6831:49:28"},{"expression":{"id":9769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9765,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6890:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6895:7:28","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":9350,"src":"6890:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9768,"name":"_saleEnd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9673,"src":"6905:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6890:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9770,"nodeType":"ExpressionStatement","src":"6890:23:28"},{"expression":{"id":9775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9771,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6923:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9773,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6928:16:28","memberName":"tokensUnlockTime","nodeType":"MemberAccess","referencedDeclaration":9352,"src":"6923:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9774,"name":"_tokensUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9675,"src":"6947:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6923:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9776,"nodeType":"ExpressionStatement","src":"6923:41:28"},{"expression":{"id":9781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9777,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"6974:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9779,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6979:16:28","memberName":"maxParticipation","nodeType":"MemberAccess","referencedDeclaration":9354,"src":"6974:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9780,"name":"_maxParticipation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9679,"src":"6998:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6974:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9782,"nodeType":"ExpressionStatement","src":"6974:41:28"},{"expression":{"id":9785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9783,"name":"portionVestingPrecision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9401,"src":"7067:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9784,"name":"_portionVestingPrecision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9677,"src":"7093:24:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7067:50:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9786,"nodeType":"ExpressionStatement","src":"7067:50:28"},{"eventCall":{"arguments":[{"expression":{"id":9788,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7179:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9789,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7184:9:28","memberName":"saleOwner","nodeType":"MemberAccess","referencedDeclaration":9338,"src":"7179:14:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9790,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7207:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7212:15:28","memberName":"tokenPriceInETH","nodeType":"MemberAccess","referencedDeclaration":9340,"src":"7207:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9792,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7241:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9793,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7246:20:28","memberName":"amountOfTokensToSell","nodeType":"MemberAccess","referencedDeclaration":9342,"src":"7241:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9794,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7280:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7285:7:28","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":9350,"src":"7280:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9787,"name":"SaleCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9463,"src":"7154:11:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256)"}},"id":9796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7154:148:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9797,"nodeType":"EmitStatement","src":"7149:153:28"}]},"documentation":{"id":9663,"nodeType":"StructuredDocumentation","src":"5720:53:28","text":"@notice     Admin function to set sale parameters"},"functionSelector":"c4fbe091","id":9799,"implemented":true,"kind":"function","modifiers":[{"id":9682,"kind":"modifierInvocation","modifierName":{"id":9681,"name":"onlyAdmin","nameLocations":["6079:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"6079:9:28"},"nodeType":"ModifierInvocation","src":"6079:9:28"}],"name":"setSaleParams","nameLocation":"5787:13:28","nodeType":"FunctionDefinition","parameters":{"id":9680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9665,"mutability":"mutable","name":"_token","nameLocation":"5818:6:28","nodeType":"VariableDeclaration","scope":9799,"src":"5810:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9664,"name":"address","nodeType":"ElementaryTypeName","src":"5810:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9667,"mutability":"mutable","name":"_saleOwner","nameLocation":"5842:10:28","nodeType":"VariableDeclaration","scope":9799,"src":"5834:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9666,"name":"address","nodeType":"ElementaryTypeName","src":"5834:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9669,"mutability":"mutable","name":"_tokenPriceInETH","nameLocation":"5870:16:28","nodeType":"VariableDeclaration","scope":9799,"src":"5862:24:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9668,"name":"uint256","nodeType":"ElementaryTypeName","src":"5862:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9671,"mutability":"mutable","name":"_amountOfTokensToSell","nameLocation":"5904:21:28","nodeType":"VariableDeclaration","scope":9799,"src":"5896:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9670,"name":"uint256","nodeType":"ElementaryTypeName","src":"5896:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9673,"mutability":"mutable","name":"_saleEnd","nameLocation":"5943:8:28","nodeType":"VariableDeclaration","scope":9799,"src":"5935:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9672,"name":"uint256","nodeType":"ElementaryTypeName","src":"5935:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9675,"mutability":"mutable","name":"_tokensUnlockTime","nameLocation":"5969:17:28","nodeType":"VariableDeclaration","scope":9799,"src":"5961:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5961:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9677,"mutability":"mutable","name":"_portionVestingPrecision","nameLocation":"6004:24:28","nodeType":"VariableDeclaration","scope":9799,"src":"5996:32:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9676,"name":"uint256","nodeType":"ElementaryTypeName","src":"5996:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9679,"mutability":"mutable","name":"_maxParticipation","nameLocation":"6046:17:28","nodeType":"VariableDeclaration","scope":9799,"src":"6038:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9678,"name":"uint256","nodeType":"ElementaryTypeName","src":"6038:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5800:269:28"},"returnParameters":{"id":9683,"nodeType":"ParameterList","parameters":[],"src":"6089:0:28"},"scope":10859,"src":"5778:1531:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9827,"nodeType":"Block","src":"7664:99:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"expression":{"id":9809,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7690:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7695:5:28","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9328,"src":"7690:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}],"id":9808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7682:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9807,"name":"address","nodeType":"ElementaryTypeName","src":"7682:7:28","typeDescriptions":{}}},"id":9811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7682:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7705:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9812,"name":"address","nodeType":"ElementaryTypeName","src":"7705:7:28","typeDescriptions":{}}},"id":9815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7705:10:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7682:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9806,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7674:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7674:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9818,"nodeType":"ExpressionStatement","src":"7674:42:28"},{"expression":{"id":9825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9819,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7726:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7731:5:28","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9328,"src":"7726:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9823,"name":"saleToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9801,"src":"7746:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9822,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"7739:6:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1466_$","typeString":"type(contract IERC20)"}},"id":9824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7739:17:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"src":"7726:30:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":9826,"nodeType":"ExpressionStatement","src":"7726:30:28"}]},"functionSelector":"a29f481c","id":9828,"implemented":true,"kind":"function","modifiers":[{"id":9804,"kind":"modifierInvocation","modifierName":{"id":9803,"name":"onlyAdmin","nameLocations":["7650:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"7650:9:28"},"nodeType":"ModifierInvocation","src":"7650:9:28"}],"name":"setSaleToken","nameLocation":"7587:12:28","nodeType":"FunctionDefinition","parameters":{"id":9802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9801,"mutability":"mutable","name":"saleToken","nameLocation":"7617:9:28","nodeType":"VariableDeclaration","scope":9828,"src":"7609:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9800,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7599:33:28"},"returnParameters":{"id":9805,"nodeType":"ParameterList","parameters":[],"src":"7664:0:28"},"scope":10859,"src":"7578:185:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9901,"nodeType":"Block","src":"7971:743:28","statements":[{"expression":{"arguments":[{"expression":{"id":9839,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"7989:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7994:9:28","memberName":"isCreated","nodeType":"MemberAccess","referencedDeclaration":9330,"src":"7989:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9838,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"7981:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7981:23:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9842,"nodeType":"ExpressionStatement","src":"7981:23:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9844,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"8022:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":9845,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8035:22:28","memberName":"registrationTimeStarts","nodeType":"MemberAccess","referencedDeclaration":9367,"src":"8022:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8022:40:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9843,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8014:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8014:49:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9849,"nodeType":"ExpressionStatement","src":"8014:49:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9851,"name":"_registrationTimeStarts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"8094:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9852,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8121:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8127:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"8121:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8094:42:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9855,"name":"_registrationTimeEnds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9833,"src":"8152:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9856,"name":"_registrationTimeStarts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"8176:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8152:47:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8094:105:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9850,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8073:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8073:136:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9860,"nodeType":"ExpressionStatement","src":"8073:136:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9862,"name":"_registrationTimeEnds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9833,"src":"8227:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9863,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"8251:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9864,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8256:7:28","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":9350,"src":"8251:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8227:36:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9861,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8219:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":9866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8219:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9867,"nodeType":"ExpressionStatement","src":"8219:45:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9868,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"8279:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9869,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8284:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"8279:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8296:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8279:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9881,"nodeType":"IfStatement","src":"8275:153:28","trueBody":{"id":9880,"nodeType":"Block","src":"8299:129:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9873,"name":"_registrationTimeEnds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9833,"src":"8321:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9874,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"8345:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8350:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"8345:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8321:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"726567697374726174696f6e54696d65456e6473203e3d2073616c652e73616c655374617274206973206e6f7420616c6c6f776564","id":9877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8361:55:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_69175eee96c622aaf6ddff0a8e92baa3f3b9fbbf574c75f08e666f1c4ad1dce6","typeString":"literal_string \"registrationTimeEnds >= sale.saleStart is not allowed\""},"value":"registrationTimeEnds >= sale.saleStart is not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_69175eee96c622aaf6ddff0a8e92baa3f3b9fbbf574c75f08e666f1c4ad1dce6","typeString":"literal_string \"registrationTimeEnds >= sale.saleStart is not allowed\""}],"id":9872,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8313:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8313:104:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9879,"nodeType":"ExpressionStatement","src":"8313:104:28"}]}},{"expression":{"id":9886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9882,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"8438:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":9884,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8451:22:28","memberName":"registrationTimeStarts","nodeType":"MemberAccess","referencedDeclaration":9367,"src":"8438:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9885,"name":"_registrationTimeStarts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9831,"src":"8476:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8438:61:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9887,"nodeType":"ExpressionStatement","src":"8438:61:28"},{"expression":{"id":9892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9888,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"8509:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":9890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8522:20:28","memberName":"registrationTimeEnds","nodeType":"MemberAccess","referencedDeclaration":9369,"src":"8509:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9891,"name":"_registrationTimeEnds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9833,"src":"8545:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8509:57:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9893,"nodeType":"ExpressionStatement","src":"8509:57:28"},{"eventCall":{"arguments":[{"expression":{"id":9895,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"8615:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":9896,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8628:22:28","memberName":"registrationTimeStarts","nodeType":"MemberAccess","referencedDeclaration":9367,"src":"8615:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9897,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"8664:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":9898,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8677:20:28","memberName":"registrationTimeEnds","nodeType":"MemberAccess","referencedDeclaration":9369,"src":"8664:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9894,"name":"RegistrationTimeSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9473,"src":"8582:19:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":9899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8582:125:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9900,"nodeType":"EmitStatement","src":"8577:130:28"}]},"documentation":{"id":9829,"nodeType":"StructuredDocumentation","src":"7770:62:28","text":"@notice     Function to set registration period parameters"},"functionSelector":"e099cf64","id":9902,"implemented":true,"kind":"function","modifiers":[{"id":9836,"kind":"modifierInvocation","modifierName":{"id":9835,"name":"onlyAdmin","nameLocations":["7961:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"7961:9:28"},"nodeType":"ModifierInvocation","src":"7961:9:28"}],"name":"setRegistrationTime","nameLocation":"7846:19:28","nodeType":"FunctionDefinition","parameters":{"id":9834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9831,"mutability":"mutable","name":"_registrationTimeStarts","nameLocation":"7883:23:28","nodeType":"VariableDeclaration","scope":9902,"src":"7875:31:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9830,"name":"uint256","nodeType":"ElementaryTypeName","src":"7875:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9833,"mutability":"mutable","name":"_registrationTimeEnds","nameLocation":"7924:21:28","nodeType":"VariableDeclaration","scope":9902,"src":"7916:29:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9832,"name":"uint256","nodeType":"ElementaryTypeName","src":"7916:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7865:86:28"},"returnParameters":{"id":9837,"nodeType":"ParameterList","parameters":[],"src":"7971:0:28"},"scope":10859,"src":"7837:877:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9958,"nodeType":"Block","src":"8793:535:28","statements":[{"expression":{"arguments":[{"expression":{"id":9910,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"8811:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9911,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8816:9:28","memberName":"isCreated","nodeType":"MemberAccess","referencedDeclaration":9330,"src":"8811:14:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73616c65206973206e6f7420637265617465642e","id":9912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8827:22:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_93287a6a28ad5d70221634c08ea808473f464b8bbb2459d9e40e0530a1c2b7c6","typeString":"literal_string \"sale is not created.\""},"value":"sale is not created."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93287a6a28ad5d70221634c08ea808473f464b8bbb2459d9e40e0530a1c2b7c6","typeString":"literal_string \"sale is not created.\""}],"id":9909,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8803:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8803:47:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9914,"nodeType":"ExpressionStatement","src":"8803:47:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9916,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"8868:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8873:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"8868:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8868:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73657453616c6553746172743a207374617254696d652069732073657420616c72656164792e","id":9920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8889:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_6be5337b238c9b0d89723dce30932b51d06434cfb4c395a0007a79d60f070467","typeString":"literal_string \"setSaleStart: starTime is set already.\""},"value":"setSaleStart: starTime is set already."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6be5337b238c9b0d89723dce30932b51d06434cfb4c395a0007a79d60f070467","typeString":"literal_string \"setSaleStart: starTime is set already.\""}],"id":9915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8860:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8860:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9922,"nodeType":"ExpressionStatement","src":"8860:70:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9924,"name":"starTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9904,"src":"8948:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":9925,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"8959:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":9926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8972:20:28","memberName":"registrationTimeEnds","nodeType":"MemberAccess","referencedDeclaration":9369,"src":"8959:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8948:44:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73746172742074696d652073686f756c642067726561746572207468616e20726567697374726174696f6e54696d65456e64732e","id":9928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8994:54:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebc45a2915a4e26e9b486bfdb2290c6fced3bfae1828d3b0605f6016f9967db5","typeString":"literal_string \"start time should greater than registrationTimeEnds.\""},"value":"start time should greater than registrationTimeEnds."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebc45a2915a4e26e9b486bfdb2290c6fced3bfae1828d3b0605f6016f9967db5","typeString":"literal_string \"start time should greater than registrationTimeEnds.\""}],"id":9923,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"8940:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8940:109:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9930,"nodeType":"ExpressionStatement","src":"8940:109:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9932,"name":"starTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9904,"src":"9067:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":9933,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"9078:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9934,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9083:7:28","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":9350,"src":"9078:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9067:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73746172742074696d652073686f756c64206c657373207468616e2073616c65456e642074696d65","id":9936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9092:42:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_01af0ba41caa6a63b0e2ff7059ac9f6394aaa217024d707128010ae985f6c209","typeString":"literal_string \"start time should less than saleEnd time\""},"value":"start time should less than saleEnd time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_01af0ba41caa6a63b0e2ff7059ac9f6394aaa217024d707128010ae985f6c209","typeString":"literal_string \"start time should less than saleEnd time\""}],"id":9931,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9059:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9059:76:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9938,"nodeType":"ExpressionStatement","src":"9059:76:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9940,"name":"starTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9904,"src":"9153:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9941,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9165:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9171:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"9165:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9153:27:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73746172742074696d652073686f756c6420626520696e20746865206675747572652e","id":9944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9182:37:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e47babc02d71686cbdc840461d7e75fc916c47a887b733075c19309a530de4f","typeString":"literal_string \"start time should be in the future.\""},"value":"start time should be in the future."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e47babc02d71686cbdc840461d7e75fc916c47a887b733075c19309a530de4f","typeString":"literal_string \"start time should be in the future.\""}],"id":9939,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9145:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9145:75:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9946,"nodeType":"ExpressionStatement","src":"9145:75:28"},{"expression":{"id":9951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9947,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"9230:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9949,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9235:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"9230:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9950,"name":"starTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9904,"src":"9247:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9230:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9952,"nodeType":"ExpressionStatement","src":"9230:25:28"},{"eventCall":{"arguments":[{"expression":{"id":9954,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"9306:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":9955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9311:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"9306:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9953,"name":"StartTimeSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9467,"src":"9293:12:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":9956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9293:28:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9957,"nodeType":"EmitStatement","src":"9288:33:28"}]},"functionSelector":"2f181f54","id":9959,"implemented":true,"kind":"function","modifiers":[{"id":9907,"kind":"modifierInvocation","modifierName":{"id":9906,"name":"onlyAdmin","nameLocations":["8783:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"8783:9:28"},"nodeType":"ModifierInvocation","src":"8783:9:28"}],"name":"setSaleStart","nameLocation":"8729:12:28","nodeType":"FunctionDefinition","parameters":{"id":9905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9904,"mutability":"mutable","name":"starTime","nameLocation":"8759:8:28","nodeType":"VariableDeclaration","scope":9959,"src":"8751:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9903,"name":"uint256","nodeType":"ElementaryTypeName","src":"8751:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8741:32:28"},"returnParameters":{"id":9908,"nodeType":"ParameterList","parameters":[],"src":"8793:0:28"},"scope":10859,"src":"8720:608:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10027,"nodeType":"Block","src":"9523:818:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9968,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9554:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9560:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"9554:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":9970,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"9573:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":9971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9586:22:28","memberName":"registrationTimeStarts","nodeType":"MemberAccess","referencedDeclaration":9367,"src":"9573:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9554:54:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":9973,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9624:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9630:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"9624:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":9975,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"9643:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":9976,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9656:20:28","memberName":"registrationTimeEnds","nodeType":"MemberAccess","referencedDeclaration":9369,"src":"9643:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9624:52:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9554:122:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526567697374726174696f6e206761746520697320636c6f7365642e","id":9979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9690:30:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a0b9ba5c07e60c9652443a317f43cce79488b7273d9abcc141736f89e01130b8","typeString":"literal_string \"Registration gate is closed.\""},"value":"Registration gate is closed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a0b9ba5c07e60c9652443a317f43cce79488b7273d9abcc141736f89e01130b8","typeString":"literal_string \"Registration gate is closed.\""}],"id":9967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9533:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9533:197:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9981,"nodeType":"ExpressionStatement","src":"9533:197:28"},{"expression":{"arguments":[{"arguments":[{"id":9984,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9962,"src":"9788:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":9985,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9799:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9803:6:28","memberName":"sender","nodeType":"MemberAccess","src":"9799:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"}],"id":9983,"name":"checkRegistrationSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10737,"src":"9761:26:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_address_$returns$_t_bool_$","typeString":"function (bytes memory,address) view returns (bool)"}},"id":9987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9761:49:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e6174757265","id":9988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9824:19:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""},"value":"Invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7","typeString":"literal_string \"Invalid signature\""}],"id":9982,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9740:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9740:113:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9990,"nodeType":"ExpressionStatement","src":"9740:113:28"},{"expression":{"arguments":[{"id":9996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9884:25:28","subExpression":{"baseExpression":{"id":9992,"name":"isRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"9885:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9995,"indexExpression":{"expression":{"id":9993,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9898:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9902:6:28","memberName":"sender","nodeType":"MemberAccess","src":"9898:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9885:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365722063616e206e6f742072656769737465722074776963652e","id":9997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9923:30:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_96e0ffd0556f4faac5625abd34eb3c9531bca2db0e83d9bfe570f0d18ee2ed92","typeString":"literal_string \"User can not register twice.\""},"value":"User can not register twice."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96e0ffd0556f4faac5625abd34eb3c9531bca2db0e83d9bfe570f0d18ee2ed92","typeString":"literal_string \"User can not register twice.\""}],"id":9991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"9863:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9863:100:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9999,"nodeType":"ExpressionStatement","src":"9863:100:28"},{"expression":{"id":10005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10000,"name":"isRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"9973:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10003,"indexExpression":{"expression":{"id":10001,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9986:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9990:6:28","memberName":"sender","nodeType":"MemberAccess","src":"9986:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9973:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10000:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9973:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10006,"nodeType":"ExpressionStatement","src":"9973:31:28"},{"expression":{"arguments":[{"id":10010,"name":"pid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9964,"src":"10102:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10011,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10119:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10123:6:28","memberName":"sender","nodeType":"MemberAccess","src":"10119:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10013,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"10143:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10148:7:28","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":9350,"src":"10143:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":10007,"name":"allocationStakingContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9319,"src":"10043:25:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAllocationStaking_$8154","typeString":"contract IAllocationStaking"}},"id":10009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10069:19:28","memberName":"setTokensUnlockTime","nodeType":"MemberAccess","referencedDeclaration":8153,"src":"10043:45:28","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256) external"}},"id":10015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10043:122:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10016,"nodeType":"ExpressionStatement","src":"10043:122:28"},{"expression":{"id":10020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10224:34:28","subExpression":{"expression":{"id":10017,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"10224:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":10019,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10237:19:28","memberName":"numberOfRegistrants","nodeType":"MemberAccess","referencedDeclaration":9371,"src":"10224:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10021,"nodeType":"ExpressionStatement","src":"10224:34:28"},{"eventCall":{"arguments":[{"expression":{"id":10023,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10323:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10327:6:28","memberName":"sender","nodeType":"MemberAccess","src":"10323:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10022,"name":"UserRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9439,"src":"10308:14:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10308:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10026,"nodeType":"EmitStatement","src":"10303:31:28"}]},"documentation":{"id":9960,"nodeType":"StructuredDocumentation","src":"9334:105:28","text":"@notice     Registration for sale.\n @param      signature is the message signed by the backend"},"functionSelector":"e9d8479e","id":10028,"implemented":true,"kind":"function","modifiers":[],"name":"registerForSale","nameLocation":"9453:15:28","nodeType":"FunctionDefinition","parameters":{"id":9965,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9962,"mutability":"mutable","name":"signature","nameLocation":"9482:9:28","nodeType":"VariableDeclaration","scope":10028,"src":"9469:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":9961,"name":"bytes","nodeType":"ElementaryTypeName","src":"9469:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":9964,"mutability":"mutable","name":"pid","nameLocation":"9501:3:28","nodeType":"VariableDeclaration","scope":10028,"src":"9493:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9963,"name":"uint256","nodeType":"ElementaryTypeName","src":"9493:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9468:37:28"},"returnParameters":{"id":9966,"nodeType":"ParameterList","parameters":[],"src":"9523:0:28"},"scope":10859,"src":"9444:897:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10053,"nodeType":"Block","src":"10742:191:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10037,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"10760:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10768:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10760:9:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726963652063616e206e6f7420626520302e","id":10040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10771:21:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_f542fd6e5c0fb747d34dcbe087e8143febf8301e25cc37be3585b57479ceff1f","typeString":"literal_string \"Price can not be 0.\""},"value":"Price can not be 0."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f542fd6e5c0fb747d34dcbe087e8143febf8301e25cc37be3585b57479ceff1f","typeString":"literal_string \"Price can not be 0.\""}],"id":10036,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"10752:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10752:41:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10042,"nodeType":"ExpressionStatement","src":"10752:41:28"},{"expression":{"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10043,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"10863:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"10868:15:28","memberName":"tokenPriceInETH","nodeType":"MemberAccess","referencedDeclaration":9340,"src":"10863:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10046,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"10886:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10863:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10048,"nodeType":"ExpressionStatement","src":"10863:28:28"},{"eventCall":{"arguments":[{"id":10050,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"10920:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10049,"name":"TokenPriceSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9443,"src":"10906:13:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10906:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10052,"nodeType":"EmitStatement","src":"10901:25:28"}]},"documentation":{"id":10029,"nodeType":"StructuredDocumentation","src":"10347:325:28","text":"@notice     Admin function, to update token price before sale to match the closest $ desired rate.\n @dev        This will be updated with an oracle during the sale every N minutes, so the users will always\n             pay initialy set $ value of the token. This is to reduce reliance on the ETH volatility."},"functionSelector":"7843990a","id":10054,"implemented":true,"kind":"function","modifiers":[{"id":10034,"kind":"modifierInvocation","modifierName":{"id":10033,"name":"onlyAdmin","nameLocations":["10732:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"10732:9:28"},"nodeType":"ModifierInvocation","src":"10732:9:28"}],"name":"updateTokenPriceInETH","nameLocation":"10686:21:28","nodeType":"FunctionDefinition","parameters":{"id":10032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10031,"mutability":"mutable","name":"price","nameLocation":"10716:5:28","nodeType":"VariableDeclaration","scope":10054,"src":"10708:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10030,"name":"uint256","nodeType":"ElementaryTypeName","src":"10708:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10707:15:28"},"returnParameters":{"id":10035,"nodeType":"ParameterList","parameters":[],"src":"10742:0:28"},"scope":10859,"src":"10677:256:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10091,"nodeType":"Block","src":"11057:359:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10063,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11088:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11094:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"11088:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10065,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"11106:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11111:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"11106:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11088:32:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73616c6520616c726561647920737461727465642e","id":10068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11134:23:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1b79c00dc0542bb1be01bb4b3cfc97eb5ca97ee2fa1512c3352b64f521039d7","typeString":"literal_string \"sale already started.\""},"value":"sale already started."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1b79c00dc0542bb1be01bb4b3cfc97eb5ca97ee2fa1512c3352b64f521039d7","typeString":"literal_string \"sale already started.\""}],"id":10062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11067:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11067:100:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10070,"nodeType":"ExpressionStatement","src":"11067:100:28"},{"expression":{"id":10078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10071,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"11222:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11227:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"11222:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10074,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"11239:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10075,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11244:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"11239:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10076,"name":"timeToShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"11254:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11239:26:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11222:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10079,"nodeType":"ExpressionStatement","src":"11222:43:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10081,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"11296:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10082,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11301:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"11296:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10083,"name":"timeToShift","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10057,"src":"11313:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11296:28:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10085,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"11327:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11332:7:28","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":9350,"src":"11327:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11296:43:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53746172742074696d652063616e206e6f742062652067726561746572207468616e20656e642074696d652e","id":10088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11353:46:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f51810ff27c07286b0ee44fde75024df627bc0c4463eda4e37345a34d36ba04","typeString":"literal_string \"Start time can not be greater than end time.\""},"value":"Start time can not be greater than end time."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5f51810ff27c07286b0ee44fde75024df627bc0c4463eda4e37345a34d36ba04","typeString":"literal_string \"Start time can not be greater than end time.\""}],"id":10080,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11275:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11275:134:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10090,"nodeType":"ExpressionStatement","src":"11275:134:28"}]},"documentation":{"id":10055,"nodeType":"StructuredDocumentation","src":"10939:51:28","text":"@notice     Admin function to postpone the sale"},"functionSelector":"1f11cb1e","id":10092,"implemented":true,"kind":"function","modifiers":[{"id":10060,"kind":"modifierInvocation","modifierName":{"id":10059,"name":"onlyAdmin","nameLocations":["11047:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"11047:9:28"},"nodeType":"ModifierInvocation","src":"11047:9:28"}],"name":"postponeSale","nameLocation":"11004:12:28","nodeType":"FunctionDefinition","parameters":{"id":10058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10057,"mutability":"mutable","name":"timeToShift","nameLocation":"11025:11:28","nodeType":"VariableDeclaration","scope":10092,"src":"11017:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10056,"name":"uint256","nodeType":"ElementaryTypeName","src":"11017:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11016:21:28"},"returnParameters":{"id":10061,"nodeType":"ParameterList","parameters":[],"src":"11057:0:28"},"scope":10859,"src":"10995:421:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10120,"nodeType":"Block","src":"11553:267:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10101,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"11584:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":10102,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11597:20:28","memberName":"registrationTimeEnds","nodeType":"MemberAccess","referencedDeclaration":9369,"src":"11584:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10103,"name":"timeToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10095,"src":"11618:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11584:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10105,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"11642:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11647:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"11642:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11584:72:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526567697374726174696f6e20706572696f64206f766572666c6f77732073616c652073746172742e","id":10108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11670:43:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a207f96b83fc95b6d60f37c8b083423bb8e128143647ef2e4973bc1080b1eb49","typeString":"literal_string \"Registration period overflows sale start.\""},"value":"Registration period overflows sale start."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a207f96b83fc95b6d60f37c8b083423bb8e128143647ef2e4973bc1080b1eb49","typeString":"literal_string \"Registration period overflows sale start.\""}],"id":10100,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11563:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11563:160:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10110,"nodeType":"ExpressionStatement","src":"11563:160:28"},{"expression":{"id":10118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10111,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"11734:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":10113,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"11747:20:28","memberName":"registrationTimeEnds","nodeType":"MemberAccess","referencedDeclaration":9369,"src":"11734:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10114,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"11770:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":10115,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11783:20:28","memberName":"registrationTimeEnds","nodeType":"MemberAccess","referencedDeclaration":9369,"src":"11770:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10116,"name":"timeToAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10095,"src":"11804:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11770:43:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11734:79:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10119,"nodeType":"ExpressionStatement","src":"11734:79:28"}]},"documentation":{"id":10093,"nodeType":"StructuredDocumentation","src":"11422:54:28","text":"@notice     Function to extend registration period"},"functionSelector":"5164d871","id":10121,"implemented":true,"kind":"function","modifiers":[{"id":10098,"kind":"modifierInvocation","modifierName":{"id":10097,"name":"onlyAdmin","nameLocations":["11543:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"11543:9:28"},"nodeType":"ModifierInvocation","src":"11543:9:28"}],"name":"extendRegistrationPeriod","nameLocation":"11490:24:28","nodeType":"FunctionDefinition","parameters":{"id":10096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10095,"mutability":"mutable","name":"timeToAdd","nameLocation":"11523:9:28","nodeType":"VariableDeclaration","scope":10121,"src":"11515:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10094,"name":"uint256","nodeType":"ElementaryTypeName","src":"11515:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11514:19:28"},"returnParameters":{"id":10099,"nodeType":"ParameterList","parameters":[],"src":"11553:0:28"},"scope":10859,"src":"11481:339:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10156,"nodeType":"Block","src":"11964:276:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10130,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11995:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12001:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"11995:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10132,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"12013:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12018:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"12013:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11995:32:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73616c6520616c726561647920737461727465642e","id":10135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12041:23:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a1b79c00dc0542bb1be01bb4b3cfc97eb5ca97ee2fa1512c3352b64f521039d7","typeString":"literal_string \"sale already started.\""},"value":"sale already started."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a1b79c00dc0542bb1be01bb4b3cfc97eb5ca97ee2fa1512c3352b64f521039d7","typeString":"literal_string \"sale already started.\""}],"id":10129,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"11974:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11974:100:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10137,"nodeType":"ExpressionStatement","src":"11974:100:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10139,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10124,"src":"12093:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12099:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12093:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e277420736574206d61782070617274696369706174696f6e20746f2030","id":10142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12102:34:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_186e992977360ba3cada5339756176839751528ed95471b19e5fa3f7527ab31a","typeString":"literal_string \"Can't set max participation to 0\""},"value":"Can't set max participation to 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_186e992977360ba3cada5339756176839751528ed95471b19e5fa3f7527ab31a","typeString":"literal_string \"Can't set max participation to 0\""}],"id":10138,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12085:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12085:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10144,"nodeType":"ExpressionStatement","src":"12085:52:28"},{"expression":{"id":10149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10145,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"12148:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12153:16:28","memberName":"maxParticipation","nodeType":"MemberAccess","referencedDeclaration":9354,"src":"12148:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10148,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10124,"src":"12172:3:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12148:27:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10150,"nodeType":"ExpressionStatement","src":"12148:27:28"},{"eventCall":{"arguments":[{"expression":{"id":10152,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"12211:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12216:16:28","memberName":"maxParticipation","nodeType":"MemberAccess","referencedDeclaration":9354,"src":"12211:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10151,"name":"MaxParticipationSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9447,"src":"12191:19:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12191:42:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10155,"nodeType":"EmitStatement","src":"12186:47:28"}]},"documentation":{"id":10122,"nodeType":"StructuredDocumentation","src":"11826:73:28","text":"@notice     Admin function to set max participation before sale start"},"functionSelector":"47786d37","id":10157,"implemented":true,"kind":"function","modifiers":[{"id":10127,"kind":"modifierInvocation","modifierName":{"id":10126,"name":"onlyAdmin","nameLocations":["11950:9:28"],"nodeType":"IdentifierPath","referencedDeclaration":9429,"src":"11950:9:28"},"nodeType":"ModifierInvocation","src":"11950:9:28"}],"name":"setCap","nameLocation":"11913:6:28","nodeType":"FunctionDefinition","parameters":{"id":10125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10124,"mutability":"mutable","name":"cap","nameLocation":"11928:3:28","nodeType":"VariableDeclaration","scope":10157,"src":"11920:11:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10123,"name":"uint256","nodeType":"ElementaryTypeName","src":"11920:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11919:13:28"},"returnParameters":{"id":10128,"nodeType":"ParameterList","parameters":[],"src":"11964:0:28"},"scope":10859,"src":"11904:336:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10190,"nodeType":"Block","src":"12364:278:28","statements":[{"expression":{"arguments":[{"id":10165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12395:21:28","subExpression":{"expression":{"id":10163,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"12396:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10164,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12401:15:28","memberName":"tokensDeposited","nodeType":"MemberAccess","referencedDeclaration":9336,"src":"12396:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f7369742063616e20626520646f6e65206f6e6c79206f6e6365","id":10166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12418:31:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8924e4bbdb82064022e86fd261e8d3a1fba1dca05d8ba5c5e6191bc07e497b5","typeString":"literal_string \"Deposit can be done only once\""},"value":"Deposit can be done only once"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8924e4bbdb82064022e86fd261e8d3a1fba1dca05d8ba5c5e6191bc07e497b5","typeString":"literal_string \"Deposit can be done only once\""}],"id":10162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12374:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:85:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10168,"nodeType":"ExpressionStatement","src":"12374:85:28"},{"expression":{"id":10173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10169,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"12470:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"12475:15:28","memberName":"tokensDeposited","nodeType":"MemberAccess","referencedDeclaration":9336,"src":"12470:20:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12493:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12470:27:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10174,"nodeType":"ExpressionStatement","src":"12470:27:28"},{"expression":{"arguments":[{"expression":{"id":10180,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12549:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12553:6:28","memberName":"sender","nodeType":"MemberAccess","src":"12549:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10184,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12581:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}],"id":10183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12573:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10182,"name":"address","nodeType":"ElementaryTypeName","src":"12573:7:28","typeDescriptions":{}}},"id":10185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12573:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10186,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"12600:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10187,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12605:20:28","memberName":"amountOfTokensToSell","nodeType":"MemberAccess","referencedDeclaration":9342,"src":"12600:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10175,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"12508:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12513:5:28","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9328,"src":"12508:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":10179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12519:16:28","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1564,"src":"12508:27:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":10188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12508:127:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10189,"nodeType":"ExpressionStatement","src":"12508:127:28"}]},"functionSelector":"7c4b414d","id":10191,"implemented":true,"kind":"function","modifiers":[{"id":10160,"kind":"modifierInvocation","modifierName":{"id":10159,"name":"onlySaleOwner","nameLocations":["12350:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9416,"src":"12350:13:28"},"nodeType":"ModifierInvocation","src":"12350:13:28"}],"name":"depositTokens","nameLocation":"12325:13:28","nodeType":"FunctionDefinition","parameters":{"id":10158,"nodeType":"ParameterList","parameters":[],"src":"12338:2:28"},"returnParameters":{"id":10161,"nodeType":"ParameterList","parameters":[],"src":"12364:0:28"},"scope":10859,"src":"12316:326:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10361,"nodeType":"Block","src":"12792:2372:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10199,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10195,"src":"12824:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":10200,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"12834:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10201,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12839:16:28","memberName":"maxParticipation","nodeType":"MemberAccess","referencedDeclaration":9354,"src":"12834:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12824:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f766572666c6f77696e67206d6178696d616c2070617274696369706174696f6e20666f722073616c652e","id":10203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12869:45:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2400ead6194049616b92b3fd6b2498875903abb54968135efc6877ecbaae2fe","typeString":"literal_string \"Overflowing maximal participation for sale.\""},"value":"Overflowing maximal participation for sale."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2400ead6194049616b92b3fd6b2498875903abb54968135efc6877ecbaae2fe","typeString":"literal_string \"Overflowing maximal participation for sale.\""}],"id":10198,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12803:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12803:121:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10205,"nodeType":"ExpressionStatement","src":"12803:121:28"},{"expression":{"arguments":[{"baseExpression":{"id":10207,"name":"isRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9389,"src":"13018:12:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10210,"indexExpression":{"expression":{"id":10208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13031:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13035:6:28","memberName":"sender","nodeType":"MemberAccess","src":"13031:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13018:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74207265676973746572656420666f7220746869732073616c652e","id":10211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13056:31:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_23c6bf8ba56cd1bda8da556a6257f8f8b057caf44734eaaaffc6c59c8ba3272d","typeString":"literal_string \"Not registered for this sale.\""},"value":"Not registered for this sale."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_23c6bf8ba56cd1bda8da556a6257f8f8b057caf44734eaaaffc6c59c8ba3272d","typeString":"literal_string \"Not registered for this sale.\""}],"id":10206,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"12997:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12997:100:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10213,"nodeType":"ExpressionStatement","src":"12997:100:28"},{"expression":{"arguments":[{"arguments":[{"id":10216,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10193,"src":"13206:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":10217,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13233:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13237:6:28","memberName":"sender","nodeType":"MemberAccess","src":"13233:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10219,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10195,"src":"13261:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10215,"name":"checkParticipationSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10758,"src":"13161:27:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (bytes memory,address,uint256) view returns (bool)"}},"id":10220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13161:120:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207369676e61747572652e20566572696669636174696f6e206661696c6564","id":10221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13295:40:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_2126f418e6b1824e1433a38ef2661db158a8171fe5780a63dda9c2971b5c1a2c","typeString":"literal_string \"Invalid signature. Verification failed\""},"value":"Invalid signature. Verification failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2126f418e6b1824e1433a38ef2661db158a8171fe5780a63dda9c2971b5c1a2c","typeString":"literal_string \"Invalid signature. Verification failed\""}],"id":10214,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13140:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:205:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10223,"nodeType":"ExpressionStatement","src":"13140:205:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10225,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13409:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13415:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"13409:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":10227,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"13428:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10228,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13433:9:28","memberName":"saleStart","nodeType":"MemberAccess","referencedDeclaration":9348,"src":"13428:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13409:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10230,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13458:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13464:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"13458:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10232,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"13476:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13481:7:28","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":9350,"src":"13476:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13458:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13409:79:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73616c65206469646e2774207374617274206f72206974277320656e6465642e","id":10236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13490:34:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_bdae0c60a3bf092e85db3c1d612d6e5499cc91dcab542a77a0c3580c15bf1740","typeString":"literal_string \"sale didn't start or it's ended.\""},"value":"sale didn't start or it's ended."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bdae0c60a3bf092e85db3c1d612d6e5499cc91dcab542a77a0c3580c15bf1740","typeString":"literal_string \"sale didn't start or it's ended.\""}],"id":10224,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13388:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13388:146:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10238,"nodeType":"ExpressionStatement","src":"13388:146:28"},{"expression":{"arguments":[{"id":10244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13603:27:28","subExpression":{"baseExpression":{"id":10240,"name":"isParticipated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"13604:14:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10243,"indexExpression":{"expression":{"id":10241,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13619:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13623:6:28","memberName":"sender","nodeType":"MemberAccess","src":"13619:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13604:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"557365722063616e207061727469636970617465206f6e6c79206f6e63652e","id":10245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13632:33:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_db913cd66bd0697bce981ffc72b595d0bd1d4ad7c0e73c25575b7c6ced04e404","typeString":"literal_string \"User can participate only once.\""},"value":"User can participate only once."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_db913cd66bd0697bce981ffc72b595d0bd1d4ad7c0e73c25575b7c6ced04e404","typeString":"literal_string \"User can participate only once.\""}],"id":10239,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13595:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13595:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10247,"nodeType":"ExpressionStatement","src":"13595:71:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10249,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13721:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13725:6:28","memberName":"sender","nodeType":"MemberAccess","src":"13721:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":10251,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"13735:2:28","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":10252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13738:6:28","memberName":"origin","nodeType":"MemberAccess","src":"13735:9:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13721:23:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792064697265637420636f6e74726163742063616c6c732e","id":10254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13746:29:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_99ece8ff497f01aafeda56388c9bcc4baa7ea46a4a74e25d2e67a463d15b2d78","typeString":"literal_string \"Only direct contract calls.\""},"value":"Only direct contract calls."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99ece8ff497f01aafeda56388c9bcc4baa7ea46a4a74e25d2e67a463d15b2d78","typeString":"literal_string \"Only direct contract calls.\""}],"id":10248,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"13713:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13713:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10256,"nodeType":"ExpressionStatement","src":"13713:63:28"},{"assignments":[10258],"declarations":[{"constant":false,"id":10258,"mutability":"mutable","name":"amountOfTokensBuying","nameLocation":"13850:20:28","nodeType":"VariableDeclaration","scope":10361,"src":"13842:28:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10257,"name":"uint256","nodeType":"ElementaryTypeName","src":"13842:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10280,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"expression":{"id":10259,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13882:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13886:5:28","memberName":"value","nodeType":"MemberAccess","src":"13882:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10261,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13881:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"3130","id":10264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13898:2:28","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}],"id":10263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13893:4:28","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10262,"name":"uint","nodeType":"ElementaryTypeName","src":"13893:4:28","typeDescriptions":{}}},"id":10265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13893:8:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"arguments":[{"expression":{"id":10269,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"13928:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10270,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13933:5:28","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9328,"src":"13928:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}],"id":10268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13920:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10267,"name":"address","nodeType":"ElementaryTypeName","src":"13920:7:28","typeDescriptions":{}}},"id":10271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13920:19:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10266,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1492,"src":"13905:14:28","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Metadata_$1492_$","typeString":"type(contract IERC20Metadata)"}},"id":10272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13905:35:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Metadata_$1492","typeString":"contract IERC20Metadata"}},"id":10273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13941:8:28","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":1491,"src":"13905:44:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":10274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13905:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13893:58:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13881:70:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"expression":{"id":10277,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"13952:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13957:15:28","memberName":"tokenPriceInETH","nodeType":"MemberAccess","referencedDeclaration":9340,"src":"13952:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13881:91:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13842:130:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10282,"name":"amountOfTokensBuying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10258,"src":"14030:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14053:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14030:24:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e277420627579203020746f6b656e73","id":10285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14056:20:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec129072336a0ac8bb30ab82ccfe85bb196a1bea0924f9bdedc6d5ed30ed1af8","typeString":"literal_string \"Can't buy 0 tokens\""},"value":"Can't buy 0 tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec129072336a0ac8bb30ab82ccfe85bb196a1bea0924f9bdedc6d5ed30ed1af8","typeString":"literal_string \"Can't buy 0 tokens\""}],"id":10281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14022:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14022:55:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10287,"nodeType":"ExpressionStatement","src":"14022:55:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10289,"name":"amountOfTokensBuying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10258,"src":"14148:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":10290,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10195,"src":"14172:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14148:30:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"547279696e6720746f20627579206d6f7265207468616e20616c6c6f7765642e","id":10292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14192:34:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_baaf38aee23246bcaaae2be3e59989256efdf81b58c84942344ed96b39b34a08","typeString":"literal_string \"Trying to buy more than allowed.\""},"value":"Trying to buy more than allowed."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baaf38aee23246bcaaae2be3e59989256efdf81b58c84942344ed96b39b34a08","typeString":"literal_string \"Trying to buy more than allowed.\""}],"id":10288,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"14127:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14127:109:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10294,"nodeType":"ExpressionStatement","src":"14127:109:28"},{"expression":{"id":10302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10295,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"14289:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14294:15:28","memberName":"totalTokensSold","nodeType":"MemberAccess","referencedDeclaration":9344,"src":"14289:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10298,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"14312:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14317:15:28","memberName":"totalTokensSold","nodeType":"MemberAccess","referencedDeclaration":9344,"src":"14312:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10300,"name":"amountOfTokensBuying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10258,"src":"14333:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14312:41:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14289:64:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10303,"nodeType":"ExpressionStatement","src":"14289:64:28"},{"expression":{"id":10312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10304,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"14405:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"14410:14:28","memberName":"totalETHRaised","nodeType":"MemberAccess","referencedDeclaration":9346,"src":"14405:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10307,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"14427:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14432:14:28","memberName":"totalETHRaised","nodeType":"MemberAccess","referencedDeclaration":9346,"src":"14427:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":10309,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14447:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14451:5:28","memberName":"value","nodeType":"MemberAccess","src":"14447:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14427:29:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14405:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10313,"nodeType":"ExpressionStatement","src":"14405:51:28"},{"assignments":[10318],"declarations":[{"constant":false,"id":10318,"mutability":"mutable","name":"_isPortionWithdrawn","nameLocation":"14481:19:28","nodeType":"VariableDeclaration","scope":10361,"src":"14467:33:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":10316,"name":"bool","nodeType":"ElementaryTypeName","src":"14467:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10317,"nodeType":"ArrayTypeName","src":"14467:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"id":10325,"initialValue":{"arguments":[{"expression":{"id":10322,"name":"vestingPortionsUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"14527:25:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14553:6:28","memberName":"length","nodeType":"MemberAccess","src":"14527:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14503:10:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bool[] memory)"},"typeName":{"baseType":{"id":10319,"name":"bool","nodeType":"ElementaryTypeName","src":"14507:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10320,"nodeType":"ArrayTypeName","src":"14507:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}}},"id":10324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14503:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14467:102:28"},{"assignments":[10328],"declarations":[{"constant":false,"id":10328,"mutability":"mutable","name":"p","nameLocation":"14640:1:28","nodeType":"VariableDeclaration","scope":10361,"src":"14619:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_memory_ptr","typeString":"struct C2NSale.Participation"},"typeName":{"id":10327,"nodeType":"UserDefinedTypeName","pathNode":{"id":10326,"name":"Participation","nameLocations":["14619:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9365,"src":"14619:13:28"},"referencedDeclaration":9365,"src":"14619:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation"}},"visibility":"internal"}],"id":10337,"initialValue":{"arguments":[{"id":10330,"name":"amountOfTokensBuying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10258,"src":"14683:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10331,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14729:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14733:5:28","memberName":"value","nodeType":"MemberAccess","src":"14729:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10333,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14767:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14773:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"14767:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10335,"name":"_isPortionWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10318,"src":"14813:19:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}],"id":10329,"name":"Participation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9365,"src":"14644:13:28","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Participation_$9365_storage_ptr_$","typeString":"type(struct C2NSale.Participation storage pointer)"}},"id":10336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["14668:12:28","14713:13:28","14748:16:28","14792:18:28"],"names":["amountBought","amountETHPaid","timeParticipated","isPortionWithdrawn"],"nodeType":"FunctionCall","src":"14644:199:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_memory_ptr","typeString":"struct C2NSale.Participation memory"}},"nodeType":"VariableDeclarationStatement","src":"14619:224:28"},{"expression":{"id":10343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10338,"name":"userToParticipation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9385,"src":"14893:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participation_$9365_storage_$","typeString":"mapping(address => struct C2NSale.Participation storage ref)"}},"id":10341,"indexExpression":{"expression":{"id":10339,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14913:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14917:6:28","memberName":"sender","nodeType":"MemberAccess","src":"14913:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14893:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage","typeString":"struct C2NSale.Participation storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10342,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10328,"src":"14927:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_memory_ptr","typeString":"struct C2NSale.Participation memory"}},"src":"14893:35:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage","typeString":"struct C2NSale.Participation storage ref"}},"id":10344,"nodeType":"ExpressionStatement","src":"14893:35:28"},{"expression":{"id":10350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10345,"name":"isParticipated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9393,"src":"14975:14:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10348,"indexExpression":{"expression":{"id":10346,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"14990:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14994:6:28","memberName":"sender","nodeType":"MemberAccess","src":"14990:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14975:26:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15004:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"14975:33:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10351,"nodeType":"ExpressionStatement","src":"14975:33:28"},{"expression":{"id":10353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"15075:22:28","subExpression":{"id":10352,"name":"numberOfParticipants","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9380,"src":"15075:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10354,"nodeType":"ExpressionStatement","src":"15075:22:28"},{"eventCall":{"arguments":[{"expression":{"id":10356,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15124:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15128:6:28","memberName":"sender","nodeType":"MemberAccess","src":"15124:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10358,"name":"amountOfTokensBuying","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10258,"src":"15136:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10355,"name":"TokensSold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9435,"src":"15113:10:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15113:44:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10360,"nodeType":"EmitStatement","src":"15108:49:28"}]},"functionSelector":"931d81c9","id":10362,"implemented":true,"kind":"function","modifiers":[],"name":"participate","nameLocation":"12701:11:28","nodeType":"FunctionDefinition","parameters":{"id":10196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10193,"mutability":"mutable","name":"signature","nameLocation":"12735:9:28","nodeType":"VariableDeclaration","scope":10362,"src":"12722:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10192,"name":"bytes","nodeType":"ElementaryTypeName","src":"12722:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10195,"mutability":"mutable","name":"amount","nameLocation":"12762:6:28","nodeType":"VariableDeclaration","scope":10362,"src":"12754:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10194,"name":"uint256","nodeType":"ElementaryTypeName","src":"12754:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12712:62:28"},"returnParameters":{"id":10197,"nodeType":"ParameterList","parameters":[],"src":"12792:0:28"},"scope":10859,"src":"12692:2472:28","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":10452,"nodeType":"Block","src":"15266:1001:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10369,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15297:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15303:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"15297:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":10371,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"15316:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15321:16:28","memberName":"tokensUnlockTime","nodeType":"MemberAccess","referencedDeclaration":9352,"src":"15316:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15297:40:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e732063616e206e6f742062652077697468647261776e207965742e","id":10374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15351:34:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a337b3a88b56a8f07e9f307249a51ec1ec7306a3bb400400db3035de94ab20a","typeString":"literal_string \"Tokens can not be withdrawn yet.\""},"value":"Tokens can not be withdrawn yet."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a337b3a88b56a8f07e9f307249a51ec1ec7306a3bb400400db3035de94ab20a","typeString":"literal_string \"Tokens can not be withdrawn yet.\""}],"id":10368,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15276:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15276:119:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10376,"nodeType":"ExpressionStatement","src":"15276:119:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10378,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10365,"src":"15426:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10379,"name":"vestingPercentPerPortion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"15438:24:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15463:6:28","memberName":"length","nodeType":"MemberAccess","src":"15438:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15426:43:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f7274696f6e206964206f7574206f662072616e67652e","id":10382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15483:26:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_26f51579dd740b516aa8f540ad9ea9fae4af1eca71670ce47043cf75eeeccb46","typeString":"literal_string \"Portion id out of range.\""},"value":"Portion id out of range."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_26f51579dd740b516aa8f540ad9ea9fae4af1eca71670ce47043cf75eeeccb46","typeString":"literal_string \"Portion id out of range.\""}],"id":10377,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"15405:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15405:114:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10384,"nodeType":"ExpressionStatement","src":"15405:114:28"},{"assignments":[10387],"declarations":[{"constant":false,"id":10387,"mutability":"mutable","name":"p","nameLocation":"15552:1:28","nodeType":"VariableDeclaration","scope":10452,"src":"15530:23:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation"},"typeName":{"id":10386,"nodeType":"UserDefinedTypeName","pathNode":{"id":10385,"name":"Participation","nameLocations":["15530:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9365,"src":"15530:13:28"},"referencedDeclaration":9365,"src":"15530:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation"}},"visibility":"internal"}],"id":10392,"initialValue":{"baseExpression":{"id":10388,"name":"userToParticipation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9385,"src":"15556:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participation_$9365_storage_$","typeString":"mapping(address => struct C2NSale.Participation storage ref)"}},"id":10391,"indexExpression":{"expression":{"id":10389,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15576:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15580:6:28","memberName":"sender","nodeType":"MemberAccess","src":"15576:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15556:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage","typeString":"struct C2NSale.Participation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15530:57:28"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15615:32:28","subExpression":{"baseExpression":{"expression":{"id":10393,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10387,"src":"15616:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation storage pointer"}},"id":10394,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15618:18:28","memberName":"isPortionWithdrawn","nodeType":"MemberAccess","referencedDeclaration":9364,"src":"15616:20:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage","typeString":"bool[] storage ref"}},"id":10396,"indexExpression":{"id":10395,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10365,"src":"15637:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15616:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10398,"name":"vestingPortionsUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"15659:25:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10400,"indexExpression":{"id":10399,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10365,"src":"15685:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15659:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":10401,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"15699:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15705:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"15699:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15659:55:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15615:99:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":10450,"nodeType":"Block","src":"16173:88:28","statements":[{"expression":{"arguments":[{"hexValue":"546f6b656e7320616c72656164792077697468647261776e206f7220706f7274696f6e206e6f7420756e6c6f636b6564207965742e","id":10447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16194:55:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_8cab3f28568a427a99e4ff25d7b08a69c6e173611d06c9284ef18571041498eb","typeString":"literal_string \"Tokens already withdrawn or portion not unlocked yet.\""},"value":"Tokens already withdrawn or portion not unlocked yet."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8cab3f28568a427a99e4ff25d7b08a69c6e173611d06c9284ef18571041498eb","typeString":"literal_string \"Tokens already withdrawn or portion not unlocked yet.\""}],"id":10446,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"16187:6:28","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":10448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16187:63:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10449,"nodeType":"ExpressionStatement","src":"16187:63:28"}]},"id":10451,"nodeType":"IfStatement","src":"15598:663:28","trueBody":{"id":10445,"nodeType":"Block","src":"15725:442:28","statements":[{"expression":{"id":10411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":10405,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10387,"src":"15739:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation storage pointer"}},"id":10408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15741:18:28","memberName":"isPortionWithdrawn","nodeType":"MemberAccess","referencedDeclaration":9364,"src":"15739:20:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage","typeString":"bool[] storage ref"}},"id":10409,"indexExpression":{"id":10407,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10365,"src":"15760:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15739:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15773:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"15739:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10412,"nodeType":"ExpressionStatement","src":"15739:38:28"},{"assignments":[10414],"declarations":[{"constant":false,"id":10414,"mutability":"mutable","name":"amountWithdrawing","nameLocation":"15799:17:28","nodeType":"VariableDeclaration","scope":10445,"src":"15791:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10413,"name":"uint256","nodeType":"ElementaryTypeName","src":"15791:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10423,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10415,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10387,"src":"15819:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation storage pointer"}},"id":10416,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15821:12:28","memberName":"amountBought","nodeType":"MemberAccess","referencedDeclaration":9357,"src":"15819:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"id":10417,"name":"vestingPercentPerPortion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"15834:24:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10419,"indexExpression":{"id":10418,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10365,"src":"15859:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15834:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15819:50:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10421,"name":"portionVestingPrecision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9401,"src":"15870:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15819:74:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15791:102:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10424,"name":"amountWithdrawing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10414,"src":"15978:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15998:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15978:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10444,"nodeType":"IfStatement","src":"15974:183:28","trueBody":{"id":10443,"nodeType":"Block","src":"16001:156:28","statements":[{"expression":{"arguments":[{"expression":{"id":10432,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16043:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16047:6:28","memberName":"sender","nodeType":"MemberAccess","src":"16043:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10434,"name":"amountWithdrawing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10414,"src":"16055:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10427,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"16019:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16024:5:28","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9328,"src":"16019:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":10431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16030:12:28","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"16019:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,uint256)"}},"id":10435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16019:54:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10436,"nodeType":"ExpressionStatement","src":"16019:54:28"},{"eventCall":{"arguments":[{"expression":{"id":10438,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16112:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:6:28","memberName":"sender","nodeType":"MemberAccess","src":"16112:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10440,"name":"amountWithdrawing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10414,"src":"16124:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10437,"name":"TokensWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9453,"src":"16096:15:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16096:46:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10442,"nodeType":"EmitStatement","src":"16091:51:28"}]}}]}}]},"documentation":{"id":10363,"nodeType":"StructuredDocumentation","src":"15170:39:28","text":"Users can claim their participation"},"functionSelector":"315a095d","id":10453,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawTokens","nameLocation":"15223:14:28","nodeType":"FunctionDefinition","parameters":{"id":10366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10365,"mutability":"mutable","name":"portionId","nameLocation":"15246:9:28","nodeType":"VariableDeclaration","scope":10453,"src":"15238:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10364,"name":"uint256","nodeType":"ElementaryTypeName","src":"15238:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15237:19:28"},"returnParameters":{"id":10367,"nodeType":"ParameterList","parameters":[],"src":"15266:0:28"},"scope":10859,"src":"15214:1053:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10557,"nodeType":"Block","src":"16431:949:28","statements":[{"assignments":[10460],"declarations":[{"constant":false,"id":10460,"mutability":"mutable","name":"totalToWithdraw","nameLocation":"16449:15:28","nodeType":"VariableDeclaration","scope":10557,"src":"16441:23:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10459,"name":"uint256","nodeType":"ElementaryTypeName","src":"16441:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10462,"initialValue":{"hexValue":"30","id":10461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16467:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16441:27:28"},{"assignments":[10465],"declarations":[{"constant":false,"id":10465,"mutability":"mutable","name":"p","nameLocation":"16501:1:28","nodeType":"VariableDeclaration","scope":10557,"src":"16479:23:28","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation"},"typeName":{"id":10464,"nodeType":"UserDefinedTypeName","pathNode":{"id":10463,"name":"Participation","nameLocations":["16479:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9365,"src":"16479:13:28"},"referencedDeclaration":9365,"src":"16479:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation"}},"visibility":"internal"}],"id":10470,"initialValue":{"baseExpression":{"id":10466,"name":"userToParticipation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9385,"src":"16505:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participation_$9365_storage_$","typeString":"mapping(address => struct C2NSale.Participation storage ref)"}},"id":10469,"indexExpression":{"expression":{"id":10467,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16525:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16529:6:28","memberName":"sender","nodeType":"MemberAccess","src":"16525:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16505:31:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage","typeString":"struct C2NSale.Participation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16479:57:28"},{"body":{"id":10534,"nodeType":"Block","src":"16592:607:28","statements":[{"assignments":[10483],"declarations":[{"constant":false,"id":10483,"mutability":"mutable","name":"portionId","nameLocation":"16614:9:28","nodeType":"VariableDeclaration","scope":10534,"src":"16606:17:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10482,"name":"uint256","nodeType":"ElementaryTypeName","src":"16606:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10487,"initialValue":{"baseExpression":{"id":10484,"name":"portionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10456,"src":"16626:10:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10486,"indexExpression":{"id":10485,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10472,"src":"16637:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16626:13:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16606:33:28"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10489,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10483,"src":"16661:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10490,"name":"vestingPercentPerPortion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"16673:24:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16698:6:28","memberName":"length","nodeType":"MemberAccess","src":"16673:31:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16661:43:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10488,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"16653:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16653:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10494,"nodeType":"ExpressionStatement","src":"16653:52:28"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16741:32:28","subExpression":{"baseExpression":{"expression":{"id":10495,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10465,"src":"16742:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation storage pointer"}},"id":10496,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16744:18:28","memberName":"isPortionWithdrawn","nodeType":"MemberAccess","referencedDeclaration":9364,"src":"16742:20:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage","typeString":"bool[] storage ref"}},"id":10498,"indexExpression":{"id":10497,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10483,"src":"16763:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16742:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10500,"name":"vestingPortionsUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"16789:25:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10502,"indexExpression":{"id":10501,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10483,"src":"16815:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16789:36:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":10503,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"16829:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"16829:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16789:55:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16741:103:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10533,"nodeType":"IfStatement","src":"16720:469:28","trueBody":{"id":10532,"nodeType":"Block","src":"16859:330:28","statements":[{"expression":{"id":10513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":10507,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10465,"src":"16877:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation storage pointer"}},"id":10510,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16879:18:28","memberName":"isPortionWithdrawn","nodeType":"MemberAccess","referencedDeclaration":9364,"src":"16877:20:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage","typeString":"bool[] storage ref"}},"id":10511,"indexExpression":{"id":10509,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10483,"src":"16898:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16877:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16911:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"16877:38:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10514,"nodeType":"ExpressionStatement","src":"16877:38:28"},{"assignments":[10516],"declarations":[{"constant":false,"id":10516,"mutability":"mutable","name":"amountWithdrawing","nameLocation":"16941:17:28","nodeType":"VariableDeclaration","scope":10532,"src":"16933:25:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10515,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10525,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10517,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10465,"src":"16961:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation storage pointer"}},"id":10518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16963:12:28","memberName":"amountBought","nodeType":"MemberAccess","referencedDeclaration":9357,"src":"16961:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"baseExpression":{"id":10519,"name":"vestingPercentPerPortion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"16976:24:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":10521,"indexExpression":{"id":10520,"name":"portionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10483,"src":"17001:9:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16976:35:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16961:50:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":10523,"name":"portionVestingPrecision","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9401,"src":"17012:23:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16961:74:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16933:102:28"},{"expression":{"id":10530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10526,"name":"totalToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"17123:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10527,"name":"totalToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"17141:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10528,"name":"amountWithdrawing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10516,"src":"17157:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17141:33:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17123:51:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10531,"nodeType":"ExpressionStatement","src":"17123:51:28"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10475,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10472,"src":"16564:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10476,"name":"portionIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10456,"src":"16568:10:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16579:6:28","memberName":"length","nodeType":"MemberAccess","src":"16568:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16564:21:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10535,"initializationExpression":{"assignments":[10472],"declarations":[{"constant":false,"id":10472,"mutability":"mutable","name":"i","nameLocation":"16557:1:28","nodeType":"VariableDeclaration","scope":10535,"src":"16552:6:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10471,"name":"uint","nodeType":"ElementaryTypeName","src":"16552:4:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10474,"initialValue":{"hexValue":"30","id":10473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16561:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"16552:10:28"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"16587:3:28","subExpression":{"id":10479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10472,"src":"16587:1:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10481,"nodeType":"ExpressionStatement","src":"16587:3:28"},"nodeType":"ForStatement","src":"16547:652:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10536,"name":"totalToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"17213:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17231:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17213:19:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10556,"nodeType":"IfStatement","src":"17209:165:28","trueBody":{"id":10555,"nodeType":"Block","src":"17234:140:28","statements":[{"expression":{"arguments":[{"expression":{"id":10544,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17272:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17276:6:28","memberName":"sender","nodeType":"MemberAccess","src":"17272:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10546,"name":"totalToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"17284:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10539,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"17248:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10542,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17253:5:28","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9328,"src":"17248:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":10543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17259:12:28","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"17248:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,uint256)"}},"id":10547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17248:52:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10548,"nodeType":"ExpressionStatement","src":"17248:52:28"},{"eventCall":{"arguments":[{"expression":{"id":10550,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17335:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17339:6:28","memberName":"sender","nodeType":"MemberAccess","src":"17335:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10552,"name":"totalToWithdraw","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10460,"src":"17347:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10549,"name":"TokensWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9453,"src":"17319:15:28","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17319:44:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10554,"nodeType":"EmitStatement","src":"17314:49:28"}]}}]},"functionSelector":"718af7e6","id":10558,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawMultiplePortions","nameLocation":"16365:24:28","nodeType":"FunctionDefinition","parameters":{"id":10457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10456,"mutability":"mutable","name":"portionIds","nameLocation":"16410:10:28","nodeType":"VariableDeclaration","scope":10558,"src":"16390:30:28","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10454,"name":"uint256","nodeType":"ElementaryTypeName","src":"16390:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10455,"nodeType":"ArrayTypeName","src":"16390:10:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"16389:32:28"},"returnParameters":{"id":10458,"nodeType":"ParameterList","parameters":[],"src":"16431:0:28"},"scope":10859,"src":"16356:1024:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10581,"nodeType":"Block","src":"17496:97:28","statements":[{"assignments":[10566,null],"declarations":[{"constant":false,"id":10566,"mutability":"mutable","name":"success","nameLocation":"17512:7:28","nodeType":"VariableDeclaration","scope":10581,"src":"17507:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10565,"name":"bool","nodeType":"ElementaryTypeName","src":"17507:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":10576,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":10573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17557:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17547:9:28","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":10571,"name":"bytes","nodeType":"ElementaryTypeName","src":"17551:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":10574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17547:12:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10567,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10560,"src":"17524:2:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17527:4:28","memberName":"call","nodeType":"MemberAccess","src":"17524:7:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":10569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10562,"src":"17540:5:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"17524:22:28","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":10575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17524:36:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"17506:54:28"},{"expression":{"arguments":[{"id":10578,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10566,"src":"17578:7:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"17570:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17570:16:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10580,"nodeType":"ExpressionStatement","src":"17570:16:28"}]},"id":10582,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferETH","nameLocation":"17444:15:28","nodeType":"FunctionDefinition","parameters":{"id":10563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10560,"mutability":"mutable","name":"to","nameLocation":"17468:2:28","nodeType":"VariableDeclaration","scope":10582,"src":"17460:10:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10559,"name":"address","nodeType":"ElementaryTypeName","src":"17460:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10562,"mutability":"mutable","name":"value","nameLocation":"17480:5:28","nodeType":"VariableDeclaration","scope":10582,"src":"17472:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10561,"name":"uint256","nodeType":"ElementaryTypeName","src":"17472:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17459:27:28"},"returnParameters":{"id":10564,"nodeType":"ParameterList","parameters":[],"src":"17496:0:28"},"scope":10859,"src":"17435:158:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10594,"nodeType":"Block","src":"17746:79:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10588,"name":"withdrawEarningsInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10650,"src":"17756:24:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17756:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10590,"nodeType":"ExpressionStatement","src":"17756:26:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10591,"name":"withdrawLeftoverInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10699,"src":"17792:24:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17792:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10593,"nodeType":"ExpressionStatement","src":"17792:26:28"}]},"documentation":{"id":10583,"nodeType":"StructuredDocumentation","src":"17599:80:28","text":"Function to withdraw all the earnings and the leftover of the sale contract."},"functionSelector":"da4d4fbf","id":10595,"implemented":true,"kind":"function","modifiers":[{"id":10586,"kind":"modifierInvocation","modifierName":{"id":10585,"name":"onlySaleOwner","nameLocations":["17732:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9416,"src":"17732:13:28"},"nodeType":"ModifierInvocation","src":"17732:13:28"}],"name":"withdrawEarningsAndLeftover","nameLocation":"17693:27:28","nodeType":"FunctionDefinition","parameters":{"id":10584,"nodeType":"ParameterList","parameters":[],"src":"17720:2:28"},"returnParameters":{"id":10587,"nodeType":"ParameterList","parameters":[],"src":"17746:0:28"},"scope":10859,"src":"17684:141:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10603,"nodeType":"Block","src":"17924:43:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10600,"name":"withdrawEarningsInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10650,"src":"17934:24:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17934:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10602,"nodeType":"ExpressionStatement","src":"17934:26:28"}]},"functionSelector":"b73c6ce9","id":10604,"implemented":true,"kind":"function","modifiers":[{"id":10598,"kind":"modifierInvocation","modifierName":{"id":10597,"name":"onlySaleOwner","nameLocations":["17910:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9416,"src":"17910:13:28"},"nodeType":"ModifierInvocation","src":"17910:13:28"}],"name":"withdrawEarnings","nameLocation":"17882:16:28","nodeType":"FunctionDefinition","parameters":{"id":10596,"nodeType":"ParameterList","parameters":[],"src":"17898:2:28"},"returnParameters":{"id":10599,"nodeType":"ParameterList","parameters":[],"src":"17924:0:28"},"scope":10859,"src":"17873:94:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10612,"nodeType":"Block","src":"18066:43:28","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10609,"name":"withdrawLeftoverInternal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10699,"src":"18076:24:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18076:26:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10611,"nodeType":"ExpressionStatement","src":"18076:26:28"}]},"functionSelector":"a525d237","id":10613,"implemented":true,"kind":"function","modifiers":[{"id":10607,"kind":"modifierInvocation","modifierName":{"id":10606,"name":"onlySaleOwner","nameLocations":["18052:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9416,"src":"18052:13:28"},"nodeType":"ModifierInvocation","src":"18052:13:28"}],"name":"withdrawLeftover","nameLocation":"18024:16:28","nodeType":"FunctionDefinition","parameters":{"id":10605,"nodeType":"ParameterList","parameters":[],"src":"18040:2:28"},"returnParameters":{"id":10608,"nodeType":"ParameterList","parameters":[],"src":"18066:0:28"},"scope":10859,"src":"18015:94:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10649,"nodeType":"Block","src":"18197:433:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10617,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18247:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18253:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"18247:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":10619,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"18266:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10620,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18271:7:28","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":9350,"src":"18266:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18247:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73616c65206973206e6f7420656e646564207965742e","id":10622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18280:24:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2706437bf6c01d557273f94872f7310a5297249b1b9fba224f8bc12eac0d498","typeString":"literal_string \"sale is not ended yet.\""},"value":"sale is not ended yet."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2706437bf6c01d557273f94872f7310a5297249b1b9fba224f8bc12eac0d498","typeString":"literal_string \"sale is not ended yet.\""}],"id":10616,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18239:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18239:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10624,"nodeType":"ExpressionStatement","src":"18239:66:28"},{"expression":{"arguments":[{"id":10628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18372:23:28","subExpression":{"expression":{"id":10626,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"18373:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18378:17:28","memberName":"earningsWithdrawn","nodeType":"MemberAccess","referencedDeclaration":9332,"src":"18373:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f776e65722063616e2774207769746864726177206561726e696e6773207477696365","id":10629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18397:37:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_68f7da5fb4de646bdceb4e2015d2e5464fbc812df0be4b1577144d901914cfb0","typeString":"literal_string \"owner can't withdraw earnings twice\""},"value":"owner can't withdraw earnings twice"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68f7da5fb4de646bdceb4e2015d2e5464fbc812df0be4b1577144d901914cfb0","typeString":"literal_string \"owner can't withdraw earnings twice\""}],"id":10625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18364:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18364:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10631,"nodeType":"ExpressionStatement","src":"18364:71:28"},{"expression":{"id":10636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10632,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"18445:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18450:17:28","memberName":"earningsWithdrawn","nodeType":"MemberAccess","referencedDeclaration":9332,"src":"18445:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18470:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18445:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10637,"nodeType":"ExpressionStatement","src":"18445:29:28"},{"assignments":[10639],"declarations":[{"constant":false,"id":10639,"mutability":"mutable","name":"totalProfit","nameLocation":"18539:11:28","nodeType":"VariableDeclaration","scope":10649,"src":"18531:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10638,"name":"uint256","nodeType":"ElementaryTypeName","src":"18531:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10642,"initialValue":{"expression":{"id":10640,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"18553:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10641,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18558:14:28","memberName":"totalETHRaised","nodeType":"MemberAccess","referencedDeclaration":9346,"src":"18553:19:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18531:41:28"},{"expression":{"arguments":[{"expression":{"id":10644,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"18599:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18603:6:28","memberName":"sender","nodeType":"MemberAccess","src":"18599:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10646,"name":"totalProfit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10639,"src":"18611:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10643,"name":"safeTransferETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10582,"src":"18583:15:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18583:40:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10648,"nodeType":"ExpressionStatement","src":"18583:40:28"}]},"id":10650,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawEarningsInternal","nameLocation":"18161:24:28","nodeType":"FunctionDefinition","parameters":{"id":10614,"nodeType":"ParameterList","parameters":[],"src":"18185:2:28"},"returnParameters":{"id":10615,"nodeType":"ParameterList","parameters":[],"src":"18197:0:28"},"scope":10859,"src":"18152:478:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10698,"nodeType":"Block","src":"18718:505:28","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10654,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"18768:5:28","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18774:9:28","memberName":"timestamp","nodeType":"MemberAccess","src":"18768:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":10656,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"18787:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18792:7:28","memberName":"saleEnd","nodeType":"MemberAccess","referencedDeclaration":9350,"src":"18787:12:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18768:31:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73616c65206973206e6f7420656e646564207965742e","id":10659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18801:24:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2706437bf6c01d557273f94872f7310a5297249b1b9fba224f8bc12eac0d498","typeString":"literal_string \"sale is not ended yet.\""},"value":"sale is not ended yet."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2706437bf6c01d557273f94872f7310a5297249b1b9fba224f8bc12eac0d498","typeString":"literal_string \"sale is not ended yet.\""}],"id":10653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18760:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18760:66:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10661,"nodeType":"ExpressionStatement","src":"18760:66:28"},{"expression":{"arguments":[{"id":10665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18893:23:28","subExpression":{"expression":{"id":10663,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"18894:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18899:17:28","memberName":"leftoverWithdrawn","nodeType":"MemberAccess","referencedDeclaration":9334,"src":"18894:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f776e65722063616e2774207769746864726177206c6566746f766572207477696365","id":10666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18918:37:28","typeDescriptions":{"typeIdentifier":"t_stringliteral_87b595896a0aa5cc57160f1d130b418474a0820ec2abfa5de47de7b06b9a71fc","typeString":"literal_string \"owner can't withdraw leftover twice\""},"value":"owner can't withdraw leftover twice"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87b595896a0aa5cc57160f1d130b418474a0820ec2abfa5de47de7b06b9a71fc","typeString":"literal_string \"owner can't withdraw leftover twice\""}],"id":10662,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"18885:7:28","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18885:71:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10668,"nodeType":"ExpressionStatement","src":"18885:71:28"},{"expression":{"id":10673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10669,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"18966:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"18971:17:28","memberName":"leftoverWithdrawn","nodeType":"MemberAccess","referencedDeclaration":9334,"src":"18966:22:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18991:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"18966:29:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10674,"nodeType":"ExpressionStatement","src":"18966:29:28"},{"assignments":[10676],"declarations":[{"constant":false,"id":10676,"mutability":"mutable","name":"leftover","nameLocation":"19061:8:28","nodeType":"VariableDeclaration","scope":10698,"src":"19053:16:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10675,"name":"uint256","nodeType":"ElementaryTypeName","src":"19053:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10682,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10677,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"19072:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19077:20:28","memberName":"amountOfTokensToSell","nodeType":"MemberAccess","referencedDeclaration":9342,"src":"19072:25:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":10679,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"19098:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19103:15:28","memberName":"totalTokensSold","nodeType":"MemberAccess","referencedDeclaration":9344,"src":"19098:20:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19072:46:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19053:65:28"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10683,"name":"leftover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10676,"src":"19133:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19144:1:28","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19133:12:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10697,"nodeType":"IfStatement","src":"19129:88:28","trueBody":{"id":10696,"nodeType":"Block","src":"19147:70:28","statements":[{"expression":{"arguments":[{"expression":{"id":10691,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19185:3:28","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19189:6:28","memberName":"sender","nodeType":"MemberAccess","src":"19185:10:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10693,"name":"leftover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10676,"src":"19197:8:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10686,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9375,"src":"19161:4:28","typeDescriptions":{"typeIdentifier":"t_struct$_Sale_$9355_storage","typeString":"struct C2NSale.Sale storage ref"}},"id":10689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"19166:5:28","memberName":"token","nodeType":"MemberAccess","referencedDeclaration":9328,"src":"19161:10:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":10690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19172:12:28","memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":1537,"src":"19161:23:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1466_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$1466_$","typeString":"function (contract IERC20,address,uint256)"}},"id":10694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19161:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10695,"nodeType":"ExpressionStatement","src":"19161:45:28"}]}}]},"id":10699,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawLeftoverInternal","nameLocation":"18682:24:28","nodeType":"FunctionDefinition","parameters":{"id":10651,"nodeType":"ParameterList","parameters":[],"src":"18706:2:28"},"returnParameters":{"id":10652,"nodeType":"ParameterList","parameters":[],"src":"18718:0:28"},"scope":10859,"src":"18673:550:28","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10736,"nodeType":"Block","src":"19581:225:28","statements":[{"assignments":[10710],"declarations":[{"constant":false,"id":10710,"mutability":"mutable","name":"hash","nameLocation":"19599:4:28","nodeType":"VariableDeclaration","scope":10736,"src":"19591:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19591:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10721,"initialValue":{"arguments":[{"arguments":[{"id":10714,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10704,"src":"19646:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":10717,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19660:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}],"id":10716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19652:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10715,"name":"address","nodeType":"ElementaryTypeName","src":"19652:7:28","typeDescriptions":{}}},"id":10718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19652:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10712,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19629:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19633:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"19629:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19629:37:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10711,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"19606:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19606:70:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19591:85:28"},{"assignments":[10723],"declarations":[{"constant":false,"id":10723,"mutability":"mutable","name":"messageHash","nameLocation":"19694:11:28","nodeType":"VariableDeclaration","scope":10736,"src":"19686:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10722,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19686:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10727,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10724,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10710,"src":"19708:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19713:22:28","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":3546,"src":"19708:27:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":10726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19708:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19686:51:28"},{"expression":{"arguments":[{"arguments":[{"id":10732,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10702,"src":"19788:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10730,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10723,"src":"19768:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19780:7:28","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3287,"src":"19768:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":10733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19768:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10728,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"19754:5:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"id":10729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19760:7:28","memberName":"isAdmin","nodeType":"MemberAccess","referencedDeclaration":8132,"src":"19754:13:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":10734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19754:45:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10708,"id":10735,"nodeType":"Return","src":"19747:52:28"}]},"documentation":{"id":10700,"nodeType":"StructuredDocumentation","src":"19229:224:28","text":"@notice     Check signature user submits for registration.\n @param      signature is the message signed by the trusted entity (backend)\n @param      user is the address of user which is registering for sale"},"functionSelector":"735deffa","id":10737,"implemented":true,"kind":"function","modifiers":[],"name":"checkRegistrationSignature","nameLocation":"19467:26:28","nodeType":"FunctionDefinition","parameters":{"id":10705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10702,"mutability":"mutable","name":"signature","nameLocation":"19516:9:28","nodeType":"VariableDeclaration","scope":10737,"src":"19503:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10701,"name":"bytes","nodeType":"ElementaryTypeName","src":"19503:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10704,"mutability":"mutable","name":"user","nameLocation":"19543:4:28","nodeType":"VariableDeclaration","scope":10737,"src":"19535:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10703,"name":"address","nodeType":"ElementaryTypeName","src":"19535:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19493:60:28"},"returnParameters":{"id":10708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10737,"src":"19575:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10706,"name":"bool","nodeType":"ElementaryTypeName","src":"19575:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19574:6:28"},"scope":10859,"src":"19458:348:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10757,"nodeType":"Block","src":"20017:178:28","statements":[{"expression":{"arguments":[{"arguments":[{"id":10751,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10739,"src":"20109:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":10752,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10741,"src":"20136:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10753,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10743,"src":"20158:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10750,"name":"getParticipationSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10796,"src":"20069:22:28","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$returns$_t_address_$","typeString":"function (bytes memory,address,uint256) view returns (address)"}},"id":10754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20069:109:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10748,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9325,"src":"20042:5:28","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"id":10749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20048:7:28","memberName":"isAdmin","nodeType":"MemberAccess","referencedDeclaration":8132,"src":"20042:13:28","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":10755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20042:146:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10747,"id":10756,"nodeType":"Return","src":"20027:161:28"}]},"functionSelector":"482a5dc7","id":10758,"implemented":true,"kind":"function","modifiers":[],"name":"checkParticipationSignature","nameLocation":"19878:27:28","nodeType":"FunctionDefinition","parameters":{"id":10744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10739,"mutability":"mutable","name":"signature","nameLocation":"19928:9:28","nodeType":"VariableDeclaration","scope":10758,"src":"19915:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10738,"name":"bytes","nodeType":"ElementaryTypeName","src":"19915:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10741,"mutability":"mutable","name":"user","nameLocation":"19955:4:28","nodeType":"VariableDeclaration","scope":10758,"src":"19947:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10740,"name":"address","nodeType":"ElementaryTypeName","src":"19947:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10743,"mutability":"mutable","name":"amount","nameLocation":"19977:6:28","nodeType":"VariableDeclaration","scope":10758,"src":"19969:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10742,"name":"uint256","nodeType":"ElementaryTypeName","src":"19969:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19905:84:28"},"returnParameters":{"id":10747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10758,"src":"20011:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10745,"name":"bool","nodeType":"ElementaryTypeName","src":"20011:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20010:6:28"},"scope":10859,"src":"19869:326:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10795,"nodeType":"Block","src":"20634:280:28","statements":[{"assignments":[10771],"declarations":[{"constant":false,"id":10771,"mutability":"mutable","name":"hash","nameLocation":"20652:4:28","nodeType":"VariableDeclaration","scope":10795,"src":"20644:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20644:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10783,"initialValue":{"arguments":[{"arguments":[{"id":10775,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10763,"src":"20716:4:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10776,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10765,"src":"20738:6:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":10779,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20770:4:28","typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}],"id":10778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20762:7:28","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10777,"name":"address","nodeType":"ElementaryTypeName","src":"20762:7:28","typeDescriptions":{}}},"id":10780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20762:13:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10773,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20682:3:28","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":10774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20686:12:28","memberName":"encodePacked","nodeType":"MemberAccess","src":"20682:16:28","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":10781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20682:107:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10772,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"20659:9:28","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":10782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20659:140:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"20644:155:28"},{"assignments":[10785],"declarations":[{"constant":false,"id":10785,"mutability":"mutable","name":"messageHash","nameLocation":"20817:11:28","nodeType":"VariableDeclaration","scope":10795,"src":"20809:19:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20809:7:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":10789,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":10786,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10771,"src":"20831:4:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20836:22:28","memberName":"toEthSignedMessageHash","nodeType":"MemberAccess","referencedDeclaration":3546,"src":"20831:27:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":10788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20831:29:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"20809:51:28"},{"expression":{"arguments":[{"id":10792,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10761,"src":"20897:9:28","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":10790,"name":"messageHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10785,"src":"20877:11:28","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":10791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20889:7:28","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":3287,"src":"20877:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":10793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20877:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":10769,"id":10794,"nodeType":"Return","src":"20870:37:28"}]},"documentation":{"id":10759,"nodeType":"StructuredDocumentation","src":"20201:282:28","text":"@notice     Check who signed the message\n @param      signature is the message allowing user to participate in sale\n @param      user is the address of user for which we're signing the message\n @param      amount is the maximal amount of tokens user can buy"},"functionSelector":"4897f4c3","id":10796,"implemented":true,"kind":"function","modifiers":[],"name":"getParticipationSigner","nameLocation":"20497:22:28","nodeType":"FunctionDefinition","parameters":{"id":10766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10761,"mutability":"mutable","name":"signature","nameLocation":"20542:9:28","nodeType":"VariableDeclaration","scope":10796,"src":"20529:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10760,"name":"bytes","nodeType":"ElementaryTypeName","src":"20529:5:28","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":10763,"mutability":"mutable","name":"user","nameLocation":"20569:4:28","nodeType":"VariableDeclaration","scope":10796,"src":"20561:12:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10762,"name":"address","nodeType":"ElementaryTypeName","src":"20561:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10765,"mutability":"mutable","name":"amount","nameLocation":"20591:6:28","nodeType":"VariableDeclaration","scope":10796,"src":"20583:14:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10764,"name":"uint256","nodeType":"ElementaryTypeName","src":"20583:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20519:84:28"},"returnParameters":{"id":10769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10796,"src":"20625:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10767,"name":"address","nodeType":"ElementaryTypeName","src":"20625:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20624:9:28"},"scope":10859,"src":"20488:426:28","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":10828,"nodeType":"Block","src":"21154:202:28","statements":[{"assignments":[10813],"declarations":[{"constant":false,"id":10813,"mutability":"mutable","name":"p","nameLocation":"21185:1:28","nodeType":"VariableDeclaration","scope":10828,"src":"21164:22:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_memory_ptr","typeString":"struct C2NSale.Participation"},"typeName":{"id":10812,"nodeType":"UserDefinedTypeName","pathNode":{"id":10811,"name":"Participation","nameLocations":["21164:13:28"],"nodeType":"IdentifierPath","referencedDeclaration":9365,"src":"21164:13:28"},"referencedDeclaration":9365,"src":"21164:13:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage_ptr","typeString":"struct C2NSale.Participation"}},"visibility":"internal"}],"id":10817,"initialValue":{"baseExpression":{"id":10814,"name":"userToParticipation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9385,"src":"21189:19:28","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Participation_$9365_storage_$","typeString":"mapping(address => struct C2NSale.Participation storage ref)"}},"id":10816,"indexExpression":{"id":10815,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10799,"src":"21209:5:28","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21189:26:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_storage","typeString":"struct C2NSale.Participation storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21164:51:28"},{"expression":{"components":[{"expression":{"id":10818,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10813,"src":"21242:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_memory_ptr","typeString":"struct C2NSale.Participation memory"}},"id":10819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21244:12:28","memberName":"amountBought","nodeType":"MemberAccess","referencedDeclaration":9357,"src":"21242:14:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10820,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10813,"src":"21266:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_memory_ptr","typeString":"struct C2NSale.Participation memory"}},"id":10821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21268:13:28","memberName":"amountETHPaid","nodeType":"MemberAccess","referencedDeclaration":9359,"src":"21266:15:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10822,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10813,"src":"21291:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_memory_ptr","typeString":"struct C2NSale.Participation memory"}},"id":10823,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21293:16:28","memberName":"timeParticipated","nodeType":"MemberAccess","referencedDeclaration":9361,"src":"21291:18:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10824,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10813,"src":"21319:1:28","typeDescriptions":{"typeIdentifier":"t_struct$_Participation_$9365_memory_ptr","typeString":"struct C2NSale.Participation memory"}},"id":10825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21321:18:28","memberName":"isPortionWithdrawn","nodeType":"MemberAccess","referencedDeclaration":9364,"src":"21319:20:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}}],"id":10826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21232:117:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_array$_t_bool_$dyn_memory_ptr_$","typeString":"tuple(uint256,uint256,uint256,bool[] memory)"}},"functionReturnParameters":10810,"id":10827,"nodeType":"Return","src":"21225:124:28"}]},"documentation":{"id":10797,"nodeType":"StructuredDocumentation","src":"20920:69:28","text":"@notice     Function to get participation for passed user address"},"functionSelector":"cad925ef","id":10829,"implemented":true,"kind":"function","modifiers":[],"name":"getParticipation","nameLocation":"21003:16:28","nodeType":"FunctionDefinition","parameters":{"id":10800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10799,"mutability":"mutable","name":"_user","nameLocation":"21028:5:28","nodeType":"VariableDeclaration","scope":10829,"src":"21020:13:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10798,"name":"address","nodeType":"ElementaryTypeName","src":"21020:7:28","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21019:15:28"},"returnParameters":{"id":10810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10829,"src":"21079:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10801,"name":"uint256","nodeType":"ElementaryTypeName","src":"21079:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10829,"src":"21096:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10803,"name":"uint256","nodeType":"ElementaryTypeName","src":"21096:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10829,"src":"21113:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10805,"name":"uint256","nodeType":"ElementaryTypeName","src":"21113:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10809,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10829,"src":"21130:13:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":10807,"name":"bool","nodeType":"ElementaryTypeName","src":"21130:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10808,"nodeType":"ArrayTypeName","src":"21130:6:28","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"21069:80:28"},"scope":10859,"src":"20994:362:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10838,"nodeType":"Block","src":"21504:56:28","statements":[{"expression":{"expression":{"id":10835,"name":"registration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9378,"src":"21521:12:28","typeDescriptions":{"typeIdentifier":"t_struct$_Registration_$9372_storage","typeString":"struct C2NSale.Registration storage ref"}},"id":10836,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21534:19:28","memberName":"numberOfRegistrants","nodeType":"MemberAccess","referencedDeclaration":9371,"src":"21521:32:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10834,"id":10837,"nodeType":"Return","src":"21514:39:28"}]},"documentation":{"id":10830,"nodeType":"StructuredDocumentation","src":"21362:67:28","text":"@notice     Function to get number of registered users for sale"},"functionSelector":"ab7589b5","id":10839,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfRegisteredUsers","nameLocation":"21443:26:28","nodeType":"FunctionDefinition","parameters":{"id":10831,"nodeType":"ParameterList","parameters":[],"src":"21469:2:28"},"returnParameters":{"id":10834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10839,"src":"21495:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10832,"name":"uint256","nodeType":"ElementaryTypeName","src":"21495:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21494:9:28"},"scope":10859,"src":"21434:126:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10853,"nodeType":"Block","src":"21727:77:28","statements":[{"expression":{"components":[{"id":10849,"name":"vestingPortionsUnlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9396,"src":"21745:25:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},{"id":10850,"name":"vestingPercentPerPortion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"21772:24:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}}],"id":10851,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21744:53:28","typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_storage_$_t_array$_t_uint256_$dyn_storage_$","typeString":"tuple(uint256[] storage ref,uint256[] storage ref)"}},"functionReturnParameters":10848,"id":10852,"nodeType":"Return","src":"21737:60:28"}]},"documentation":{"id":10840,"nodeType":"StructuredDocumentation","src":"21566:55:28","text":"@notice     Function to get all info about vesting."},"functionSelector":"dc25a300","id":10854,"implemented":true,"kind":"function","modifiers":[],"name":"getVestingInfo","nameLocation":"21635:14:28","nodeType":"FunctionDefinition","parameters":{"id":10841,"nodeType":"ParameterList","parameters":[],"src":"21649:2:28"},"returnParameters":{"id":10848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10844,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10854,"src":"21687:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10842,"name":"uint256","nodeType":"ElementaryTypeName","src":"21687:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10843,"nodeType":"ArrayTypeName","src":"21687:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":10847,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10854,"src":"21705:16:28","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10845,"name":"uint256","nodeType":"ElementaryTypeName","src":"21705:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10846,"nodeType":"ArrayTypeName","src":"21705:9:28","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"21686:36:28"},"scope":10859,"src":"21626:178:28","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":10857,"nodeType":"Block","src":"21900:8:28","statements":[]},"id":10858,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10855,"nodeType":"ParameterList","parameters":[],"src":"21880:2:28"},"returnParameters":{"id":10856,"nodeType":"ParameterList","parameters":[],"src":"21900:0:28"},"scope":10859,"src":"21873:35:28","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":10860,"src":"455:21455:28","usedErrors":[1504,3194,3199,3204],"usedEvents":[9435,9439,9443,9447,9453,9463,9467,9473]}],"src":"38:21873:28"},"id":28},"contracts/sales/SalesFactory.sol":{"ast":{"absolutePath":"contracts/sales/SalesFactory.sol","exportedSymbols":{"C2NSale":[10859],"ECDSA":[3531],"IAdmin":[8133],"IAllocationStaking":[8154],"IERC1363":[724],"IERC20":[1466],"IERC20Metadata":[1492],"ISalesFactory":[8171],"MessageHashUtils":[3605],"SafeERC20":[1901],"SalesFactory":[11085],"Strings":[3183]},"id":11086,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":10861,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:29"},{"absolutePath":"contracts/interfaces/IAdmin.sol","file":"../interfaces/IAdmin.sol","id":10862,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11086,"sourceUnit":8134,"src":"63:34:29","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/sales/C2NSale.sol","file":"./C2NSale.sol","id":10863,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11086,"sourceUnit":10860,"src":"98:23:29","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SalesFactory","contractDependencies":[10859],"contractKind":"contract","fullyImplemented":true,"id":11085,"linearizedBaseContracts":[11085],"name":"SalesFactory","nameLocation":"133:12:29","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f851a440","id":10866,"mutability":"mutable","name":"admin","nameLocation":"167:5:29","nodeType":"VariableDeclaration","scope":11085,"src":"153:19:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"},"typeName":{"id":10865,"nodeType":"UserDefinedTypeName","pathNode":{"id":10864,"name":"IAdmin","nameLocations":["153:6:29"],"nodeType":"IdentifierPath","referencedDeclaration":8133,"src":"153:6:29"},"referencedDeclaration":8133,"src":"153:6:29","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"visibility":"public"},{"constant":false,"functionSelector":"135fb504","id":10868,"mutability":"mutable","name":"allocationStaking","nameLocation":"193:17:29","nodeType":"VariableDeclaration","scope":11085,"src":"178:32:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10867,"name":"address","nodeType":"ElementaryTypeName","src":"178:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"a00249e8","id":10872,"mutability":"mutable","name":"isSaleCreatedThroughFactory","nameLocation":"250:27:29","nodeType":"VariableDeclaration","scope":11085,"src":"217:60:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":10871,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10869,"name":"address","nodeType":"ElementaryTypeName","src":"226:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"217:25:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10870,"name":"bool","nodeType":"ElementaryTypeName","src":"237:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"24be4a50","id":10876,"mutability":"mutable","name":"saleOwnerToSale","nameLocation":"319:15:29","nodeType":"VariableDeclaration","scope":11085,"src":"284:50:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":10875,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10873,"name":"address","nodeType":"ElementaryTypeName","src":"292:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"284:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10874,"name":"address","nodeType":"ElementaryTypeName","src":"303:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"9c0ad5ed","id":10880,"mutability":"mutable","name":"tokenToSale","nameLocation":"375:11:29","nodeType":"VariableDeclaration","scope":11085,"src":"340:46:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":10879,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10877,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"340:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10878,"name":"address","nodeType":"ElementaryTypeName","src":"359:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"constant":false,"functionSelector":"5b30b428","id":10883,"mutability":"mutable","name":"allSales","nameLocation":"475:8:29","nodeType":"VariableDeclaration","scope":11085,"src":"457:26:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":10881,"name":"address","nodeType":"ElementaryTypeName","src":"457:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10882,"nodeType":"ArrayTypeName","src":"457:10:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"anonymous":false,"eventSelector":"65c0ac3f6aa97317ad1e9f6c73af709aad47dc12a97239e1b08a43a73195f7e0","id":10887,"name":"SaleDeployed","nameLocation":"496:12:29","nodeType":"EventDefinition","parameters":{"id":10886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10885,"indexed":false,"mutability":"mutable","name":"saleContract","nameLocation":"517:12:29","nodeType":"VariableDeclaration","scope":10887,"src":"509:20:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10884,"name":"address","nodeType":"ElementaryTypeName","src":"509:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"508:22:29"},"src":"490:41:29"},{"anonymous":false,"eventSelector":"e751350bf24daf0d26ff7d9b78eac92e15e75dbf7d38a2a87718c5c13326e5d6","id":10895,"name":"SaleOwnerAndTokenSetInFactory","nameLocation":"542:29:29","nodeType":"EventDefinition","parameters":{"id":10894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10889,"indexed":false,"mutability":"mutable","name":"sale","nameLocation":"580:4:29","nodeType":"VariableDeclaration","scope":10895,"src":"572:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10888,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10891,"indexed":false,"mutability":"mutable","name":"saleOwner","nameLocation":"594:9:29","nodeType":"VariableDeclaration","scope":10895,"src":"586:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10890,"name":"address","nodeType":"ElementaryTypeName","src":"586:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10893,"indexed":false,"mutability":"mutable","name":"saleToken","nameLocation":"613:9:29","nodeType":"VariableDeclaration","scope":10895,"src":"605:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10892,"name":"address","nodeType":"ElementaryTypeName","src":"605:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"571:52:29"},"src":"536:88:29"},{"body":{"id":10907,"nodeType":"Block","src":"649:93:29","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":10900,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"681:3:29","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"685:6:29","memberName":"sender","nodeType":"MemberAccess","src":"681:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10898,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10866,"src":"667:5:29","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"id":10899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"673:7:29","memberName":"isAdmin","nodeType":"MemberAccess","referencedDeclaration":8132,"src":"667:13:29","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view external returns (bool)"}},"id":10902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"667:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792041646d696e2063616e206465706c6f792073616c6573","id":10903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"694:29:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_24a5a71a5ed24d296daac19fef5c449aa86d584b42f659c9fdddf747f9edd328","typeString":"literal_string \"Only Admin can deploy sales\""},"value":"Only Admin can deploy sales"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24a5a71a5ed24d296daac19fef5c449aa86d584b42f659c9fdddf747f9edd328","typeString":"literal_string \"Only Admin can deploy sales\""}],"id":10897,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"659:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":10904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"659:65:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10905,"nodeType":"ExpressionStatement","src":"659:65:29"},{"id":10906,"nodeType":"PlaceholderStatement","src":"734:1:29"}]},"id":10908,"name":"onlyAdmin","nameLocation":"639:9:29","nodeType":"ModifierDefinition","parameters":{"id":10896,"nodeType":"ParameterList","parameters":[],"src":"649:0:29"},"src":"630:112:29","virtual":false,"visibility":"internal"},{"body":{"id":10925,"nodeType":"Block","src":"814:95:29","statements":[{"expression":{"id":10919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10915,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10866,"src":"824:5:29","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10917,"name":"_adminContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10910,"src":"839:14:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10916,"name":"IAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8133,"src":"832:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAdmin_$8133_$","typeString":"type(contract IAdmin)"}},"id":10918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"832:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"src":"824:30:29","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}},"id":10920,"nodeType":"ExpressionStatement","src":"824:30:29"},{"expression":{"id":10923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10921,"name":"allocationStaking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10868,"src":"864:17:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10922,"name":"_allocationStaking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10912,"src":"884:18:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"864:38:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10924,"nodeType":"ExpressionStatement","src":"864:38:29"}]},"id":10926,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10910,"mutability":"mutable","name":"_adminContract","nameLocation":"769:14:29","nodeType":"VariableDeclaration","scope":10926,"src":"761:22:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10909,"name":"address","nodeType":"ElementaryTypeName","src":"761:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10912,"mutability":"mutable","name":"_allocationStaking","nameLocation":"793:18:29","nodeType":"VariableDeclaration","scope":10926,"src":"785:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10911,"name":"address","nodeType":"ElementaryTypeName","src":"785:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"760:52:29"},"returnParameters":{"id":10914,"nodeType":"ParameterList","parameters":[],"src":"814:0:29"},"scope":11085,"src":"748:161:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10946,"nodeType":"Block","src":"1038:106:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10934,"name":"_allocationStaking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10928,"src":"1056:18:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":10937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1086:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1078:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10935,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:29","typeDescriptions":{}}},"id":10938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1078:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1056:32:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10933,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1048:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":10940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1048:41:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10941,"nodeType":"ExpressionStatement","src":"1048:41:29"},{"expression":{"id":10944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10942,"name":"allocationStaking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10868,"src":"1099:17:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10943,"name":"_allocationStaking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10928,"src":"1119:18:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1099:38:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10945,"nodeType":"ExpressionStatement","src":"1099:38:29"}]},"functionSelector":"9af2c481","id":10947,"implemented":true,"kind":"function","modifiers":[{"id":10931,"kind":"modifierInvocation","modifierName":{"id":10930,"name":"onlyAdmin","nameLocations":["1028:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":10908,"src":"1028:9:29"},"nodeType":"ModifierInvocation","src":"1028:9:29"}],"name":"setAllocationStaking","nameLocation":"972:20:29","nodeType":"FunctionDefinition","parameters":{"id":10929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10928,"mutability":"mutable","name":"_allocationStaking","nameLocation":"1001:18:29","nodeType":"VariableDeclaration","scope":10947,"src":"993:26:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10927,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:28:29"},"returnParameters":{"id":10932,"nodeType":"ParameterList","parameters":[],"src":"1038:0:29"},"scope":11085,"src":"963:181:29","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10990,"nodeType":"Block","src":"1204:219:29","statements":[{"assignments":[10954],"declarations":[{"constant":false,"id":10954,"mutability":"mutable","name":"sale","nameLocation":"1222:4:29","nodeType":"VariableDeclaration","scope":10990,"src":"1214:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"},"typeName":{"id":10953,"nodeType":"UserDefinedTypeName","pathNode":{"id":10952,"name":"C2NSale","nameLocations":["1214:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":10859,"src":"1214:7:29"},"referencedDeclaration":10859,"src":"1214:7:29","typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}},"visibility":"internal"}],"id":10964,"initialValue":{"arguments":[{"arguments":[{"id":10960,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10866,"src":"1249:5:29","typeDescriptions":{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAdmin_$8133","typeString":"contract IAdmin"}],"id":10959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1241:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10958,"name":"address","nodeType":"ElementaryTypeName","src":"1241:7:29","typeDescriptions":{}}},"id":10961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1241:14:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10962,"name":"allocationStaking","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10868,"src":"1257:17:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"1229:11:29","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_C2NSale_$10859_$","typeString":"function (address,address) returns (contract C2NSale)"},"typeName":{"id":10956,"nodeType":"UserDefinedTypeName","pathNode":{"id":10955,"name":"C2NSale","nameLocations":["1233:7:29"],"nodeType":"IdentifierPath","referencedDeclaration":10859,"src":"1233:7:29"},"referencedDeclaration":10859,"src":"1233:7:29","typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}}},"id":10963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1229:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}},"nodeType":"VariableDeclarationStatement","src":"1214:61:29"},{"expression":{"id":10972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10965,"name":"isSaleCreatedThroughFactory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10872,"src":"1286:27:29","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":10970,"indexExpression":{"arguments":[{"id":10968,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10954,"src":"1322:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}],"id":10967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1314:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10966,"name":"address","nodeType":"ElementaryTypeName","src":"1314:7:29","typeDescriptions":{}}},"id":10969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1314:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1286:42:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1331:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1286:49:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10973,"nodeType":"ExpressionStatement","src":"1286:49:29"},{"expression":{"arguments":[{"arguments":[{"id":10979,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10954,"src":"1367:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}],"id":10978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1359:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10977,"name":"address","nodeType":"ElementaryTypeName","src":"1359:7:29","typeDescriptions":{}}},"id":10980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1359:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":10974,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10883,"src":"1345:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1354:4:29","memberName":"push","nodeType":"MemberAccess","src":"1345:13:29","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":10981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1345:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10982,"nodeType":"ExpressionStatement","src":"1345:28:29"},{"eventCall":{"arguments":[{"arguments":[{"id":10986,"name":"sale","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10954,"src":"1410:4:29","typeDescriptions":{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_C2NSale_$10859","typeString":"contract C2NSale"}],"id":10985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1402:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10984,"name":"address","nodeType":"ElementaryTypeName","src":"1402:7:29","typeDescriptions":{}}},"id":10987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1402:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10983,"name":"SaleDeployed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10887,"src":"1389:12:29","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":10988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1389:27:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10989,"nodeType":"EmitStatement","src":"1384:32:29"}]},"functionSelector":"c050f3d4","id":10991,"implemented":true,"kind":"function","modifiers":[{"id":10950,"kind":"modifierInvocation","modifierName":{"id":10949,"name":"onlyAdmin","nameLocations":["1190:9:29"],"nodeType":"IdentifierPath","referencedDeclaration":10908,"src":"1190:9:29"},"nodeType":"ModifierInvocation","src":"1190:9:29"}],"name":"deploySale","nameLocation":"1160:10:29","nodeType":"FunctionDefinition","parameters":{"id":10948,"nodeType":"ParameterList","parameters":[],"src":"1170:2:29"},"returnParameters":{"id":10951,"nodeType":"ParameterList","parameters":[],"src":"1204:0:29"},"scope":11085,"src":"1151:272:29","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10999,"nodeType":"Block","src":"1545:39:29","statements":[{"expression":{"expression":{"id":10996,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10883,"src":"1562:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":10997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1571:6:29","memberName":"length","nodeType":"MemberAccess","src":"1562:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10995,"id":10998,"nodeType":"Return","src":"1555:22:29"}]},"functionSelector":"209a9f41","id":11000,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfSalesDeployed","nameLocation":"1489:24:29","nodeType":"FunctionDefinition","parameters":{"id":10992,"nodeType":"ParameterList","parameters":[],"src":"1513:2:29"},"returnParameters":{"id":10995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11000,"src":"1539:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10993,"name":"uint","nodeType":"ElementaryTypeName","src":"1539:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1538:6:29"},"scope":11085,"src":"1480:104:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11023,"nodeType":"Block","src":"1669:139:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11005,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10883,"src":"1693:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":11006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1702:6:29","memberName":"length","nodeType":"MemberAccess","src":"1693:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":11007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1711:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1693:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11017,"nodeType":"IfStatement","src":"1690:85:29","trueBody":{"id":11016,"nodeType":"Block","src":"1714:61:29","statements":[{"expression":{"baseExpression":{"id":11009,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10883,"src":"1735:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":11014,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11010,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10883,"src":"1744:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":11011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1753:6:29","memberName":"length","nodeType":"MemberAccess","src":"1744:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":11012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1762:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1744:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1735:29:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":11004,"id":11015,"nodeType":"Return","src":"1728:36:29"}]}},{"expression":{"arguments":[{"hexValue":"30","id":11020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1799:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1791:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11018,"name":"address","nodeType":"ElementaryTypeName","src":"1791:7:29","typeDescriptions":{}}},"id":11021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1791:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":11004,"id":11022,"nodeType":"Return","src":"1784:17:29"}]},"functionSelector":"b033342b","id":11024,"implemented":true,"kind":"function","modifiers":[],"name":"getLastDeployedSale","nameLocation":"1615:19:29","nodeType":"FunctionDefinition","parameters":{"id":11001,"nodeType":"ParameterList","parameters":[],"src":"1634:2:29"},"returnParameters":{"id":11004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11024,"src":"1660:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11002,"name":"address","nodeType":"ElementaryTypeName","src":"1660:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1659:9:29"},"scope":11085,"src":"1606:202:29","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11083,"nodeType":"Block","src":"1942:305:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11035,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11028,"src":"1960:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":11036,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11026,"src":"1971:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1960:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616420696e707574","id":11038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1983:11:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_b1f424a7afcd911508d69acd5d2300a22fe2a17337793f47b70bb2457f4ed514","typeString":"literal_string \"Bad input\""},"value":"Bad input"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b1f424a7afcd911508d69acd5d2300a22fe2a17337793f47b70bb2457f4ed514","typeString":"literal_string \"Bad input\""}],"id":11034,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"1952:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1952:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11040,"nodeType":"ExpressionStatement","src":"1952:43:29"},{"assignments":[11045],"declarations":[{"constant":false,"id":11045,"mutability":"mutable","name":"sales","nameLocation":"2023:5:29","nodeType":"VariableDeclaration","scope":11083,"src":"2006:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11043,"name":"address","nodeType":"ElementaryTypeName","src":"2006:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11044,"nodeType":"ArrayTypeName","src":"2006:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":11053,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11049,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11028,"src":"2045:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":11050,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11026,"src":"2056:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2045:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2031:13:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":11046,"name":"address","nodeType":"ElementaryTypeName","src":"2035:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11047,"nodeType":"ArrayTypeName","src":"2035:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":11052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2031:36:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2006:61:29"},{"assignments":[11055],"declarations":[{"constant":false,"id":11055,"mutability":"mutable","name":"index","nameLocation":"2082:5:29","nodeType":"VariableDeclaration","scope":11083,"src":"2077:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11054,"name":"uint","nodeType":"ElementaryTypeName","src":"2077:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11057,"initialValue":{"hexValue":"30","id":11056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2090:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2077:14:29"},{"body":{"id":11079,"nodeType":"Block","src":"2146:72:29","statements":[{"expression":{"id":11074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11068,"name":"sales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11045,"src":"2160:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":11070,"indexExpression":{"id":11069,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11055,"src":"2166:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2160:12:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":11071,"name":"allSales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10883,"src":"2175:8:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":11073,"indexExpression":{"id":11072,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11059,"src":"2184:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2175:11:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2160:26:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11075,"nodeType":"ExpressionStatement","src":"2160:26:29"},{"expression":{"id":11077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2200:7:29","subExpression":{"id":11076,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11055,"src":"2200:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11078,"nodeType":"ExpressionStatement","src":"2200:7:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11062,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11059,"src":"2127:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":11063,"name":"endIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11028,"src":"2131:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2127:12:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11080,"initializationExpression":{"assignments":[11059],"declarations":[{"constant":false,"id":11059,"mutability":"mutable","name":"i","nameLocation":"2111:1:29","nodeType":"VariableDeclaration","scope":11080,"src":"2106:6:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11058,"name":"uint","nodeType":"ElementaryTypeName","src":"2106:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11061,"initialValue":{"id":11060,"name":"startIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11026,"src":"2115:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2106:19:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":11066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2141:3:29","subExpression":{"id":11065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11059,"src":"2141:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11067,"nodeType":"ExpressionStatement","src":"2141:3:29"},"nodeType":"ForStatement","src":"2102:116:29"},{"expression":{"id":11081,"name":"sales","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11045,"src":"2235:5:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":11033,"id":11082,"nodeType":"Return","src":"2228:12:29"}]},"functionSelector":"9e75cf45","id":11084,"implemented":true,"kind":"function","modifiers":[],"name":"getAllSales","nameLocation":"1857:11:29","nodeType":"FunctionDefinition","parameters":{"id":11029,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11026,"mutability":"mutable","name":"startIndex","nameLocation":"1874:10:29","nodeType":"VariableDeclaration","scope":11084,"src":"1869:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11025,"name":"uint","nodeType":"ElementaryTypeName","src":"1869:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11028,"mutability":"mutable","name":"endIndex","nameLocation":"1891:8:29","nodeType":"VariableDeclaration","scope":11084,"src":"1886:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11027,"name":"uint","nodeType":"ElementaryTypeName","src":"1886:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1868:32:29"},"returnParameters":{"id":11033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11032,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11084,"src":"1924:16:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":11030,"name":"address","nodeType":"ElementaryTypeName","src":"1924:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11031,"nodeType":"ArrayTypeName","src":"1924:9:29","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"1923:18:29"},"scope":11085,"src":"1848:399:29","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":11086,"src":"124:2126:29","usedErrors":[],"usedEvents":[10887,10895]}],"src":"38:2213:29"},"id":29},"contracts/token/Airdrop.sol":{"ast":{"absolutePath":"contracts/token/Airdrop.sol","exportedSymbols":{"Airdrop":[11186],"IERC20":[1466]},"id":11187,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":11087,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:30"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":11088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11187,"sourceUnit":1467,"src":"63:56:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Airdrop","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":11186,"linearizedBaseContracts":[11186],"name":"Airdrop","nameLocation":"132:7:30","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"4d06068a","id":11091,"mutability":"mutable","name":"airdropToken","nameLocation":"162:12:30","nodeType":"VariableDeclaration","scope":11186,"src":"148:26:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"},"typeName":{"id":11090,"nodeType":"UserDefinedTypeName","pathNode":{"id":11089,"name":"IERC20","nameLocations":["148:6:30"],"nodeType":"IdentifierPath","referencedDeclaration":1466,"src":"148:6:30"},"referencedDeclaration":1466,"src":"148:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"visibility":"public"},{"constant":false,"functionSelector":"cac37f93","id":11093,"mutability":"mutable","name":"totalTokensWithdrawn","nameLocation":"195:20:30","nodeType":"VariableDeclaration","scope":11186,"src":"180:35:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11092,"name":"uint256","nodeType":"ElementaryTypeName","src":"180:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"bd8d8c32","id":11097,"mutability":"mutable","name":"wasClaimed","nameLocation":"255:10:30","nodeType":"VariableDeclaration","scope":11186,"src":"222:43:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":11096,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":11094,"name":"address","nodeType":"ElementaryTypeName","src":"231:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"222:25:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":11095,"name":"bool","nodeType":"ElementaryTypeName","src":"242:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":true,"functionSelector":"ccfff679","id":11104,"mutability":"constant","name":"TOKENS_PER_CLAIM","nameLocation":"295:16:30","nodeType":"VariableDeclaration","scope":11186,"src":"271:55:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11098,"name":"uint256","nodeType":"ElementaryTypeName","src":"271:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"},"id":11103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":11099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"314:3:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":11102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":11100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"320:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":11101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"324:2:30","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"320:6:30","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"314:12:30","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000_by_1","typeString":"int_const 100000000000000000000"}},"visibility":"public"},{"anonymous":false,"eventSelector":"df23082d2b28b19078bc48141d3fdbfd14390048297d149755a09e7edd8129a9","id":11108,"name":"TokensAirdropped","nameLocation":"339:16:30","nodeType":"EventDefinition","parameters":{"id":11107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11106,"indexed":false,"mutability":"mutable","name":"beneficiary","nameLocation":"364:11:30","nodeType":"VariableDeclaration","scope":11108,"src":"356:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11105,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"355:21:30"},"src":"333:44:30"},{"body":{"id":11128,"nodeType":"Block","src":"452:100:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11114,"name":"_airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11110,"src":"470:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":11117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"495:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"487:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11115,"name":"address","nodeType":"ElementaryTypeName","src":"487:7:30","typeDescriptions":{}}},"id":11118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"487:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"470:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":11113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"462:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":11120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"462:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11121,"nodeType":"ExpressionStatement","src":"462:36:30"},{"expression":{"id":11126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11122,"name":"airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"509:12:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":11124,"name":"_airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11110,"src":"531:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11123,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"524:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1466_$","typeString":"type(contract IERC20)"}},"id":11125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"524:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"src":"509:36:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":11127,"nodeType":"ExpressionStatement","src":"509:36:30"}]},"id":11129,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11110,"mutability":"mutable","name":"_airdropToken","nameLocation":"437:13:30","nodeType":"VariableDeclaration","scope":11129,"src":"429:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11109,"name":"address","nodeType":"ElementaryTypeName","src":"429:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"428:23:30"},"returnParameters":{"id":11112,"nodeType":"ParameterList","parameters":[],"src":"452:0:30"},"scope":11186,"src":"417:135:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":11184,"nodeType":"Block","src":"627:492:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":11137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":11133,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"645:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"649:6:30","memberName":"sender","nodeType":"MemberAccess","src":"645:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":11135,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"659:2:30","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":11136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"662:6:30","memberName":"origin","nodeType":"MemberAccess","src":"659:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"645:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"526571756972652074686174206d6573736167652073656e6465722069732074782d6f726967696e2e","id":11138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"670:43:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a2a8a0f601202a38685fba98d896d5126fc1d9a2fb75755fccf01b6395c57ef8","typeString":"literal_string \"Require that message sender is tx-origin.\""},"value":"Require that message sender is tx-origin."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a2a8a0f601202a38685fba98d896d5126fc1d9a2fb75755fccf01b6395c57ef8","typeString":"literal_string \"Require that message sender is tx-origin.\""}],"id":11132,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"637:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"637:77:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11140,"nodeType":"ExpressionStatement","src":"637:77:30"},{"assignments":[11142],"declarations":[{"constant":false,"id":11142,"mutability":"mutable","name":"beneficiary","nameLocation":"733:11:30","nodeType":"VariableDeclaration","scope":11184,"src":"725:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11141,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":11145,"initialValue":{"expression":{"id":11143,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"747:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"751:6:30","memberName":"sender","nodeType":"MemberAccess","src":"747:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"725:32:30"},{"expression":{"arguments":[{"id":11150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"776:24:30","subExpression":{"baseExpression":{"id":11147,"name":"wasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11097,"src":"777:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11149,"indexExpression":{"id":11148,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11142,"src":"788:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"777:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d656421","id":11151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"802:18:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0b71a460a88560813dde520885f62fbdfb8f077fc6b93e7703d54cfd9ef8988e","typeString":"literal_string \"Already claimed!\""},"value":"Already claimed!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0b71a460a88560813dde520885f62fbdfb8f077fc6b93e7703d54cfd9ef8988e","typeString":"literal_string \"Already claimed!\""}],"id":11146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"768:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"768:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11153,"nodeType":"ExpressionStatement","src":"768:53:30"},{"expression":{"id":11159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11154,"name":"wasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11097,"src":"831:10:30","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":11157,"indexExpression":{"expression":{"id":11155,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:6:30","memberName":"sender","nodeType":"MemberAccess","src":"842:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"831:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":11158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"856:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"831:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11160,"nodeType":"ExpressionStatement","src":"831:29:30"},{"assignments":[11162],"declarations":[{"constant":false,"id":11162,"mutability":"mutable","name":"status","nameLocation":"876:6:30","nodeType":"VariableDeclaration","scope":11184,"src":"871:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11161,"name":"bool","nodeType":"ElementaryTypeName","src":"871:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":11168,"initialValue":{"arguments":[{"id":11165,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11142,"src":"907:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11166,"name":"TOKENS_PER_CLAIM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11104,"src":"920:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":11163,"name":"airdropToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11091,"src":"885:12:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1466","typeString":"contract IERC20"}},"id":11164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"898:8:30","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1433,"src":"885:21:30","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":11167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"885:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"871:66:30"},{"expression":{"arguments":[{"id":11170,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11162,"src":"955:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e207472616e73666572207374617475732069732066616c73652e","id":11171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"963:33:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e2004c87615c34be784fd97b16cf04a2515f7b36cbc048541b9a32bdee1f3825","typeString":"literal_string \"Token transfer status is false.\""},"value":"Token transfer status is false."}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e2004c87615c34be784fd97b16cf04a2515f7b36cbc048541b9a32bdee1f3825","typeString":"literal_string \"Token transfer status is false.\""}],"id":11169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"947:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":11172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"947:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11173,"nodeType":"ExpressionStatement","src":"947:50:30"},{"expression":{"id":11178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11174,"name":"totalTokensWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11093,"src":"1008:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11175,"name":"totalTokensWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11093,"src":"1031:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":11176,"name":"TOKENS_PER_CLAIM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11104,"src":"1052:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1031:37:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1008:60:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11179,"nodeType":"ExpressionStatement","src":"1008:60:30"},{"eventCall":{"arguments":[{"id":11181,"name":"beneficiary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11142,"src":"1100:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11180,"name":"TokensAirdropped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11108,"src":"1083:16:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":11182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1083:29:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11183,"nodeType":"EmitStatement","src":"1078:34:30"}]},"functionSelector":"8d8f2adb","id":11185,"implemented":true,"kind":"function","modifiers":[],"name":"withdrawTokens","nameLocation":"603:14:30","nodeType":"FunctionDefinition","parameters":{"id":11130,"nodeType":"ParameterList","parameters":[],"src":"617:2:30"},"returnParameters":{"id":11131,"nodeType":"ParameterList","parameters":[],"src":"627:0:30"},"scope":11186,"src":"594:525:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":11187,"src":"123:999:30","usedErrors":[],"usedEvents":[11108]}],"src":"38:1085:30"},"id":30},"contracts/token/C2NToken.sol":{"ast":{"absolutePath":"contracts/token/C2NToken.sol","exportedSymbols":{"C2NToken":[11253],"Context":[1931],"ERC20":[1388],"IERC20":[1466],"IERC20Errors":[778],"IERC20Metadata":[1492]},"id":11254,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":11188,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"38:23:31"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":11189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11254,"sourceUnit":1389,"src":"63:55:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":11190,"name":"ERC20","nameLocations":["143:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":1388,"src":"143:5:31"},"id":11191,"nodeType":"InheritanceSpecifier","src":"143:5:31"}],"canonicalName":"C2NToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":11253,"linearizedBaseContracts":[11253,1388,778,1492,1466,1931],"name":"C2NToken","nameLocation":"131:8:31","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":11193,"mutability":"mutable","name":"_decimals","nameLocation":"170:9:31","nodeType":"VariableDeclaration","scope":11253,"src":"156:23:31","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11192,"name":"uint8","nodeType":"ElementaryTypeName","src":"156:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"private"},{"body":{"id":11218,"nodeType":"Block","src":"305:79:31","statements":[{"expression":{"id":11210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11208,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11193,"src":"315:9:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11209,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11201,"src":"325:9:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"315:19:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":11211,"nodeType":"ExpressionStatement","src":"315:19:31"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":11213,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"350:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"350:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11215,"name":"totalSupply_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11199,"src":"364:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11212,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"344:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"344:33:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11217,"nodeType":"ExpressionStatement","src":"344:33:31"}]},"id":11219,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":11204,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11195,"src":"289:5:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":11205,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11197,"src":"296:7:31","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":11206,"kind":"baseConstructorSpecifier","modifierName":{"id":11203,"name":"ERC20","nameLocations":["282:5:31"],"nodeType":"IdentifierPath","referencedDeclaration":1388,"src":"282:5:31"},"nodeType":"ModifierInvocation","src":"282:22:31"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11195,"mutability":"mutable","name":"name_","nameLocation":"213:5:31","nodeType":"VariableDeclaration","scope":11219,"src":"199:19:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11194,"name":"string","nodeType":"ElementaryTypeName","src":"199:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11197,"mutability":"mutable","name":"symbol_","nameLocation":"234:7:31","nodeType":"VariableDeclaration","scope":11219,"src":"220:21:31","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11196,"name":"string","nodeType":"ElementaryTypeName","src":"220:6:31","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":11199,"mutability":"mutable","name":"totalSupply_","nameLocation":"251:12:31","nodeType":"VariableDeclaration","scope":11219,"src":"243:20:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11198,"name":"uint256","nodeType":"ElementaryTypeName","src":"243:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11201,"mutability":"mutable","name":"decimals_","nameLocation":"271:9:31","nodeType":"VariableDeclaration","scope":11219,"src":"265:15:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11200,"name":"uint8","nodeType":"ElementaryTypeName","src":"265:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"198:83:31"},"returnParameters":{"id":11207,"nodeType":"ParameterList","parameters":[],"src":"305:0:31"},"scope":11253,"src":"186:198:31","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[952],"body":{"id":11227,"nodeType":"Block","src":"446:33:31","statements":[{"expression":{"id":11225,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11193,"src":"463:9:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":11224,"id":11226,"nodeType":"Return","src":"456:16:31"}]},"functionSelector":"313ce567","id":11228,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"399:8:31","nodeType":"FunctionDefinition","overrides":{"id":11221,"nodeType":"OverrideSpecifier","overrides":[],"src":"422:8:31"},"parameters":{"id":11220,"nodeType":"ParameterList","parameters":[],"src":"407:2:31"},"returnParameters":{"id":11224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11228,"src":"440:5:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":11222,"name":"uint8","nodeType":"ElementaryTypeName","src":"440:5:31","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"439:7:31"},"scope":11253,"src":"390:89:31","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":11239,"nodeType":"Block","src":"525:44:31","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":11234,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"541:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"541:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11236,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11230,"src":"555:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11233,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"535:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"535:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11238,"nodeType":"ExpressionStatement","src":"535:27:31"}]},"functionSelector":"42966c68","id":11240,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"498:4:31","nodeType":"FunctionDefinition","parameters":{"id":11231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11230,"mutability":"mutable","name":"amount","nameLocation":"508:6:31","nodeType":"VariableDeclaration","scope":11240,"src":"503:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11229,"name":"uint","nodeType":"ElementaryTypeName","src":"503:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"502:13:31"},"returnParameters":{"id":11232,"nodeType":"ParameterList","parameters":[],"src":"525:0:31"},"scope":11253,"src":"489:80:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11251,"nodeType":"Block","src":"611:44:31","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":11246,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"627:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:12:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11248,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11242,"src":"641:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11245,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"621:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"621:27:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11250,"nodeType":"ExpressionStatement","src":"621:27:31"}]},"functionSelector":"a0712d68","id":11252,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"584:4:31","nodeType":"FunctionDefinition","parameters":{"id":11243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11242,"mutability":"mutable","name":"amount","nameLocation":"594:6:31","nodeType":"VariableDeclaration","scope":11252,"src":"589:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11241,"name":"uint","nodeType":"ElementaryTypeName","src":"589:4:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"588:13:31"},"returnParameters":{"id":11244,"nodeType":"ParameterList","parameters":[],"src":"611:0:31"},"scope":11253,"src":"575:80:31","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":11254,"src":"122:535:31","usedErrors":[748,753,758,767,772,777],"usedEvents":[1400,1409]}],"src":"38:620:31"},"id":31}},"contracts":{"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}}}},"@openzeppelin/contracts/interfaces/IERC1363.sol":{"IERC1363":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"approveAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFromAndCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","approveAndCall(address,uint256)":"3177029f","approveAndCall(address,uint256,bytes)":"cae9ca51","balanceOf(address)":"70a08231","supportsInterface(bytes4)":"01ffc9a7","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256)":"1296ee62","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd","transferFromAndCall(address,address,uint256)":"d8fbe994","transferFromAndCall(address,address,uint256,bytes)":"c1d34b89"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":896,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":902,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":904,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":906,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":908,"contract":"@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol":{"SafeERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"currentAllowance","type":"uint256"},{"internalType":"uint256","name":"requestedDecrease","type":"uint256"}],"name":"SafeERC20FailedDecreaseAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220639c0238504bfb07f4642f0a4efcffaa78af45e437dd33ceabe3ecd7bc56e7f164736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x9C023850 0x4B 0xFB SMOD DELEGATECALL PUSH5 0x2F0A4EFCFF 0xAA PUSH25 0xAF45E437DD33CEABE3ECD7BC56E7F164736F6C634300081A00 CALLER ","sourceMap":"698:8692:12:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220639c0238504bfb07f4642f0a4efcffaa78af45e437dd33ceabe3ecd7bc56e7f164736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x9C023850 0x4B 0xFB SMOD DELEGATECALL PUSH5 0x2F0A4EFCFF 0xAA PUSH25 0xAF45E437DD33CEABE3ECD7BC56E7F164736F6C634300081A00 CALLER ","sourceMap":"698:8692:12:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220eaa39cc1fa646d51e27e00da6cbcde8619812f7b423ed6972fdf850bfd85f25c64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA LOG3 SWAP13 0xC1 STATICCALL PUSH5 0x6D51E27E00 0xDA PUSH13 0xBCDE8619812F7B423ED6972FDF DUP6 SIGNEXTEND REVERT DUP6 CALLCODE TLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"657:1315:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220eaa39cc1fa646d51e27e00da6cbcde8619812f7b423ed6972fdf850bfd85f25c64736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA LOG3 SWAP13 0xC1 STATICCALL PUSH5 0x6D51E27E00 0xDA PUSH13 0xBCDE8619812F7B423ED6972FDF DUP6 SIGNEXTEND REVERT DUP6 CALLCODE TLOAD PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"657:1315:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220aea853bec2c8c293c377d4a666fb2159077d61a4e0c06958e6faae1b11cfd29664736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xA8 MSTORE8 0xBE 0xC2 0xC8 0xC2 SWAP4 0xC3 PUSH24 0xD4A666FB2159077D61A4E0C06958E6FAAE1B11CFD2966473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"297:16541:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220aea853bec2c8c293c377d4a666fb2159077d61a4e0c06958e6faae1b11cfd29664736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xA8 MSTORE8 0xBE 0xC2 0xC8 0xC2 SWAP4 0xC3 PUSH24 0xD4A666FB2159077D61A4E0C06958E6FAAE1B11CFD2966473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"297:16541:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220cc7b162702089ed1ebf95823a9b7620331fbae901444e4acdc96aae34208ab8764736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH28 0x162702089ED1EBF95823A9B7620331FBAE901444E4ACDC96AAE34208 0xAB DUP8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"344:7470:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220cc7b162702089ed1ebf95823a9b7620331fbae901444e4acdc96aae34208ab8764736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH28 0x162702089ED1EBF95823A9B7620331FBAE901444E4ACDC96AAE34208 0xAB DUP8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"344:7470:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201678ea78a5d5640f5a3146fe368c8b157b3dad7eacac2ae3a11a628aa44bc97064736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH25 0xEA78A5D5640F5A3146FE368C8B157B3DAD7EACAC2AE3A11A62 DUP11 LOG4 0x4B 0xC9 PUSH17 0x64736F6C634300081A0033000000000000 ","sourceMap":"521:3181:17:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212201678ea78a5d5640f5a3146fe368c8b157b3dad7eacac2ae3a11a628aa44bc97064736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH25 0xEA78A5D5640F5A3146FE368C8B157B3DAD7EACAC2AE3A11A62 DUP11 LOG4 0x4B 0xC9 PUSH17 0x64736F6C634300081A0033000000000000 ","sourceMap":"521:3181:17:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":\"MessageHashUtils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122029cd988f75893d7601b132521838099f0972f4208f2d7c68081c375c43ffb5a864736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xCD SWAP9 DUP16 PUSH22 0x893D7601B132521838099F0972F4208F2D7C68081C37 TLOAD NUMBER SELFDESTRUCT 0xB5 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"281:28026:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122029cd988f75893d7601b132521838099f0972f4208f2d7c68081c375c43ffb5a864736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xCD SWAP9 DUP16 PUSH22 0x893D7601B132521838099F0972F4208F2D7C68081C37 TLOAD NUMBER SELFDESTRUCT 0xB5 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"281:28026:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220df0891c185c469eb08afb4445ea29f4c08a4a7bbf61d49e8da22e1cdf71d9f1b64736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF ADDMOD SWAP2 0xC1 DUP6 0xC4 PUSH10 0xEB08AFB4445EA29F4C08 LOG4 0xA7 0xBB 0xF6 SAR BLOBHASH 0xE8 0xDA 0x22 0xE1 0xCD 0xF7 SAR SWAP16 SHL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"769:34173:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220df0891c185c469eb08afb4445ea29f4c08a4a7bbf61d49e8da22e1cdf71d9f1b64736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF ADDMOD SWAP2 0xC1 DUP6 0xC4 PUSH10 0xEB08AFB4445EA29F4C08 LOG4 0xA7 0xBB 0xF6 SAR BLOBHASH 0xE8 0xDA 0x22 0xE1 0xCD 0xF7 SAR SWAP16 SHL PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"769:34173:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206dce96a4a9addce0fdcccbb1f92dd394983241c288dd951fabee9ca6f87d474164736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xCE96A4A9ADDCE0FDCCCBB1F92DD3 SWAP5 SWAP9 ORIGIN COINBASE 0xC2 DUP9 0xDD SWAP6 0x1F 0xAB 0xEE SWAP13 0xA6 0xF8 PUSH30 0x474164736F6C634300081A00330000000000000000000000000000000000 ","sourceMap":"258:2354:21:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206dce96a4a9addce0fdcccbb1f92dd394983241c288dd951fabee9ca6f87d474164736f6c634300081a0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xCE96A4A9ADDCE0FDCCCBB1F92DD3 SWAP5 SWAP9 ORIGIN COINBASE 0xC2 DUP9 0xDD SWAP6 0x1F 0xAB 0xEE SWAP13 0xA6 0xF8 PUSH30 0x474164736F6C634300081A00330000000000000000000000000000000000 ","sourceMap":"258:2354:21:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/access/Admin.sol":{"Admin":{"abi":[{"inputs":[{"internalType":"address[]","name":"_admins","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"_adminAddress","type":"address"}],"name":"addAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"admins","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllAdmins","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_adminAddress","type":"address"}],"name":"removeAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"allocate_memory":{"entryPoint":409,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_address_dyn":{"entryPoint":446,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608060405234610194576107b38038038061001981610199565b928339810190602081830312610194578051906001600160401b038211610194570181601f82011215610194578051916001600160401b03831161014f578260051b9160208061006a818601610199565b80968152019382010191821161019457602001915b818310610174578360005b8151811015610165576001600160a01b036100a582846101be565b511690600054916801000000000000000083101561014f57600183018060005583101561013957600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390920180546001600160a01b0319169092179091556001906001600160a01b0361011b82856101be565b51166000528160205260406000208260ff198254161790550161008a565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6040516105e090816101d38239f35b82516001600160a01b03811681036101945781526020928301920161007f565b600080fd5b6040519190601f01601f191682016001600160401b0381118382101761014f57604052565b80518210156101395760209160051b01019056fe6080604052600436101561001257600080fd5b60003560e01c806314bfd6d0146104f55780631785f53c146102f357806324d7806c146102b0578063704802751461014e5763e9523c971461005357600080fd5b346101495760003660031901126101495760405180602060005491828152018091600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639060005b81811061012a57505050829003601f01601f191682019167ffffffffffffffff83118184101761011457908291826040526020830190602084525180915260408301919060005b8181106100f2575050500390f35b82516001600160a01b03168452859450602093840193909201916001016100e4565b634e487b7160e01b600052604160045260246000fd5b82546001600160a01b031684526020909301926001928301920161009d565b600080fd5b34610149576020366003190112610149576004356001600160a01b038116908181036101495733600052600160205261018e60ff60406000205416610567565b81156102585781600052600160205260ff60406000205416610213576000549068010000000000000000821015610114576101d28260016101f69401600055610537565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b60005260016020526040600020600160ff19825416179055600080f35b60405162461bcd60e51b815260206004820152601e60248201527f5b524241435d203a2041646d696e20616c7265616479206578697374732e00006044820152606490fd5b60405162461bcd60e51b815260206004820152602a60248201527f5b524241435d203a2041646d696e206d75737420626520213d207468616e20306044820152697830206164647265737360b01b6064820152608490fd5b34610149576020366003190112610149576004356001600160a01b03811690819003610149576000526001602052602060ff604060002054166040519015158152f35b34610149576020366003190112610149576004356001600160a01b038116908190036101495733600052600160205261033360ff60406000205416610567565b80600052600160205260ff604060002054161561014957600054600181111561048a5760005b8261036382610537565b905460039190911b1c6001600160a01b0316146103f9578181146103a857600019811461039257600101610359565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152602360248201527f5061737365642061646d696e206164647265737320646f6573206e6f742065786044820152621a5cdd60ea1b6064820152608490fd5b6000198201918211610392576101d261041461042c93610537565b905460039190911b1c6001600160a01b031691610537565b6000526001602052604060002060ff1981541690556000548015610474576000190161045781610537565b81546001600160a01b0360039290921b9190911b19169055600055005b634e487b7160e01b600052603160045260246000fd5b60405162461bcd60e51b815260206004820152603a60248201527f43616e206e6f742072656d6f766520616c6c2061646d696e732073696e63652060448201527f636f6e7472616374206265636f6d657320756e757361626c652e0000000000006064820152608490fd5b34610149576020366003190112610149576004356000548110156101495761051e602091610537565b905460405160039290921b1c6001600160a01b03168152f35b600054811015610551576000805260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b1561056e57565b60405162461bcd60e51b815260206004820152601460248201527327b7363c9030b236b4b71031b0b71031b0b6361760611b6044820152606490fdfea26469706673582212200817628f39e9933ff4f625e7cc8aea1da4f4038b23b9e80046f5547ff99fa75464736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x194 JUMPI PUSH2 0x7B3 DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x199 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x20 DUP2 DUP4 SUB SLT PUSH2 0x194 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x194 JUMPI ADD DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x194 JUMPI DUP1 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x14F JUMPI DUP3 PUSH1 0x5 SHL SWAP2 PUSH1 0x20 DUP1 PUSH2 0x6A DUP2 DUP7 ADD PUSH2 0x199 JUMP JUMPDEST DUP1 SWAP7 DUP2 MSTORE ADD SWAP4 DUP3 ADD ADD SWAP2 DUP3 GT PUSH2 0x194 JUMPI PUSH1 0x20 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x174 JUMPI DUP4 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x165 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xA5 DUP3 DUP5 PUSH2 0x1BE JUMP JUMPDEST MLOAD AND SWAP1 PUSH1 0x0 SLOAD SWAP2 PUSH9 0x10000000000000000 DUP4 LT ISZERO PUSH2 0x14F JUMPI PUSH1 0x1 DUP4 ADD DUP1 PUSH1 0x0 SSTORE DUP4 LT ISZERO PUSH2 0x139 JUMPI PUSH1 0x0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x11B DUP3 DUP6 PUSH2 0x1BE JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE ADD PUSH2 0x8A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP1 DUP2 PUSH2 0x1D3 DUP3 CODECOPY RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x194 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x14F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x139 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14BFD6D0 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x14E JUMPI PUSH4 0xE9523C97 EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x0 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0x0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x12A JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x114 JUMPI SWAP1 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xF2 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x9D JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x149 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x18E PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x567 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x258 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x213 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x114 JUMPI PUSH2 0x1D2 DUP3 PUSH1 0x1 PUSH2 0x1F6 SWAP5 ADD PUSH1 0x0 SSTORE PUSH2 0x537 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL SWAP4 SWAP1 SWAP2 SHL NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5B524241435D203A2041646D696E20616C7265616479206578697374732E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5B524241435D203A2041646D696E206D75737420626520213D207468616E2030 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x78302061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x149 JUMPI PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x149 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x333 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x567 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 JUMPDEST DUP3 PUSH2 0x363 DUP3 PUSH2 0x537 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3F9 JUMPI DUP2 DUP2 EQ PUSH2 0x3A8 JUMPI PUSH1 0x0 NOT DUP2 EQ PUSH2 0x392 JUMPI PUSH1 0x1 ADD PUSH2 0x359 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061737365642061646D696E206164647265737320646F6573206E6F74206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1A5CDD PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x392 JUMPI PUSH2 0x1D2 PUSH2 0x414 PUSH2 0x42C SWAP4 PUSH2 0x537 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 SLOAD DUP1 ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x457 DUP2 PUSH2 0x537 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 SWAP1 SWAP2 SHL NOT AND SWAP1 SSTORE PUSH1 0x0 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206E6F742072656D6F766520616C6C2061646D696E732073696E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374206265636F6D657320756E757361626C652E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x149 JUMPI PUSH2 0x51E PUSH1 0x20 SWAP2 PUSH2 0x537 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x27B7363C9030B236B4B71031B0B71031B0B63617 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD OR PUSH3 0x8F39E9 SWAP4 EXTCODEHASH DELEGATECALL 0xF6 0x25 0xE7 0xCC DUP11 0xEA SAR LOG4 DELEGATECALL SUB DUP12 0x23 0xB9 0xE8 STOP CHAINID CREATE2 SLOAD PUSH32 0xF99FA75464736F6C634300081A00330000000000000000000000000000000000 ","sourceMap":"63:1917:22:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;;;;;;;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;509:10;-1:-1:-1;541:3:22;63:1917;;521:18;;;;;-1:-1:-1;;;;;572:10:22;;;;:::i;:::-;63:1917;;;-1:-1:-1;63:1917:22;;;;;;;;;;;;-1:-1:-1;63:1917:22;;;;;;-1:-1:-1;63:1917:22;;;;;;;;-1:-1:-1;;;;;;63:1917:22;;;;;;;;;-1:-1:-1;;;;;605:10:22;;;;:::i;:::-;63:1917;;-1:-1:-1;63:1917:22;;;;;-1:-1:-1;63:1917:22;;;;;;;;;;;509:10;;63:1917;;;;-1:-1:-1;63:1917:22;;;;;-1:-1:-1;63:1917:22;;;;;-1:-1:-1;63:1917:22;;;;;-1:-1:-1;63:1917:22;521:18;63:1917;;;;;;;;;;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;;;;;;;;;;-1:-1:-1;63:1917:22;;;;;;;;;-1:-1:-1;;63:1917:22;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"require_helper_stringliteral_eeb8":{"entryPoint":1383,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":1335,"id":null,"parameterSlots":1,"returnSlots":2},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806314bfd6d0146104f55780631785f53c146102f357806324d7806c146102b0578063704802751461014e5763e9523c971461005357600080fd5b346101495760003660031901126101495760405180602060005491828152018091600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639060005b81811061012a57505050829003601f01601f191682019167ffffffffffffffff83118184101761011457908291826040526020830190602084525180915260408301919060005b8181106100f2575050500390f35b82516001600160a01b03168452859450602093840193909201916001016100e4565b634e487b7160e01b600052604160045260246000fd5b82546001600160a01b031684526020909301926001928301920161009d565b600080fd5b34610149576020366003190112610149576004356001600160a01b038116908181036101495733600052600160205261018e60ff60406000205416610567565b81156102585781600052600160205260ff60406000205416610213576000549068010000000000000000821015610114576101d28260016101f69401600055610537565b81546001600160a01b0393841660039290921b91821b9390911b1916919091179055565b60005260016020526040600020600160ff19825416179055600080f35b60405162461bcd60e51b815260206004820152601e60248201527f5b524241435d203a2041646d696e20616c7265616479206578697374732e00006044820152606490fd5b60405162461bcd60e51b815260206004820152602a60248201527f5b524241435d203a2041646d696e206d75737420626520213d207468616e20306044820152697830206164647265737360b01b6064820152608490fd5b34610149576020366003190112610149576004356001600160a01b03811690819003610149576000526001602052602060ff604060002054166040519015158152f35b34610149576020366003190112610149576004356001600160a01b038116908190036101495733600052600160205261033360ff60406000205416610567565b80600052600160205260ff604060002054161561014957600054600181111561048a5760005b8261036382610537565b905460039190911b1c6001600160a01b0316146103f9578181146103a857600019811461039257600101610359565b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152602360248201527f5061737365642061646d696e206164647265737320646f6573206e6f742065786044820152621a5cdd60ea1b6064820152608490fd5b6000198201918211610392576101d261041461042c93610537565b905460039190911b1c6001600160a01b031691610537565b6000526001602052604060002060ff1981541690556000548015610474576000190161045781610537565b81546001600160a01b0360039290921b9190911b19169055600055005b634e487b7160e01b600052603160045260246000fd5b60405162461bcd60e51b815260206004820152603a60248201527f43616e206e6f742072656d6f766520616c6c2061646d696e732073696e63652060448201527f636f6e7472616374206265636f6d657320756e757361626c652e0000000000006064820152608490fd5b34610149576020366003190112610149576004356000548110156101495761051e602091610537565b905460405160039290921b1c6001600160a01b03168152f35b600054811015610551576000805260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b1561056e57565b60405162461bcd60e51b815260206004820152601460248201527327b7363c9030b236b4b71031b0b71031b0b6361760611b6044820152606490fdfea26469706673582212200817628f39e9933ff4f625e7cc8aea1da4f4038b23b9e80046f5547ff99fa75464736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x14BFD6D0 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x1785F53C EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x70480275 EQ PUSH2 0x14E JUMPI PUSH4 0xE9523C97 EQ PUSH2 0x53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 PUSH1 0x0 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD DUP1 SWAP2 PUSH1 0x0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x12A JUMPI POP POP POP DUP3 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT DUP2 DUP5 LT OR PUSH2 0x114 JUMPI SWAP1 DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xF2 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xE4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x9D JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x149 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x18E PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x567 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x258 JUMPI DUP2 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x213 JUMPI PUSH1 0x0 SLOAD SWAP1 PUSH9 0x10000000000000000 DUP3 LT ISZERO PUSH2 0x114 JUMPI PUSH2 0x1D2 DUP3 PUSH1 0x1 PUSH2 0x1F6 SWAP5 ADD PUSH1 0x0 SSTORE PUSH2 0x537 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL SWAP4 SWAP1 SWAP2 SHL NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5B524241435D203A2041646D696E20616C7265616479206578697374732E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5B524241435D203A2041646D696E206D75737420626520213D207468616E2030 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x78302061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x149 JUMPI PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x149 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH2 0x333 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x567 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 JUMPDEST DUP3 PUSH2 0x363 DUP3 PUSH2 0x537 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x3F9 JUMPI DUP2 DUP2 EQ PUSH2 0x3A8 JUMPI PUSH1 0x0 NOT DUP2 EQ PUSH2 0x392 JUMPI PUSH1 0x1 ADD PUSH2 0x359 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061737365642061646D696E206164647265737320646F6573206E6F74206578 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x1A5CDD PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP2 DUP3 GT PUSH2 0x392 JUMPI PUSH2 0x1D2 PUSH2 0x414 PUSH2 0x42C SWAP4 PUSH2 0x537 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x0 SLOAD DUP1 ISZERO PUSH2 0x474 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x457 DUP2 PUSH2 0x537 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 SWAP1 SWAP2 SHL NOT AND SWAP1 SSTORE PUSH1 0x0 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206E6F742072656D6F766520616C6C2061646D696E732073696E636520 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x636F6E7472616374206265636F6D657320756E757361626C652E000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x149 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x149 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x149 JUMPI PUSH2 0x51E PUSH1 0x20 SWAP2 PUSH2 0x537 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x56E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x27B7363C9030B236B4B71031B0B71031B0B63617 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD OR PUSH3 0x8F39E9 SWAP4 EXTCODEHASH DELEGATECALL 0xF6 0x25 0xE7 0xCC DUP11 0xEA SAR LOG4 DELEGATECALL SUB DUP12 0x23 0xB9 0xE8 STOP CHAINID CREATE2 SLOAD PUSH32 0xF99FA75464736F6C634300081A00330000000000000000000000000000000000 ","sourceMap":"63:1917:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;63:1917:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;63:1917:22;;;;;-1:-1:-1;;63:1917:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;63:1917:22;;;;;-1:-1:-1;63:1917:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;63:1917:22;;;;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;335:10;63:1917;;327:7;63:1917;;319:52;63:1917;;;;;;319:52;:::i;:::-;794:29;;63:1917;;;;;327:7;63:1917;;;;;;;;;;;;;;;;;;;;;327:7;63:1917;;;;;;:::i;:::-;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;;;;;;;;;;;;;;;;;;;;327:7;63:1917;;;;;327:7;63:1917;;;;;;;;;;;;;;-1:-1:-1;;;63:1917:22;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;63:1917:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;63:1917:22;;;;;;;;;;;;;-1:-1:-1;;63:1917:22;;;;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;;;195:39;63:1917;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;63:1917:22;;;;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;335:10;63:1917;;327:7;63:1917;;319:52;63:1917;;;;;;319:52;:::i;:::-;63:1917;;;327:7;63:1917;;;;;;;;;;;;;327:7;1311:17;;63:1917;;;;1422:176;1428:9;;;;:::i;:::-;63:1917;;;;;;;;-1:-1:-1;;;;;63:1917:22;1428:26;;;1473:18;;;1470:101;;-1:-1:-1;;63:1917:22;;;;327:7;63:1917;1422:176;;63:1917;;;;;;;;;;;;1470:101;63:1917;;-1:-1:-1;;;1511:45:22;;63:1917;;1511:45;;63:1917;;;;;;;;;;;-1:-1:-1;;;63:1917:22;;;;1511:45;;;1428:26;-1:-1:-1;;63:1917:22;;;;;;;1669:9;1681:23;1669:35;1681:23;;:::i;:::-;63:1917;;;;;;;;-1:-1:-1;;;;;63:1917:22;;1669:9;:::i;:35::-;63:1917;;327:7;63:1917;;;;;;;;;;;;;;;;;;-1:-1:-1;;63:1917:22;;;;:::i;:::-;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;;;;;;-1:-1:-1;63:1917:22;;;;;;;;;;;;;;;;;-1:-1:-1;;;63:1917:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;63:1917:22;;;;;;;;111:24;;;;;;63:1917;111:24;;:::i;:::-;63:1917;;;;;;;;;;-1:-1:-1;;;;;63:1917:22;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;63:1917:22;;;;;;;;;;;;-1:-1:-1;;;63:1917:22;;;;;;"},"methodIdentifiers":{"addAdmin(address)":"70480275","admins(uint256)":"14bfd6d0","getAllAdmins()":"e9523c97","isAdmin(address)":"24d7806c","removeAdmin(address)":"1785f53c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_admins\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"}],\"name\":\"addAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"admins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAdmins\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminAddress\",\"type\":\"address\"}],\"name\":\"removeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/Admin.sol\":\"Admin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/access/Admin.sol\":{\"keccak256\":\"0x8423d966b07385c52d975b0df6232f8296d956046352479ffe127e47d4ffc219\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://dc64c42af6e8f10c995fb050891e5d2a14e5ac98a10628e49d5d4c65e79527a9\",\"dweb:/ipfs/QmayrcKVH6QT8cneSeLC7EFte1nHKFBjB33PZvQSDwGFjM\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":7137,"contract":"contracts/access/Admin.sol:Admin","label":"admins","offset":0,"slot":"0","type":"t_array(t_address)dyn_storage"},{"astId":7141,"contract":"contracts/access/Admin.sol:Admin","label":"isAdmin","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"}}}}},"contracts/farming/FarmingC2N.sol":{"FarmingC2N":{"abi":[{"inputs":[{"internalType":"contract IERC20","name":"_erc20","type":"address"},{"internalType":"uint256","name":"_rewardPerSecond","type":"uint256"},{"internalType":"uint256","name":"_startTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"deposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"erc20","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"fund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paidOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pending","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardTimestamp","type":"uint256"},{"internalType":"uint256","name":"accERC20PerShare","type":"uint256"},{"internalType":"uint256","name":"totalDeposits","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardPerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPending","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x1F PUSH2 0x105E CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xEE JUMPI DUP1 DUP5 SWAP3 PUSH1 0x60 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xE9 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0xE9 JUMPI PUSH1 0x40 PUSH1 0x20 DUP3 ADD MLOAD SWAP2 ADD MLOAD SWAP1 CALLER ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP6 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x3 SSTORE DUP1 PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH2 0xF59 SWAP1 DUP2 PUSH2 0x105 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x81E3EDA EQ PUSH2 0xB31 JUMPI POP DUP1 PUSH4 0xE15561A EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0xAAD JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0xA8F JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x94E JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x7CA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0x70E JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x1B9 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1B4 JUMPI PUSH2 0x155 PUSH2 0xD79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1F3 PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x1FC DUP3 PUSH2 0xB4C JUMP JUMPDEST POP SWAP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD DUP1 TIMESTAMP GT DUP1 PUSH2 0x34A JUMPI JUMPDEST PUSH2 0x272 JUMPI JUMPDEST PUSH1 0x20 PUSH2 0x26A DUP6 PUSH1 0x1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x260 DUP11 DUP5 SLOAD PUSH2 0xC11 JUMP JUMPDEST DIV SWAP2 ADD SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x2C0 SWAP2 PUSH1 0x1 PUSH2 0x2AE PUSH2 0x2A5 PUSH2 0x2B7 SWAP5 PUSH1 0x9 SWAP9 SWAP8 SWAP9 SLOAD SWAP1 DUP2 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0x344 JUMPI TIMESTAMP SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x33C JUMPI POP SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0xC75 JUMP JUMPDEST SWAP2 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP4 MUL SWAP3 DUP1 DUP5 DIV PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x326 JUMPI PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x260 PUSH2 0x31B PUSH1 0x20 SWAP7 PUSH2 0x315 PUSH1 0x1 SWAP6 PUSH2 0x26A SWAP9 PUSH2 0xC75 JUMP JUMPDEST SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP6 POP POP DUP3 SWAP4 POP PUSH2 0x23E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP SWAP1 PUSH2 0xC04 JUMP JUMPDEST DUP2 PUSH2 0x296 JUMP JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x239 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x361 CALLDATASIZE PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x36A DUP3 PUSH2 0xB4C JUMP JUMPDEST POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x3F2 PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 DUP6 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP4 PUSH2 0x3A9 DUP8 PUSH2 0xC95 JUMP JUMPDEST DUP5 SLOAD DUP1 PUSH2 0x424 JUMPI JUMPDEST POP PUSH2 0x3C8 DUP7 DUP6 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND ADDRESS SWAP1 CALLER SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH2 0x3D7 DUP8 DUP3 SLOAD PUSH2 0xBD5 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x3E6 DUP8 DUP8 SLOAD PUSH2 0xBD5 JUMP JUMPDEST SWAP2 DUP3 DUP8 SSTORE ADD SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST DIV SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH2 0x445 DUP5 PUSH2 0x43A PUSH2 0x44B SWAP4 PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST DIV DUP7 DUP9 ADD SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST CALLER PUSH2 0xDA2 JUMP JUMPDEST DUP8 PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x1 SLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x48F SWAP1 DUP3 SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x49E PUSH1 0x3 SLOAD DUP4 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x4 SLOAD PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x4 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x53D PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x585 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x646 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH2 0x6E1 PUSH1 0x4 CALLDATALOAD PUSH2 0x6AA PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x6B2 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x6E6 JUMPI JUMPDEST PUSH2 0x6D9 DUP5 PUSH2 0x6D4 PUSH1 0x7 SLOAD DUP7 PUSH2 0x6CB DUP7 PUSH2 0xB4C JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xB4C JUMP JUMPDEST POP ADD SSTORE STOP JUMPDEST PUSH2 0x6EE PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x70C PUSH2 0xD56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 CALLDATALOAD PUSH2 0x74D DUP2 PUSH2 0xB4C JUMP JUMPDEST POP SWAP1 DUP1 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP7 SWAP1 DUP7 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP3 PUSH2 0x785 DUP6 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP6 SLOAD SWAP1 CALLER SWAP1 PUSH2 0xE41 JUMP JUMPDEST ADD PUSH2 0x793 DUP2 SLOAD DUP5 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST SWAP1 SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 PUSH1 0x20 CALLER SWAP3 LOG3 DUP3 DUP2 SSTORE ADD SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x70C PUSH1 0x4 CALLDATALOAD PUSH2 0xC95 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x7F4 CALLDATASIZE PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x7FD DUP3 PUSH2 0xB4C JUMP JUMPDEST POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP3 DUP3 SLOAD LT PUSH2 0x8DB JUMPI PUSH1 0x4 SWAP2 PUSH2 0x834 DUP6 PUSH2 0xC95 JUMP JUMPDEST PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x884 DUP3 SLOAD SWAP3 DUP3 PUSH2 0x85A PUSH1 0x3 DUP8 ADD SWAP6 DUP7 SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST DIV SWAP4 PUSH2 0x86F PUSH2 0x445 PUSH1 0x1 DUP5 ADD SWAP7 DUP8 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x87A DUP9 DUP4 SLOAD PUSH2 0xC04 JUMP JUMPDEST DUP1 SWAP3 SSTORE SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST DIV SWAP1 SSTORE DUP1 SLOAD PUSH2 0x89F SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE41 JUMP JUMPDEST ADD PUSH2 0x8AB DUP3 DUP3 SLOAD PUSH2 0xC04 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x185B8819195C1BDCDA5D PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH2 0x26A PUSH2 0xC24 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1B4 JUMPI PUSH2 0x97F PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x987 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0xA82 JUMPI JUMPDEST PUSH1 0x8 SLOAD DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0xA7D JUMPI POP TIMESTAMP JUMPDEST PUSH2 0x9A8 DUP4 PUSH1 0x7 SLOAD PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA67 JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH1 0x1 PUSH2 0xA0E SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0xB4C JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0xA51 JUMPI SWAP4 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x99C JUMP JUMPDEST PUSH2 0xA8A PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1B4 JUMPI PUSH2 0xAD6 PUSH1 0xA0 SWAP2 PUSH2 0xB4C JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP4 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xB84 JUMPI PUSH1 0x5 PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1B4 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x326 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA67 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x326 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x326 JUMPI JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 TIMESTAMP GT ISZERO PUSH2 0xC6F JUMPI PUSH2 0xC59 PUSH2 0xC62 SWAP2 PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0xC65 JUMPI POP PUSH2 0xC53 TIMESTAMP SWAP2 JUMPDEST PUSH1 0x3 SLOAD SWAP3 PUSH2 0xC04 JUMP JUMPDEST SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC53 SWAP1 SWAP2 PUSH2 0xC4A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC7F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC9E SWAP1 PUSH2 0xB4C JUMP JUMPDEST POP PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0xD50 JUMPI POP TIMESTAMP SWAP1 JUMPDEST PUSH1 0x2 DUP2 ADD SWAP2 DUP3 SLOAD DUP2 GT ISZERO PUSH2 0xD4B JUMPI PUSH1 0x4 DUP3 ADD SLOAD SWAP1 DUP2 ISZERO PUSH2 0xD44 JUMPI PUSH2 0xCFD PUSH2 0xCF4 PUSH2 0xCE9 PUSH2 0xCE1 PUSH1 0x3 SWAP5 DUP9 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST DUP5 SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST SWAP3 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x326 JUMPI PUSH2 0xD3D SWAP3 PUSH2 0x315 SWAP2 PUSH2 0xC75 JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 POP POP SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD67 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0xD73 PUSH1 0x1 SWAP3 PUSH2 0xC95 JUMP JUMPDEST ADD PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD8D JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0xE35 JUMPI PUSH2 0xDF7 JUMPI JUMPDEST POP PUSH2 0xDF2 SWAP1 PUSH1 0x2 SLOAD PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE2D JUMPI JUMPDEST DUP2 PUSH2 0xE10 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xBE2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1B4 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1B4 JUMPI SWAP1 POP PUSH2 0xDF2 PUSH2 0xDE5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xE82 SWAP2 PUSH2 0xE7D PUSH1 0x64 DUP4 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xE82 SWAP2 PUSH2 0xE7D PUSH1 0x84 DUP4 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0xF1A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xEF9 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xEF2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 OR SLOAD GT 0x27 DUP6 0xEA 0xE6 PUSH0 BLOCKHASH JUMPI PUSH16 0xB528DD16C33C2E6D79B1372D11A3C50F JUMPI BLOBHASH 0xBF JUMP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"466:9138:23:-:0;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;-1:-1:-1;;;;;466:9138:23;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;466:9138:23;;;;;;;;;;;;;;;;;2920:10;;1273:26:3;1269:95;;-1:-1:-1;466:9138:23;;2920:10;-1:-1:-1;;;;;;466:9138:23;;;;;;;;;;2920:10;;-1:-1:-1;;;;;466:9138:23;;3052:40:3;;-1:-1:-1;3052:40:3;466:9138:23;;;;;;;;;;;;2968:34;466:9138;;3012:32;466:9138;3054:30;466:9138;;;;;;;;1269:95:3;1322:31;;;-1:-1:-1;1322:31:3;-1:-1:-1;1322:31:3;466:9138:23;;-1:-1:-1;1322:31:3;466:9138:23;-1:-1:-1;466:9138:23;;;;;;-1:-1:-1;466:9138:23;;;;;-1:-1:-1;466:9138:23"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":3007,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool":{"entryPoint":2970,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":2985,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"checked_add_uint256":{"entryPoint":3029,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":3189,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":3089,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":3076,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":3042,"id":null,"parameterSlots":2,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":3784,"id":1859,"parameterSlots":2,"returnSlots":0},"fun_checkOwner":{"entryPoint":3449,"id":579,"parameterSlots":0,"returnSlots":0},"fun_erc20Transfer":{"entryPoint":3490,"id":8122,"parameterSlots":2,"returnSlots":0},"fun_massUpdatePools":{"entryPoint":3414,"id":7736,"parameterSlots":0,"returnSlots":0},"fun_safeTransfer":{"entryPoint":3649,"id":1537,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":3716,"id":1564,"parameterSlots":4,"returnSlots":0},"fun_totalPending":{"entryPoint":3108,"id":7711,"parameterSlots":0,"returnSlots":1},"fun_updatePool":{"entryPoint":3221,"id":7822,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_PoolInfo__dyn":{"entryPoint":2892,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c908163081e3eda14610b31575080630e15561a14610b135780631526fe2714610aad57806317caf6f114610a8f5780631eaaa0451461094e5780633f90916a14610933578063441a3e70146107e657806351eb05a6146107ca5780635312ea8e1461072c5780635c76ca2d1461070e578063630b5ba1146106f357806364482f7914610686578063715018a61461062d578063785e9e86146106045780638da5cb5b146105db5780638f10369a146105bd57806393f1a40b1461056c578063a238310614610524578063a85adeab14610506578063ca1d209d14610451578063e2bbb15814610353578063e4c75c27146101d7578063e6fd48bc146101b95763f2fde38b1461012757600080fd5b346101b45760203660031901126101b4576004356001600160a01b038116908190036101b457610155610d79565b801561019e57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b346101b45760003660031901126101b4576020600854604051908152f35b346101b45760403660031901126101b4576004356101f3610bbf565b6101fc82610b4c565b5091600052600660205260406000209060018060a01b0316600052602052604060002060038201549160048101549060028101548042118061034a575b610272575b602061026a8560016a0c097ce7bc90715b34b9f160241b6102608a8454610c11565b0491015490610c04565b604051908152f35b6102c09160016102ae6102a56102b794600998979854908142106000146103445742915b8082101561033c575090610c04565b60035490610c11565b91015490610c11565b60075490610c75565b916a0c097ce7bc90715b34b9f160241b8302928084046a0c097ce7bc90715b34b9f160241b1490151715610326576a0c097ce7bc90715b34b9f160241b61026061031b60209661031560019561026a98610c75565b90610bd5565b95505082935061023e565b634e487b7160e01b600052601160045260246000fd5b905090610c04565b81610296565b50821515610239565b346101b45761036136610ba9565b61036a82610b4c565b5082600052600660205260016a0c097ce7bc90715b34b9f160241b6103f2604080600020600090858060a01b033316825260205220936103a987610c95565b845480610424575b506103c886858060a01b0383541630903390610e84565b600481016103d7878254610bd5565b905560036103e6878754610bd5565b91828755015490610c11565b049101556040519081527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560203392a3005b6104458461043a61044b93600386015490610c11565b048688015490610c04565b33610da2565b876103b1565b346101b45760203660031901126101b4576004356009544210156104b6576001546104b1919061048f908290309033906001600160a01b0316610e84565b6104a661049e60035483610c75565b600954610bd5565b600955600454610bd5565b600455005b60405162461bcd60e51b815260206004820152602260248201527f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73604482015261195960f21b6064820152608490fd5b346101b45760003660031901126101b4576020600954604051908152f35b346101b45760403660031901126101b45761053d610bbf565b600435600052600660205260406000209060018060a01b03166000526020526020604060002054604051908152f35b346101b45760403660031901126101b457610585610bbf565b600435600052600660205260406000209060018060a01b03166000526020526040806000206001815491015482519182526020820152f35b346101b45760003660031901126101b4576020600354604051908152f35b346101b45760003660031901126101b4576000546040516001600160a01b039091168152602090f35b346101b45760003660031901126101b4576001546040516001600160a01b039091168152602090f35b346101b45760003660031901126101b457610646610d79565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101b45760603660031901126101b45760243560016106e16004356106aa610b9a565b6106b2610d79565b6106e6575b6106d9846106d4600754866106cb86610b4c565b50015490610c04565b610bd5565b600755610b4c565b500155005b6106ee610d56565b6106b7565b346101b45760003660031901126101b45761070c610d56565b005b346101b45760003660031901126101b4576020600254604051908152f35b346101b45760203660031901126101b4576000600160043561074d81610b4c565b50908084526006602052600460408086208690868060a01b03331682526020522092610785858060a01b038254168554903390610e41565b016107938154845490610c04565b905581546040519081527fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059560203392a38281550155005b346101b45760203660031901126101b45761070c600435610c95565b346101b4576107f436610ba9565b6107fd82610b4c565b5082600052600660205260408060002060009060018060a01b03331682526020522090828254106108db5760049161083485610c95565b6a0c097ce7bc90715b34b9f160241b6108848254928261085a6003870195865490610c11565b049361086f6104456001840196875490610c04565b61087a888354610c04565b8092555490610c11565b049055805461089f90849033906001600160a01b0316610e41565b016108ab828254610c04565b90556040519081527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56860203392a3005b60405162461bcd60e51b815260206004820152602a60248201527f77697468647261773a2063616e2774207769746864726177206d6f7265207468604482015269185b8819195c1bdcda5d60b21b6064820152608490fd5b346101b45760003660031901126101b457602061026a610c24565b346101b45760603660031901126101b4576004356024356001600160a01b038116908190036101b45761097f610b9a565b610987610d79565b610a82575b600854804211600014610a7d5750425b6109a883600754610bd5565b6007556040519160a0830183811067ffffffffffffffff821117610a675760405282526020820192835260408201908152606082016000815260808301916000835260055468010000000000000000811015610a6757806001610a0e9201600555610b4c565b959095610a5157935185546001600160a01b0319166001600160a01b03919091161785559251600185015591516002840155905160038301555160049190910155005b634e487b7160e01b600052600060045260246000fd5b634e487b7160e01b600052604160045260246000fd5b61099c565b610a8a610d56565b61098c565b346101b45760003660031901126101b4576020600754604051908152f35b346101b45760203660031901126101b4576004356005548110156101b457610ad660a091610b4c565b50600180831b0381541690600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b346101b45760003660031901126101b4576020600454604051908152f35b346101b45760003660031901126101b4576020906005548152f35b600554811015610b84576005600081815291027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00191565b634e487b7160e01b600052603260045260246000fd5b6044359081151582036101b457565b60409060031901126101b4576004359060243590565b602435906001600160a01b03821682036101b457565b9190820180921161032657565b90601f8019910116810190811067ffffffffffffffff821117610a6757604052565b9190820391821161032657565b8181029291811591840414171561032657565b60085480421115610c6f57610c59610c6291600954804210600014610c655750610c5342915b60035492610c04565b90610c11565b60025490610c04565b90565b610c539091610c4a565b50600090565b8115610c7f570490565b634e487b7160e01b600052601260045260246000fd5b610c9e90610b4c565b50600954804210600014610d50575042905b60028101918254811115610d4b576004820154908115610d4457610cfd610cf4610ce9610ce1600394885490610c04565b845490610c11565b600186015490610c11565b60075490610c04565b9201918254906a0c097ce7bc90715b34b9f160241b8102908082046a0c097ce7bc90715b34b9f160241b149015171561032657610d3d9261031591610c75565b9055429055565b9291505055565b505050565b90610cb0565b60055460005b818110610d67575050565b80610d73600192610c95565b01610d5c565b6000546001600160a01b03163303610d8d57565b63118cdaa760e01b6000523360045260246000fd5b60015460405163a9059cbb60e01b81526001600160a01b039283166004820152602481018490529160209183916044918391600091165af18015610e3557610df7575b50610df290600254610bd5565b600255565b6020813d602011610e2d575b81610e1060209383610be2565b810103126101b457519081151582036101b4579050610df2610de5565b3d9150610e03565b6040513d6000823e3d90fd5b60405163a9059cbb60e01b60208201526001600160a01b03929092166024830152604480830193909352918152610e8291610e7d606483610be2565b610ec8565b565b6040516323b872dd60e01b60208201526001600160a01b039283166024820152929091166044830152606480830193909352918152610e8291610e7d608483610be2565b906000602091828151910182855af115610e35576000513d610f1a57506001600160a01b0381163b155b610ef95750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415610ef256fea2646970667358221220e11754112785eae65f40576fb528dd16c33c2e6d79b1372d11a3c50f5749bf5664736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x81E3EDA EQ PUSH2 0xB31 JUMPI POP DUP1 PUSH4 0xE15561A EQ PUSH2 0xB13 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0xAAD JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0xA8F JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0x94E JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0x933 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x7E6 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x7CA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x72C JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0x70E JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x6F3 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x686 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x5BD JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x506 JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x1B9 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1B4 JUMPI PUSH2 0x155 PUSH2 0xD79 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1F3 PUSH2 0xBBF JUMP JUMPDEST PUSH2 0x1FC DUP3 PUSH2 0xB4C JUMP JUMPDEST POP SWAP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD DUP1 TIMESTAMP GT DUP1 PUSH2 0x34A JUMPI JUMPDEST PUSH2 0x272 JUMPI JUMPDEST PUSH1 0x20 PUSH2 0x26A DUP6 PUSH1 0x1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x260 DUP11 DUP5 SLOAD PUSH2 0xC11 JUMP JUMPDEST DIV SWAP2 ADD SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x2C0 SWAP2 PUSH1 0x1 PUSH2 0x2AE PUSH2 0x2A5 PUSH2 0x2B7 SWAP5 PUSH1 0x9 SWAP9 SWAP8 SWAP9 SLOAD SWAP1 DUP2 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0x344 JUMPI TIMESTAMP SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x33C JUMPI POP SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0xC75 JUMP JUMPDEST SWAP2 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP4 MUL SWAP3 DUP1 DUP5 DIV PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x326 JUMPI PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x260 PUSH2 0x31B PUSH1 0x20 SWAP7 PUSH2 0x315 PUSH1 0x1 SWAP6 PUSH2 0x26A SWAP9 PUSH2 0xC75 JUMP JUMPDEST SWAP1 PUSH2 0xBD5 JUMP JUMPDEST SWAP6 POP POP DUP3 SWAP4 POP PUSH2 0x23E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP SWAP1 PUSH2 0xC04 JUMP JUMPDEST DUP2 PUSH2 0x296 JUMP JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x239 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x361 CALLDATASIZE PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x36A DUP3 PUSH2 0xB4C JUMP JUMPDEST POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x3F2 PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 DUP6 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP4 PUSH2 0x3A9 DUP8 PUSH2 0xC95 JUMP JUMPDEST DUP5 SLOAD DUP1 PUSH2 0x424 JUMPI JUMPDEST POP PUSH2 0x3C8 DUP7 DUP6 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND ADDRESS SWAP1 CALLER SWAP1 PUSH2 0xE84 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH2 0x3D7 DUP8 DUP3 SLOAD PUSH2 0xBD5 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x3E6 DUP8 DUP8 SLOAD PUSH2 0xBD5 JUMP JUMPDEST SWAP2 DUP3 DUP8 SSTORE ADD SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST DIV SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH2 0x445 DUP5 PUSH2 0x43A PUSH2 0x44B SWAP4 PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST DIV DUP7 DUP9 ADD SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST CALLER PUSH2 0xDA2 JUMP JUMPDEST DUP8 PUSH2 0x3B1 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x4B6 JUMPI PUSH1 0x1 SLOAD PUSH2 0x4B1 SWAP2 SWAP1 PUSH2 0x48F SWAP1 DUP3 SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE84 JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x49E PUSH1 0x3 SLOAD DUP4 PUSH2 0xC75 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x4 SLOAD PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x4 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x53D PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x585 PUSH2 0xBBF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD SWAP2 ADD SLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x646 PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH2 0x6E1 PUSH1 0x4 CALLDATALOAD PUSH2 0x6AA PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x6B2 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x6E6 JUMPI JUMPDEST PUSH2 0x6D9 DUP5 PUSH2 0x6D4 PUSH1 0x7 SLOAD DUP7 PUSH2 0x6CB DUP7 PUSH2 0xB4C JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0xB4C JUMP JUMPDEST POP ADD SSTORE STOP JUMPDEST PUSH2 0x6EE PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x6B7 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x70C PUSH2 0xD56 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x4 CALLDATALOAD PUSH2 0x74D DUP2 PUSH2 0xB4C JUMP JUMPDEST POP SWAP1 DUP1 DUP5 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x4 PUSH1 0x40 DUP1 DUP7 KECCAK256 DUP7 SWAP1 DUP7 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP3 PUSH2 0x785 DUP6 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP6 SLOAD SWAP1 CALLER SWAP1 PUSH2 0xE41 JUMP JUMPDEST ADD PUSH2 0x793 DUP2 SLOAD DUP5 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST SWAP1 SSTORE DUP2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 PUSH1 0x20 CALLER SWAP3 LOG3 DUP3 DUP2 SSTORE ADD SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH2 0x70C PUSH1 0x4 CALLDATALOAD PUSH2 0xC95 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH2 0x7F4 CALLDATASIZE PUSH2 0xBA9 JUMP JUMPDEST PUSH2 0x7FD DUP3 PUSH2 0xB4C JUMP JUMPDEST POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP3 DUP3 SLOAD LT PUSH2 0x8DB JUMPI PUSH1 0x4 SWAP2 PUSH2 0x834 DUP6 PUSH2 0xC95 JUMP JUMPDEST PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x884 DUP3 SLOAD SWAP3 DUP3 PUSH2 0x85A PUSH1 0x3 DUP8 ADD SWAP6 DUP7 SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST DIV SWAP4 PUSH2 0x86F PUSH2 0x445 PUSH1 0x1 DUP5 ADD SWAP7 DUP8 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x87A DUP9 DUP4 SLOAD PUSH2 0xC04 JUMP JUMPDEST DUP1 SWAP3 SSTORE SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST DIV SWAP1 SSTORE DUP1 SLOAD PUSH2 0x89F SWAP1 DUP5 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE41 JUMP JUMPDEST ADD PUSH2 0x8AB DUP3 DUP3 SLOAD PUSH2 0xC04 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x185B8819195C1BDCDA5D PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH2 0x26A PUSH2 0xC24 JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x1B4 JUMPI PUSH2 0x97F PUSH2 0xB9A JUMP JUMPDEST PUSH2 0x987 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0xA82 JUMPI JUMPDEST PUSH1 0x8 SLOAD DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0xA7D JUMPI POP TIMESTAMP JUMPDEST PUSH2 0x9A8 DUP4 PUSH1 0x7 SLOAD PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA67 JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xA67 JUMPI DUP1 PUSH1 0x1 PUSH2 0xA0E SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0xB4C JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0xA51 JUMPI SWAP4 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x99C JUMP JUMPDEST PUSH2 0xA8A PUSH2 0xD56 JUMP JUMPDEST PUSH2 0x98C JUMP JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x1B4 JUMPI PUSH2 0xAD6 PUSH1 0xA0 SWAP2 PUSH2 0xB4C JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP4 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1B4 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xB84 JUMPI PUSH1 0x5 PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1B4 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x1B4 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1B4 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x326 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xA67 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x326 JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x326 JUMPI JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 TIMESTAMP GT ISZERO PUSH2 0xC6F JUMPI PUSH2 0xC59 PUSH2 0xC62 SWAP2 PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0xC65 JUMPI POP PUSH2 0xC53 TIMESTAMP SWAP2 JUMPDEST PUSH1 0x3 SLOAD SWAP3 PUSH2 0xC04 JUMP JUMPDEST SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xC53 SWAP1 SWAP2 PUSH2 0xC4A JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xC7F JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xC9E SWAP1 PUSH2 0xB4C JUMP JUMPDEST POP PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0xD50 JUMPI POP TIMESTAMP SWAP1 JUMPDEST PUSH1 0x2 DUP2 ADD SWAP2 DUP3 SLOAD DUP2 GT ISZERO PUSH2 0xD4B JUMPI PUSH1 0x4 DUP3 ADD SLOAD SWAP1 DUP2 ISZERO PUSH2 0xD44 JUMPI PUSH2 0xCFD PUSH2 0xCF4 PUSH2 0xCE9 PUSH2 0xCE1 PUSH1 0x3 SWAP5 DUP9 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST DUP5 SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SLOAD SWAP1 PUSH2 0xC11 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0xC04 JUMP JUMPDEST SWAP3 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x326 JUMPI PUSH2 0xD3D SWAP3 PUSH2 0x315 SWAP2 PUSH2 0xC75 JUMP JUMPDEST SWAP1 SSTORE TIMESTAMP SWAP1 SSTORE JUMP JUMPDEST SWAP3 SWAP2 POP POP SSTORE JUMP JUMPDEST POP POP POP JUMP JUMPDEST SWAP1 PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD67 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0xD73 PUSH1 0x1 SWAP3 PUSH2 0xC95 JUMP JUMPDEST ADD PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0xD8D JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 AND GAS CALL DUP1 ISZERO PUSH2 0xE35 JUMPI PUSH2 0xDF7 JUMPI JUMPDEST POP PUSH2 0xDF2 SWAP1 PUSH1 0x2 SLOAD PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xE2D JUMPI JUMPDEST DUP2 PUSH2 0xE10 PUSH1 0x20 SWAP4 DUP4 PUSH2 0xBE2 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1B4 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1B4 JUMPI SWAP1 POP PUSH2 0xDF2 PUSH2 0xDE5 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xE03 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xE82 SWAP2 PUSH2 0xE7D PUSH1 0x64 DUP4 PUSH2 0xBE2 JUMP JUMPDEST PUSH2 0xEC8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0xE82 SWAP2 PUSH2 0xE7D PUSH1 0x84 DUP4 PUSH2 0xBE2 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0xF1A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0xEF9 JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0xEF2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 OR SLOAD GT 0x27 DUP6 0xEA 0xE6 PUSH0 BLOCKHASH JUMPI PUSH16 0xB528DD16C33C2E6D79B1372D11A3C50F JUMPI BLOBHASH 0xBF JUMP PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"466:9138:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;-1:-1:-1;;;;;466:9138:23;;;;;;;;1500:62:3;;:::i;:::-;2627:22;;2623:91;;466:9138:23;;;-1:-1:-1;;;;;;466:9138:23;;;;;;-1:-1:-1;;;;;466:9138:23;;3052:40:3;;466:9138:23;3052:40:3;466:9138:23;2623:91:3;2672:31;;;466:9138:23;2672:31:3;466:9138:23;;;;;2672:31:3;466:9138:23;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;2465:29;466:9138;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;;;:::i;:::-;5053:14;;;:::i;:::-;466:9138;;;;5101:8;466:9138;;;;;5101:21;466:9138;;;;;;-1:-1:-1;466:9138:23;;;;-1:-1:-1;466:9138:23;5159:21;;;466:9138;5210:18;466:9138;5210:18;;466:9138;5261:24;;;;466:9138;5243:15;;:42;:59;;;466:9138;5239:541;;466:9138;;5796:49;466:9138;;-1:-1:-1;;;5796:28:23;466:9138;;;5796:28;:::i;:::-;466:9138;5830:15;;466:9138;5796:49;;:::i;:::-;466:9138;;;;;;5239:541;5633:59;466:9138;;5633:27;5565:32;5633:43;466:9138;5360:12;466:9138;;;;5342:63;5243:15;;5342:30;:63;:30;;;5243:15;5342:63;;5448:39;;;;;;:81;;5565:32;:::i;:::-;5159:21;466:9138;5633:27;;:::i;:::-;5661:15;;466:9138;5633:43;;:::i;:::-;5677:15;466:9138;5633:59;;:::i;:::-;466:9138;-1:-1:-1;;;466:9138:23;;;;;;-1:-1:-1;;;466:9138:23;;;;;;;-1:-1:-1;;;5796:28:23;5725:44;466:9138;5743:25;;466:9138;5743:25;5796:49;5743:25;;:::i;:::-;5725:44;;:::i;:::-;5239:541;;;;;;;;466:9138;;;;;;;;;;;;5448:81;;;;5565:32;:::i;5342:63::-;;;;5243:59;5289:13;;;;5243:59;;466:9138;;;;;;;:::i;:::-;7456:14;;;:::i;:::-;466:9138;;;;7504:8;466:9138;;7941:15;-1:-1:-1;;;7959:33:23;466:9138;;;;-1:-1:-1;466:9138:23;;;;;;7519:10;466:9138;;;;;;7552:4;;;;:::i;:::-;466:9138;;7572:15;7568:178;;466:9138;;7822:7;466:9138;;;;;;;;;7815:4;7519:10;;7822:7;;:::i;:::-;466:9138;7861:18;;:26;466:9138;;;7861:26;:::i;:::-;466:9138;;7971:21;7912:19;466:9138;;;7912:19;:::i;:::-;466:9138;;;;7971:21;466:9138;7959:33;;:::i;:::-;466:9138;7941:15;;466:9138;;;;;;8012:34;466:9138;7519:10;8012:34;;466:9138;7568:178;7627:54;7639:21;7627:33;7721:13;7639:21;;;;466:9138;7627:33;;:::i;:::-;466:9138;7666:15;;;466:9138;7627:54;;:::i;:::-;7519:10;7721:13;:::i;:::-;7568:178;;;466:9138;;;;;;-1:-1:-1;;466:9138:23;;;;;;3341:12;466:9138;3323:15;:30;466:9138;;;;;3543:20;;466:9138;3461:7;;466:9138;;3454:4;;3433:10;;-1:-1:-1;;;;;466:9138:23;3461:7;:::i;:::-;3479:39;3495:23;3503:15;466:9138;3495:23;;:::i;:::-;3341:12;466:9138;3479:39;:::i;:::-;3341:12;466:9138;;;3543:20;:::i;:::-;466:9138;;;;;;-1:-1:-1;;;466:9138:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;466:9138:23;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;2528:27;466:9138;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;:::i;:::-;;;;;4824:8;466:9138;;;;;4824:21;466:9138;;;;;;-1:-1:-1;466:9138:23;;;;;-1:-1:-1;466:9138:23;;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;:::i;:::-;;;;;2307:64;466:9138;;;;;2307:64;466:9138;;;;;;-1:-1:-1;466:9138:23;;;;;-1:-1:-1;466:9138:23;;;;2307:64;;466:9138;;;;;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;2043:30;466:9138;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;;;-1:-1:-1;;;;;466:9138:23;;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;;;-1:-1:-1;;;;;466:9138:23;;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;1500:62:3;;:::i;:::-;466:9138:23;;;-1:-1:-1;;;;;;466:9138:23;;;;-1:-1:-1;;;;;466:9138:23;3052:40:3;466:9138:23;;3052:40:3;466:9138:23;;;;;;;-1:-1:-1;;466:9138:23;;;;;;;4605:14;466:9138;;;;:::i;:::-;1500:62:3;;:::i;:::-;4456:59:23;;466:9138;4542:53;466:9138;4542:41;:15;466:9138;4558:14;;;;:::i;:::-;:25;;466:9138;4542:41;;:::i;:::-;:53;:::i;:::-;:15;466:9138;4605:14;:::i;:::-;-1:-1:-1;4605:25:23;466:9138;;4456:59;;;:::i;:::-;;;466:9138;;;;;;-1:-1:-1;;466:9138:23;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;466:9138:23;;;;;1980:22;466:9138;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;;;9059:14;;;:::i;:::-;466:9138;;;;;9107:8;466:9138;;;;;;;9107:26;466:9138;;;;;;9122:10;466:9138;;;;;;;9190:11;466:9138;;;;;;;;;;9122:10;;9190:11;;:::i;:::-;9233:18;:30;466:9138;;;;9233:30;;:::i;:::-;466:9138;;;;;;;;;9278:48;466:9138;9122:10;9278:48;;466:9138;;;9361:15;466:9138;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;8242:14;;;:::i;:::-;466:9138;;;;8290:8;466:9138;;;;;;-1:-1:-1;466:9138:23;;;;;;8305:10;466:9138;;;;;;;;;;8334:22;466:9138;;;8424:4;;;;:::i;:::-;-1:-1:-1;;;8664:33:23;466:9138;;8500:21;;8488:33;8500:21;;;466:9138;;;8488:33;;:::i;:::-;466:9138;8527:15;8579:13;8488:54;8527:15;;;466:9138;;;8488:54;;:::i;8579:13::-;8617:19;466:9138;;;8617:19;:::i;:::-;466:9138;;;;8664:33;;:::i;:::-;466:9138;;;;;8786:7;;8305:10;;;;-1:-1:-1;;;;;466:9138:23;8786:7;:::i;:::-;8825:18;:26;466:9138;;;8825:26;:::i;:::-;466:9138;;;;;;;8867:35;466:9138;8305:10;8867:35;;466:9138;;;;-1:-1:-1;;;466:9138:23;;;;;;;;;;;;;;;;;-1:-1:-1;;;466:9138:23;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;466:9138:23;;;;;;;;-1:-1:-1;;;;;466:9138:23;;;;;;;;;;:::i;:::-;1500:62:3;;:::i;:::-;3827:59:23;;466:9138;3943:14;466:9138;3925:15;;:32;:67;:32;;;:15;;:67;4020:27;466:9138;4020:15;466:9138;4020:27;:::i;:::-;:15;466:9138;;;;;;;;;;;;;;;;;;;;;4071:190;;466:9138;;;;4071:190;;466:9138;;;;4071:190;;466:9138;;;4071:190;;;466:9138;;;;4057:8;466:9138;;;;;;;;;;;;4057:8;466:9138;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;466:9138:23;-1:-1:-1;;;;;466:9138:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3925:67;;;3827:59;;;:::i;:::-;;;466:9138;;;;;;-1:-1:-1;;466:9138:23;;;;;2400:30;466:9138;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;2184:26;466:9138;2184:26;;;;;;466:9138;2184:26;;:::i;:::-;466:9138;;;;;;;;;2184:26;466:9138;2184:26;;466:9138;2184:26;;;;466:9138;;2184:26;;;466:9138;2184:26;;466:9138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;;;;;;;;;;;;;;-1:-1:-1;;466:9138:23;;;;;;3194:8;466:9138;;;;;2184:26;466:9138;;;;;;2184:26;-1:-1:-1;466:9138:23;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;466:9138:23;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;5925:315::-;6014:14;466:9138;5995:15;;:33;;5991:72;;6177:48;:56;466:9138;6115:12;466:9138;5995:15;;6097:30;:63;:30;;;5995:15;6194:30;5995:15;6097:63;;6177:15;466:9138;6194:30;;:::i;:::-;6177:48;;:::i;:::-;6226:7;466:9138;6177:56;;:::i;:::-;5925:315;:::o;6097:63::-;6194:30;6097:63;;;;5991:72;6044:8;466:9138;6044:8;:::o;466:9138::-;;;;;;;:::o;:::-;;;;;;;;;;;;6568:738;6643:14;6568:738;6643:14;:::i;:::-;466:9138;6709:12;466:9138;6691:15;;:30;:63;:30;;;:15;;:63;;6786:24;;;466:9138;;;6769:41;;;6765:78;;6871:18;;;466:9138;6904:13;;;6900:104;;7106:59;:43;:27;7036:38;7118:15;466:9138;;;7036:38;;:::i;:::-;466:9138;;7106:27;;:::i;:::-;7134:15;;;466:9138;7106:43;;:::i;:::-;7150:15;466:9138;7106:59;;:::i;:::-;7200:21;;466:9138;;;;-1:-1:-1;;;466:9138:23;;;;;;-1:-1:-1;;;466:9138:23;;;;;;;7200:47;7222:25;;;;:::i;7200:47::-;466:9138;;6691:15;466:9138;;6568:738::o;6900:104::-;466:9138;;;;;6987:7::o;6765:78::-;6826:7;;;:::o;6691:63::-;;;;6320:175;6381:8;466:9138;6425:1;6428:12;;;;;;6320:175;;:::o;6442:5::-;6474:3;;466:9138;6474:3;;:::i;:::-;466:9138;6411:15;;1796:162:3;1710:6;466:9138:23;-1:-1:-1;;;;;466:9138:23;735:10:13;1855:23:3;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:13;1901:40:3;466:9138:23;;1710:6:3;1901:40;9467:135:23;466:9138;;;;-1:-1:-1;;;9539:28:23;;-1:-1:-1;;;;;466:9138:23;;;9539:28;;;466:9138;;;;;;;;9539:28;;466:9138;;;;;;-1:-1:-1;;466:9138:23;9539:28;;;;;;;;9467:135;466:9138;9577:18;466:9138;9577:18;466:9138;9577:18;:::i;:::-;;466:9138;9467:135::o;9539:28::-;;;;;;;;;;;;;;;:::i;:::-;;;466:9138;;;;;;;;;;;;;9539:28;-1:-1:-1;9577:18:23;9539:28;;;;;-1:-1:-1;9539:28:23;;;466:9138;;;-1:-1:-1;466:9138:23;;;;;1219:160:12;466:9138:23;;-1:-1:-1;;;1328:43:12;;;;-1:-1:-1;;;;;466:9138:23;;;;1328:43:12;;;466:9138:23;;;;;;;;;1328:43:12;;;;;;466:9138:23;;1328:43:12;:::i;:::-;;:::i;:::-;1219:160::o;1618:188::-;466:9138:23;;-1:-1:-1;;;1745:53:12;;;;-1:-1:-1;;;;;466:9138:23;;;1745:53:12;;;466:9138:23;;;;;;;;;;;;;;;;;1745:53:12;;;;;;;466:9138:23;1745:53:12;:::i;7686:720::-;;-1:-1:-1;7823:421:12;7686:720;7823:421;;;;;;;;;;;;-1:-1:-1;7823:421:12;;8258:15;;-1:-1:-1;;;;;;466:9138:23;;8276:26:12;:31;8258:68;8254:146;;7686:720;:::o;8254:146::-;-1:-1:-1;;;;8349:40:12;;;-1:-1:-1;;;;;466:9138:23;;;;8349:40:12;466:9138:23;;;8349:40:12;8258:68;8325:1;8310:16;;8258:68;"},"methodIdentifiers":{"add(uint256,address,bool)":"1eaaa045","deposit(uint256,uint256)":"e2bbb158","deposited(uint256,address)":"a2383106","emergencyWithdraw(uint256)":"5312ea8e","endTimestamp()":"a85adeab","erc20()":"785e9e86","fund(uint256)":"ca1d209d","massUpdatePools()":"630b5ba1","owner()":"8da5cb5b","paidOut()":"5c76ca2d","pending(uint256,address)":"e4c75c27","poolInfo(uint256)":"1526fe27","poolLength()":"081e3eda","renounceOwnership()":"715018a6","rewardPerSecond()":"8f10369a","set(uint256,uint256,bool)":"64482f79","startTimestamp()":"e6fd48bc","totalAllocPoint()":"17caf6f1","totalPending()":"3f90916a","totalRewards()":"0e15561a","transferOwnership(address)":"f2fde38b","updatePool(uint256)":"51eb05a6","userInfo(uint256,address)":"93f1a40b","withdraw(uint256,uint256)":"441a3e70"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paidOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accERC20PerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposits\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/farming/FarmingC2N.sol\":\"FarmingC2N\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/farming/FarmingC2N.sol\":{\"keccak256\":\"0xd81b550e552ab6a55627a439979ce932a33395fd4f7b91e19bd984b2e0a9bbe6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecf17b6505bb6bed56fe9338c68b855e67e8e1e1e14564083cca678c2bb9a4fe\",\"dweb:/ipfs/QmTG1YybptMXs37vYFbqoAHAGzXNUEYkeN4jXg88wSDEqQ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":503,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":7336,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"erc20","offset":0,"slot":"1","type":"t_contract(IERC20)1466"},{"astId":7338,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"paidOut","offset":0,"slot":"2","type":"t_uint256"},{"astId":7340,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"rewardPerSecond","offset":0,"slot":"3","type":"t_uint256"},{"astId":7342,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"totalRewards","offset":0,"slot":"4","type":"t_uint256"},{"astId":7346,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"poolInfo","offset":0,"slot":"5","type":"t_array(t_struct(PoolInfo)7333_storage)dyn_storage"},{"astId":7353,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"userInfo","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7321_storage))"},{"astId":7355,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"totalAllocPoint","offset":0,"slot":"7","type":"t_uint256"},{"astId":7357,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"startTimestamp","offset":0,"slot":"8","type":"t_uint256"},{"astId":7359,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"endTimestamp","offset":0,"slot":"9","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_struct(PoolInfo)7333_storage)dyn_storage":{"base":"t_struct(PoolInfo)7333_storage","encoding":"dynamic_array","label":"struct FarmingC2N.PoolInfo[]","numberOfBytes":"32"},"t_contract(IERC20)1466":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_struct(UserInfo)7321_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct FarmingC2N.UserInfo)","numberOfBytes":"32","value":"t_struct(UserInfo)7321_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7321_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct FarmingC2N.UserInfo))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(UserInfo)7321_storage)"},"t_struct(PoolInfo)7333_storage":{"encoding":"inplace","label":"struct FarmingC2N.PoolInfo","members":[{"astId":7324,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"lpToken","offset":0,"slot":"0","type":"t_contract(IERC20)1466"},{"astId":7326,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"allocPoint","offset":0,"slot":"1","type":"t_uint256"},{"astId":7328,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"lastRewardTimestamp","offset":0,"slot":"2","type":"t_uint256"},{"astId":7330,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"accERC20PerShare","offset":0,"slot":"3","type":"t_uint256"},{"astId":7332,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"totalDeposits","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_struct(UserInfo)7321_storage":{"encoding":"inplace","label":"struct FarmingC2N.UserInfo","members":[{"astId":7318,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"amount","offset":0,"slot":"0","type":"t_uint256"},{"astId":7320,"contract":"contracts/farming/FarmingC2N.sol:FarmingC2N","label":"rewardDebt","offset":0,"slot":"1","type":"t_uint256"}],"numberOfBytes":"64"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/interfaces/IAdmin.sol":{"IAdmin":{"abi":[{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isAdmin","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isAdmin(address)":"24d7806c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAdmin.sol\":\"IAdmin\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAdmin.sol\":{\"keccak256\":\"0x2d2739983345ed7a53de2c007704877d198de574c0b405e2dc93518189c42cbc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccee90c17b4de2e7aa7d041302c03a1f0761cd431b4c1d13efdc7b9aabf48c7b\",\"dweb:/ipfs/QmNksD3G6SxU9qDP3oFBP5iQYAGk3YAppJQK8gPsJXGcvN\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/IAllocationStaking.sol":{"IAllocationStaking":{"abi":[{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"deposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_tokensUnlockTime","type":"uint256"}],"name":"setTokensUnlockTime","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"deposited(uint256,address)":"a2383106","setTokensUnlockTime(uint256,address,uint256)":"e6f04acc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensUnlockTime\",\"type\":\"uint256\"}],\"name\":\"setTokensUnlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAllocationStaking.sol\":\"IAllocationStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IAllocationStaking.sol\":{\"keccak256\":\"0xfc71214fdf8b8f9e02eadeecabaf2ff7b87d06b3b31525d4aa83cd65c1f5bed8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9d46e23c611c581fee00fe8921376998a0736804d4210f9eec8767d18560144a\",\"dweb:/ipfs/QmcsTt1RpoE68LzqQhYLRn73SoRM1v1pEBgFdiioujM4qh\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/interfaces/ISalesFactory.sol":{"ISalesFactory":{"abi":[{"inputs":[{"internalType":"address","name":"sale","type":"address"}],"name":"isSaleCreatedThroughFactory","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"saleOwner","type":"address"},{"internalType":"address","name":"saleToken","type":"address"}],"name":"setSaleOwnerAndToken","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isSaleCreatedThroughFactory(address)":"a00249e8","setSaleOwnerAndToken(address,address)":"4c0ec736"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sale\",\"type\":\"address\"}],\"name\":\"isSaleCreatedThroughFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"saleOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"saleToken\",\"type\":\"address\"}],\"name\":\"setSaleOwnerAndToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISalesFactory.sol\":\"ISalesFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ISalesFactory.sol\":{\"keccak256\":\"0x3edbcf61a2b14b34b0135456b1bf1a7d4d4ca9a16964eaf7b7f94b30fa55edb7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://263ef46c15246701be0c6bdc278c6d7aa5e11d45ec9e72be98704ba73c520fbd\",\"dweb:/ipfs/QmQp5t5m4ZQPz4v4QYDAt5vDxB5z1jsyCdMopupmsiFRTc\"]}},\"version\":1}","storageLayout":{"storage":[],"types":null}}},"contracts/sales/AllocationStaking.sol":{"AllocationStaking":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountAdded","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalDeposited","type":"uint256"}],"name":"CompoundedEarnings","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"contract IERC20","name":"_lpToken","type":"address"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"add","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"compound","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"deposited","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"endTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"erc20","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"fund","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"uint256","name":"pid","type":"uint256"}],"name":"getPendingAndDepositedForUsers","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IERC20","name":"_erc20","type":"address"},{"internalType":"uint256","name":"_rewardPerSecond","type":"uint256"},{"internalType":"uint256","name":"_startTimestamp","type":"uint256"},{"internalType":"address","name":"_salesFactory","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"paidOut","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pending","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"contract IERC20","name":"lpToken","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardTimestamp","type":"uint256"},{"internalType":"uint256","name":"accERC20PerShare","type":"uint256"},{"internalType":"uint256","name":"totalDeposits","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"rewardPerSecond","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"salesFactory","outputs":[{"internalType":"contract ISalesFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"set","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_salesFactory","type":"address"}],"name":"setSalesFactory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"},{"internalType":"uint256","name":"_tokensUnlockTime","type":"uint256"}],"name":"setTokensUnlockTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startTimestamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalPending","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"},{"internalType":"uint256","name":"tokensUnlockTime","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460155761173d908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908163081e3eda1461107c575080630e15561a1461105e5780631526fe2714610ff857806317caf6f114610fda5780631eaaa04514610eb95780633dfcb86114610e715780633f90916a14610e56578063441a3e7014610c9357806351eb05a614610c775780635312ea8e14610b5a5780635c76ca2d14610b3c578063630b5ba114610b2357806364482f7914610ab6578063715018a614610a4c578063785e9e8614610a235780638da5cb5b146109ed5780638f10369a146109cf57806393f1a40b146109725780639e3d87cd146107c9578063a238310614610781578063a85adeab14610763578063aa5f7e2614610690578063ca1d209d146105db578063e2bbb158146104dd578063e4c75c27146104af578063e6f04acc14610330578063e6fd48bc14610312578063ed95f07f146102e9578063f2fde38b146102be5763fcfc1b141461016957600080fd5b346102b95760403660031901126102b95760043567ffffffffffffffff81116102b957366023820112156102b95780600401356101a581611142565b916101b36040519384611120565b8183526024602084019260051b820101903682116102b957602401915b81831061029957836024356101e582516114c8565b906101f083516114c8565b9260005b815181101561026b5760019060406001600160a01b0361021483866114fa565b511685600052600660205281600020600091858060a01b03168252602052205461023e82876114fa565b5261025a828060a01b0361025283866114fa565b51168561132d565b61026482886114fa565b52016101f4565b610287846102958760405193849360408552604085019061115a565b90838203602085015261115a565b0390f35b82356001600160a01b03811681036102b9578152602092830192016101d0565b600080fd5b346102b95760203660031901126102b9576102e76102da6110e5565b6102e261150e565b611452565b005b346102b95760003660031901126102b9576004546040516001600160a01b039091168152602090f35b346102b95760003660031901126102b9576020600854604051908152f35b346102b95760603660031901126102b9576103496110cf565b6024602060018060a01b036004541660405192838092631400493d60e31b82523360048301525afa9081156104a357600091610474575b501561042557600435600052600660205260406000209060018060a01b031660005260205260406000206002810190815442106102b957600391604435905501805490600160401b82101561040f57600182018082558210156103f9576000908152602090200180546001600160a01b03191633179055005b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602160248201527f53616c65206e6f742063726561746564207468726f75676820666163746f72796044820152601760f91b6064820152608490fd5b610496915060203d60201161049c575b61048e8183611120565b81019061143a565b82610380565b503d610484565b6040513d6000823e3d90fd5b346102b95760403660031901126102b95760206104d56104cd6110cf565b60043561132d565b604051908152f35b346102b9576104eb3661110a565b6104f482611097565b5082600052600660205260016a0c097ce7bc90715b34b9f160241b61057c604080600020600090858060a01b0333168252602052209361053387611242565b8454806105ae575b5061055286858060a01b03835416309033906115fa565b6004810161056187825461118e565b9055600361057087875461118e565b918287550154906111be565b049101556040519081527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560203392a3005b6105cf846105c46105d5936003860154906111be565b0486880154906111b1565b33611544565b8761053b565b346102b95760203660031901126102b9576004356009544210156106405760005461063b9190610619908290309033906001600160a01b03166115fa565b61063061062860025483611222565b60095461118e565b60095560035461118e565b600355005b60405162461bcd60e51b815260206004820152602260248201527f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73604482015261195960f21b6064820152608490fd5b346102b95760203660031901126102b9576004356106ad81611097565b50600082815260066020908152604080832033845290915290206106d083611242565b6004815492600381016a0c097ce7bc90715b34b9f160241b61071e816106f78454896111be565b049261071361070c60018901958654906111b1565b809961118e565b9081885554906111be565b0490550161072d83825461118e565b90555460405191825260208201527f92f0bdf80f3916a4279540865e94ef327cf48639092106cca4bddc9bb1de4a8660403392a3005b346102b95760003660031901126102b9576020600954604051908152f35b346102b95760403660031901126102b95761079a6110cf565b600435600052600660205260406000209060018060a01b03166000526020526020604060002054604051908152f35b346102b95760803660031901126102b9576107e26110e5565b6064356001600160a01b03811690604435908290036102b9576000805160206116e8833981519152549260ff8460401c16159367ffffffffffffffff81168015908161096a575b6001149081610960575b159081610957575b506109465767ffffffffffffffff1981166001176000805160206116e88339815191525584610919575b5061086e611699565b610876611699565b61087f33611452565b60018060a01b03166001600160601b0360a01b6000541617600055602435600255806008556009556001600160601b0360a01b60045416176004556108c057005b68ff0000000000000000196000805160206116e883398151915254166000805160206116e8833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff191668010000000000000001176000805160206116e88339815191525584610865565b63f92ee8a960e01b60005260046000fd5b9050158661083b565b303b159150610833565b869150610829565b346102b95760403660031901126102b9576060604061098f6110cf565b60043560005260066020528160002060009160018060a01b0316825260205220805490600260018201549101549060405192835260208301526040820152f35b346102b95760003660031901126102b9576020600254604051908152f35b346102b95760003660031901126102b9576000805160206116c8833981519152546040516001600160a01b039091168152602090f35b346102b95760003660031901126102b9576000546040516001600160a01b039091168152602090f35b346102b95760003660031901126102b957610a6561150e565b6000805160206116c883398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102b95760603660031901126102b9576024356001610b11600435610ada6110fb565b610ae261150e565b610b16575b610b0984610b0460075486610afb86611097565b500154906111b1565b61118e565b600755611097565b500155005b610b1e61130a565b610ae7565b346102b95760003660031901126102b9576102e761130a565b346102b95760003660031901126102b9576020600154604051908152f35b346102b95760203660031901126102b957600435610b7781611097565b5081600052600660205260408060002060009060018060a01b03331682526020522091600283019182544210610c0c576000938492610c026004600194610bca868060a01b0382541686549033906115b7565b8454936040518581527fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059560203392a3019182546111b1565b9055828155015555005b60405162461bcd60e51b815260206004820152603b60248201527f456d657267656e637920776974686472617720626c6f636b656420647572696e60448201527f672073616c6520616e6420636f6f6c646f776e20706572696f642e00000000006064820152608490fd5b346102b95760203660031901126102b9576102e7600435611242565b346102b957610ca13661110a565b610caa82611097565b50600083815260066020908152604080832033845290915290206002810180549092904210610df75783825410610d9f57600491610ce786611242565b6a0c097ce7bc90715b34b9f160241b610d3782549282610d0d60038701958654906111be565b0493610d226105cf60018401968754906111b1565b610d2d8983546111b1565b80925554906111be565b0490558054610d5290859033906001600160a01b03166115b7565b01610d5e8382546111b1565b905581610d95575b506040519081527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56860203392a3005b6000905582610d66565b60405162461bcd60e51b815260206004820152602a60248201527f77697468647261773a2063616e2774207769746864726177206d6f7265207468604482015269185b8819195c1bdcda5d60b21b6064820152608490fd5b60405162461bcd60e51b815260206004820152603160248201527f4c6173742073616c6520796f75207265676973746572656420666f72206973206044820152703737ba103334b734b9b432b2103cb2ba1760791b6064820152608490fd5b346102b95760003660031901126102b95760206104d56111d1565b346102b95760203660031901126102b957610e8a6110e5565b610e9261150e565b6001600160a01b031680156102b9576001600160601b0360a01b6004541617600455600080f35b346102b95760603660031901126102b957600435610ed56110cf565b610edd6110fb565b610ee561150e565b610fcd575b600854804211600014610fc85750425b610f068360075461118e565b6007556040519160a0830183811067ffffffffffffffff82111761040f5760405260018060a01b0316825260208201928352604082019081526060820160008152608083019160008352600554600160401b81101561040f57806001610f6f9201600555611097565b959095610fb257935185546001600160a01b0319166001600160a01b03919091161785559251600185015591516002840155905160038301555160049190910155005b634e487b7160e01b600052600060045260246000fd5b610efa565b610fd561130a565b610eea565b346102b95760003660031901126102b9576020600754604051908152f35b346102b95760203660031901126102b9576004356005548110156102b95761102160a091611097565b50600180831b0381541690600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b346102b95760003660031901126102b9576020600354604051908152f35b346102b95760003660031901126102b9576020906005548152f35b6005548110156103f9576005600081815291027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00191565b602435906001600160a01b03821682036102b957565b600435906001600160a01b03821682036102b957565b6044359081151582036102b957565b60409060031901126102b9576004359060243590565b90601f8019910116810190811067ffffffffffffffff82111761040f57604052565b67ffffffffffffffff811161040f5760051b60200190565b906020808351928381520192019060005b8181106111785750505090565b825184526020938401939092019160010161116b565b9190820180921161119b57565b634e487b7160e01b600052601160045260246000fd5b9190820391821161119b57565b8181029291811591840414171561119b57565b6008548042111561121c5761120661120f91600954804210600014611212575061120042915b600254926111b1565b906111be565b600154906111b1565b90565b61120090916111f7565b50600090565b811561122c570490565b634e487b7160e01b600052601260045260246000fd5b61124b90611097565b506009548042106000146113055750425b809160028101918254809111156112fd575b50600481015480156112f85760036112ad6112a46112996112908754896111b1565b600254906111be565b6001860154906111be565b60075490611222565b9201918254906a0c097ce7bc90715b34b9f160241b8102908082046a0c097ce7bc90715b34b9f160241b149015171561119b576112f3926112ed91611222565b9061118e565b905555565b505055565b92503861126e565b61125c565b60055460005b81811061131b575050565b80611327600192611242565b01611310565b9061133782611097565b5091600052600660205260406000209060018060a01b03166000526020526040600020600382015491600481015490600281015480421180611431575b6113a5575b50505060016a0c097ce7bc90715b34b9f160241b61139b61120f9484546111be565b04910154906111b1565b6113d29160016113c96112906112a49460095480421060001461142c5750426111b1565b910154906111be565b926a0c097ce7bc90715b34b9f160241b8402938085046a0c097ce7bc90715b34b9f160241b149015171561119b5761139b6114256a0c097ce7bc90715b34b9f160241b926112ed60019561120f98611222565b9450611379565b6111b1565b50821515611374565b908160209103126102b9575180151581036102b95790565b6001600160a01b031680156114b2576000805160206116c883398151915280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b631e4fbdf760e01b600052600060045260246000fd5b906114d282611142565b6114df6040519182611120565b82815280926114f0601f1991611142565b0190602036910137565b80518210156103f95760209160051b010190565b6000805160206116c8833981519152546001600160a01b0316330361152f57565b63118cdaa760e01b6000523360045260246000fd5b6000805460405163a9059cbb60e01b81526001600160a01b0393841660048201526024810185905293926020928592604492849291165af19182156104a3576115959261159a575b5060015461118e565b600155565b6115b29060203d60201161049c5761048e8183611120565b61158c565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526115f8916115f3606483611120565b61163e565b565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526115f8916115f3608483611120565b906000602091828151910182855af1156104a3576000513d61169057506001600160a01b0381163b155b61166f5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415611668565b60ff6000805160206116e88339815191525460401c16156116b657565b631afcd79f60e31b60005260046000fdfe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212205a7f775c9da29a434ea8ab6891703c6c45457556b90e6466569d14c860e7cbf364736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x173D SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x81E3EDA EQ PUSH2 0x107C JUMPI POP DUP1 PUSH4 0xE15561A EQ PUSH2 0x105E JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0xFF8 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0xFDA JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0xEB9 JUMPI DUP1 PUSH4 0x3DFCB861 EQ PUSH2 0xE71 JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0xE56 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0xC93 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0xC77 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0xB23 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA4C JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0xA23 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9ED JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x9CF JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x972 JUMPI DUP1 PUSH4 0x9E3D87CD EQ PUSH2 0x7C9 JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x781 JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xE6F04ACC EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xED95F07F EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BE JUMPI PUSH4 0xFCFC1B14 EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2B9 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2B9 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1A5 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP2 PUSH2 0x1B3 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1120 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x2B9 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x299 JUMPI DUP4 PUSH1 0x24 CALLDATALOAD PUSH2 0x1E5 DUP3 MLOAD PUSH2 0x14C8 JUMP JUMPDEST SWAP1 PUSH2 0x1F0 DUP4 MLOAD PUSH2 0x14C8 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x214 DUP4 DUP7 PUSH2 0x14FA JUMP JUMPDEST MLOAD AND DUP6 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 DUP6 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD PUSH2 0x23E DUP3 DUP8 PUSH2 0x14FA JUMP JUMPDEST MSTORE PUSH2 0x25A DUP3 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x252 DUP4 DUP7 PUSH2 0x14FA JUMP JUMPDEST MLOAD AND DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x264 DUP3 DUP9 PUSH2 0x14FA JUMP JUMPDEST MSTORE ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x287 DUP5 PUSH2 0x295 DUP8 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x115A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x115A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x2B9 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x2E7 PUSH2 0x2DA PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x150E JUMP JUMPDEST PUSH2 0x1452 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x349 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1400493D PUSH1 0xE3 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x474 JUMPI JUMPDEST POP ISZERO PUSH2 0x425 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD TIMESTAMP LT PUSH2 0x2B9 JUMPI PUSH1 0x3 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE ADD DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x40F JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616C65206E6F742063726561746564207468726F75676820666163746F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x496 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x49C JUMPI JUMPDEST PUSH2 0x48E DUP2 DUP4 PUSH2 0x1120 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP3 PUSH2 0x380 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH2 0x4D5 PUSH2 0x4CD PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH2 0x4EB CALLDATASIZE PUSH2 0x110A JUMP JUMPDEST PUSH2 0x4F4 DUP3 PUSH2 0x1097 JUMP JUMPDEST POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x57C PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 DUP6 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP4 PUSH2 0x533 DUP8 PUSH2 0x1242 JUMP JUMPDEST DUP5 SLOAD DUP1 PUSH2 0x5AE JUMPI JUMPDEST POP PUSH2 0x552 DUP7 DUP6 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH2 0x561 DUP8 DUP3 SLOAD PUSH2 0x118E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x570 DUP8 DUP8 SLOAD PUSH2 0x118E JUMP JUMPDEST SWAP2 DUP3 DUP8 SSTORE ADD SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH2 0x5CF DUP5 PUSH2 0x5C4 PUSH2 0x5D5 SWAP4 PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV DUP7 DUP9 ADD SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST CALLER PUSH2 0x1544 JUMP JUMPDEST DUP8 PUSH2 0x53B JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 SLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x619 SWAP1 DUP3 SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x630 PUSH2 0x628 PUSH1 0x2 SLOAD DUP4 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x118E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x3 SLOAD PUSH2 0x118E JUMP JUMPDEST PUSH1 0x3 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6AD DUP2 PUSH2 0x1097 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x6D0 DUP4 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x4 DUP2 SLOAD SWAP3 PUSH1 0x3 DUP2 ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x71E DUP2 PUSH2 0x6F7 DUP5 SLOAD DUP10 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP3 PUSH2 0x713 PUSH2 0x70C PUSH1 0x1 DUP10 ADD SWAP6 DUP7 SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST DUP1 SWAP10 PUSH2 0x118E JUMP JUMPDEST SWAP1 DUP2 DUP9 SSTORE SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP1 SSTORE ADD PUSH2 0x72D DUP4 DUP3 SLOAD PUSH2 0x118E JUMP JUMPDEST SWAP1 SSTORE SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x92F0BDF80F3916A4279540865E94EF327CF48639092106CCA4BDDC9BB1DE4A86 PUSH1 0x40 CALLER SWAP3 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x79A PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x7E2 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x40 SHR AND ISZERO SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x96A JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x960 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x957 JUMPI JUMPDEST POP PUSH2 0x946 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP5 PUSH2 0x919 JUMPI JUMPDEST POP PUSH2 0x86E PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x876 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x87F CALLER PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x2 SSTORE DUP1 PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH2 0x8C0 JUMPI STOP JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP5 PUSH2 0x865 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO DUP7 PUSH2 0x83B JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x833 JUMP JUMPDEST DUP7 SWAP2 POP PUSH2 0x829 JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x60 PUSH1 0x40 PUSH2 0x98F PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0xA65 PUSH2 0x150E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH2 0xB11 PUSH1 0x4 CALLDATALOAD PUSH2 0xADA PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xAE2 PUSH2 0x150E JUMP JUMPDEST PUSH2 0xB16 JUMPI JUMPDEST PUSH2 0xB09 DUP5 PUSH2 0xB04 PUSH1 0x7 SLOAD DUP7 PUSH2 0xAFB DUP7 PUSH2 0x1097 JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0x118E JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x1097 JUMP JUMPDEST POP ADD SSTORE STOP JUMPDEST PUSH2 0xB1E PUSH2 0x130A JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x2E7 PUSH2 0x130A JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB77 DUP2 PUSH2 0x1097 JUMP JUMPDEST POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 PUSH1 0x2 DUP4 ADD SWAP2 DUP3 SLOAD TIMESTAMP LT PUSH2 0xC0C JUMPI PUSH1 0x0 SWAP4 DUP5 SWAP3 PUSH2 0xC02 PUSH1 0x4 PUSH1 0x1 SWAP5 PUSH2 0xBCA DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP7 SLOAD SWAP1 CALLER SWAP1 PUSH2 0x15B7 JUMP JUMPDEST DUP5 SLOAD SWAP4 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 PUSH1 0x20 CALLER SWAP3 LOG3 ADD SWAP2 DUP3 SLOAD PUSH2 0x11B1 JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP2 SSTORE ADD SSTORE SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456D657267656E637920776974686472617720626C6F636B656420647572696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672073616C6520616E6420636F6F6C646F776E20706572696F642E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x2E7 PUSH1 0x4 CALLDATALOAD PUSH2 0x1242 JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH2 0xCA1 CALLDATASIZE PUSH2 0x110A JUMP JUMPDEST PUSH2 0xCAA DUP3 PUSH2 0x1097 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP1 SWAP3 SWAP1 TIMESTAMP LT PUSH2 0xDF7 JUMPI DUP4 DUP3 SLOAD LT PUSH2 0xD9F JUMPI PUSH1 0x4 SWAP2 PUSH2 0xCE7 DUP7 PUSH2 0x1242 JUMP JUMPDEST PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0xD37 DUP3 SLOAD SWAP3 DUP3 PUSH2 0xD0D PUSH1 0x3 DUP8 ADD SWAP6 DUP7 SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP4 PUSH2 0xD22 PUSH2 0x5CF PUSH1 0x1 DUP5 ADD SWAP7 DUP8 SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0xD2D DUP10 DUP4 SLOAD PUSH2 0x11B1 JUMP JUMPDEST DUP1 SWAP3 SSTORE SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP1 SSTORE DUP1 SLOAD PUSH2 0xD52 SWAP1 DUP6 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15B7 JUMP JUMPDEST ADD PUSH2 0xD5E DUP4 DUP3 SLOAD PUSH2 0x11B1 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH2 0xD95 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x0 SWAP1 SSTORE DUP3 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x185B8819195C1BDCDA5D PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742073616C6520796F75207265676973746572656420666F7220697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737BA103334B734B9B432B2103CB2BA17 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH2 0x4D5 PUSH2 0x11D1 JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0xE8A PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0xE92 PUSH2 0x150E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xED5 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0xEDD PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xEE5 PUSH2 0x150E JUMP JUMPDEST PUSH2 0xFCD JUMPI JUMPDEST PUSH1 0x8 SLOAD DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0xFC8 JUMPI POP TIMESTAMP JUMPDEST PUSH2 0xF06 DUP4 PUSH1 0x7 SLOAD PUSH2 0x118E JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x40F JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1 PUSH2 0xF6F SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0x1097 JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0xFB2 JUMPI SWAP4 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xEFA JUMP JUMPDEST PUSH2 0xFD5 PUSH2 0x130A JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2B9 JUMPI PUSH2 0x1021 PUSH1 0xA0 SWAP2 PUSH2 0x1097 JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP4 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x5 PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B9 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B9 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2B9 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x40F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x40F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1178 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x116B JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x119B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x119B JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x119B JUMPI JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 TIMESTAMP GT ISZERO PUSH2 0x121C JUMPI PUSH2 0x1206 PUSH2 0x120F SWAP2 PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0x1212 JUMPI POP PUSH2 0x1200 TIMESTAMP SWAP2 JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1200 SWAP1 SWAP2 PUSH2 0x11F7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x122C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x124B SWAP1 PUSH2 0x1097 JUMP JUMPDEST POP PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0x1305 JUMPI POP TIMESTAMP JUMPDEST DUP1 SWAP2 PUSH1 0x2 DUP2 ADD SWAP2 DUP3 SLOAD DUP1 SWAP2 GT ISZERO PUSH2 0x12FD JUMPI JUMPDEST POP PUSH1 0x4 DUP2 ADD SLOAD DUP1 ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x3 PUSH2 0x12AD PUSH2 0x12A4 PUSH2 0x1299 PUSH2 0x1290 DUP8 SLOAD DUP10 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1222 JUMP JUMPDEST SWAP3 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x119B JUMPI PUSH2 0x12F3 SWAP3 PUSH2 0x12ED SWAP2 PUSH2 0x1222 JUMP JUMPDEST SWAP1 PUSH2 0x118E JUMP JUMPDEST SWAP1 SSTORE SSTORE JUMP JUMPDEST POP POP SSTORE JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x126E JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x131B JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1327 PUSH1 0x1 SWAP3 PUSH2 0x1242 JUMP JUMPDEST ADD PUSH2 0x1310 JUMP JUMPDEST SWAP1 PUSH2 0x1337 DUP3 PUSH2 0x1097 JUMP JUMPDEST POP SWAP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD DUP1 TIMESTAMP GT DUP1 PUSH2 0x1431 JUMPI JUMPDEST PUSH2 0x13A5 JUMPI JUMPDEST POP POP POP PUSH1 0x1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x139B PUSH2 0x120F SWAP5 DUP5 SLOAD PUSH2 0x11BE JUMP JUMPDEST DIV SWAP2 ADD SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0x13D2 SWAP2 PUSH1 0x1 PUSH2 0x13C9 PUSH2 0x1290 PUSH2 0x12A4 SWAP5 PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0x142C JUMPI POP TIMESTAMP PUSH2 0x11B1 JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST SWAP3 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP5 MUL SWAP4 DUP1 DUP6 DIV PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x119B JUMPI PUSH2 0x139B PUSH2 0x1425 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL SWAP3 PUSH2 0x12ED PUSH1 0x1 SWAP6 PUSH2 0x120F SWAP9 PUSH2 0x1222 JUMP JUMPDEST SWAP5 POP PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x11B1 JUMP JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x1374 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2B9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2B9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x14B2 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x14D2 DUP3 PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x14DF PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1120 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x14F0 PUSH1 0x1F NOT SWAP2 PUSH2 0x1142 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x152F JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP4 SWAP3 PUSH1 0x20 SWAP3 DUP6 SWAP3 PUSH1 0x44 SWAP3 DUP5 SWAP3 SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x4A3 JUMPI PUSH2 0x1595 SWAP3 PUSH2 0x159A JUMPI JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x118E JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x15B2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x49C JUMPI PUSH2 0x48E DUP2 DUP4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x15F8 SWAP2 PUSH2 0x15F3 PUSH1 0x64 DUP4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x163E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x15F8 SWAP2 PUSH2 0x15F3 PUSH1 0x84 DUP4 PUSH2 0x1120 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x1690 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x166F JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1668 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x16B6 JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212205A7F77 TLOAD SWAP14 LOG2 SWAP11 NUMBER 0x4E 0xA8 0xAB PUSH9 0x91703C6C45457556B9 0xE PUSH5 0x66569D14C8 PUSH1 0xE7 0xCB RETURN PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"357:13316:27:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_bool":{"entryPoint":4347,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":5178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_contract_IERC20":{"entryPoint":4303,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_contract_IERC20_14319":{"entryPoint":4325,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256t_uint256":{"entryPoint":4362,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":4442,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":5320,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":4418,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":4494,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":4642,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":4542,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":4529,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":4384,"id":null,"parameterSlots":2,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":5694,"id":1859,"parameterSlots":2,"returnSlots":0},"fun_checkInitializing":{"entryPoint":5785,"id":370,"parameterSlots":0,"returnSlots":0},"fun_checkOwner":{"entryPoint":5390,"id":122,"parameterSlots":0,"returnSlots":0},"fun_erc20Transfer":{"entryPoint":5444,"id":9218,"parameterSlots":2,"returnSlots":0},"fun_massUpdatePools":{"entryPoint":4874,"id":8659,"parameterSlots":0,"returnSlots":0},"fun_pending":{"entryPoint":4909,"id":8600,"parameterSlots":2,"returnSlots":1},"fun_safeTransfer":{"entryPoint":5559,"id":1537,"parameterSlots":3,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":5626,"id":1564,"parameterSlots":4,"returnSlots":0},"fun_totalPending":{"entryPoint":4561,"id":8634,"parameterSlots":0,"returnSlots":1},"fun_transferOwnership_inner":{"entryPoint":5202,"id":null,"parameterSlots":1,"returnSlots":0},"fun_updatePool":{"entryPoint":4674,"id":8792,"parameterSlots":1,"returnSlots":0},"memory_array_index_access_address_dyn":{"entryPoint":5370,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_struct_PoolInfo__dyn":{"entryPoint":4247,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c908163081e3eda1461107c575080630e15561a1461105e5780631526fe2714610ff857806317caf6f114610fda5780631eaaa04514610eb95780633dfcb86114610e715780633f90916a14610e56578063441a3e7014610c9357806351eb05a614610c775780635312ea8e14610b5a5780635c76ca2d14610b3c578063630b5ba114610b2357806364482f7914610ab6578063715018a614610a4c578063785e9e8614610a235780638da5cb5b146109ed5780638f10369a146109cf57806393f1a40b146109725780639e3d87cd146107c9578063a238310614610781578063a85adeab14610763578063aa5f7e2614610690578063ca1d209d146105db578063e2bbb158146104dd578063e4c75c27146104af578063e6f04acc14610330578063e6fd48bc14610312578063ed95f07f146102e9578063f2fde38b146102be5763fcfc1b141461016957600080fd5b346102b95760403660031901126102b95760043567ffffffffffffffff81116102b957366023820112156102b95780600401356101a581611142565b916101b36040519384611120565b8183526024602084019260051b820101903682116102b957602401915b81831061029957836024356101e582516114c8565b906101f083516114c8565b9260005b815181101561026b5760019060406001600160a01b0361021483866114fa565b511685600052600660205281600020600091858060a01b03168252602052205461023e82876114fa565b5261025a828060a01b0361025283866114fa565b51168561132d565b61026482886114fa565b52016101f4565b610287846102958760405193849360408552604085019061115a565b90838203602085015261115a565b0390f35b82356001600160a01b03811681036102b9578152602092830192016101d0565b600080fd5b346102b95760203660031901126102b9576102e76102da6110e5565b6102e261150e565b611452565b005b346102b95760003660031901126102b9576004546040516001600160a01b039091168152602090f35b346102b95760003660031901126102b9576020600854604051908152f35b346102b95760603660031901126102b9576103496110cf565b6024602060018060a01b036004541660405192838092631400493d60e31b82523360048301525afa9081156104a357600091610474575b501561042557600435600052600660205260406000209060018060a01b031660005260205260406000206002810190815442106102b957600391604435905501805490600160401b82101561040f57600182018082558210156103f9576000908152602090200180546001600160a01b03191633179055005b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602160248201527f53616c65206e6f742063726561746564207468726f75676820666163746f72796044820152601760f91b6064820152608490fd5b610496915060203d60201161049c575b61048e8183611120565b81019061143a565b82610380565b503d610484565b6040513d6000823e3d90fd5b346102b95760403660031901126102b95760206104d56104cd6110cf565b60043561132d565b604051908152f35b346102b9576104eb3661110a565b6104f482611097565b5082600052600660205260016a0c097ce7bc90715b34b9f160241b61057c604080600020600090858060a01b0333168252602052209361053387611242565b8454806105ae575b5061055286858060a01b03835416309033906115fa565b6004810161056187825461118e565b9055600361057087875461118e565b918287550154906111be565b049101556040519081527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1560203392a3005b6105cf846105c46105d5936003860154906111be565b0486880154906111b1565b33611544565b8761053b565b346102b95760203660031901126102b9576004356009544210156106405760005461063b9190610619908290309033906001600160a01b03166115fa565b61063061062860025483611222565b60095461118e565b60095560035461118e565b600355005b60405162461bcd60e51b815260206004820152602260248201527f66756e643a20746f6f206c6174652c20746865206661726d20697320636c6f73604482015261195960f21b6064820152608490fd5b346102b95760203660031901126102b9576004356106ad81611097565b50600082815260066020908152604080832033845290915290206106d083611242565b6004815492600381016a0c097ce7bc90715b34b9f160241b61071e816106f78454896111be565b049261071361070c60018901958654906111b1565b809961118e565b9081885554906111be565b0490550161072d83825461118e565b90555460405191825260208201527f92f0bdf80f3916a4279540865e94ef327cf48639092106cca4bddc9bb1de4a8660403392a3005b346102b95760003660031901126102b9576020600954604051908152f35b346102b95760403660031901126102b95761079a6110cf565b600435600052600660205260406000209060018060a01b03166000526020526020604060002054604051908152f35b346102b95760803660031901126102b9576107e26110e5565b6064356001600160a01b03811690604435908290036102b9576000805160206116e8833981519152549260ff8460401c16159367ffffffffffffffff81168015908161096a575b6001149081610960575b159081610957575b506109465767ffffffffffffffff1981166001176000805160206116e88339815191525584610919575b5061086e611699565b610876611699565b61087f33611452565b60018060a01b03166001600160601b0360a01b6000541617600055602435600255806008556009556001600160601b0360a01b60045416176004556108c057005b68ff0000000000000000196000805160206116e883398151915254166000805160206116e8833981519152557fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2602060405160018152a1005b68ffffffffffffffffff191668010000000000000001176000805160206116e88339815191525584610865565b63f92ee8a960e01b60005260046000fd5b9050158661083b565b303b159150610833565b869150610829565b346102b95760403660031901126102b9576060604061098f6110cf565b60043560005260066020528160002060009160018060a01b0316825260205220805490600260018201549101549060405192835260208301526040820152f35b346102b95760003660031901126102b9576020600254604051908152f35b346102b95760003660031901126102b9576000805160206116c8833981519152546040516001600160a01b039091168152602090f35b346102b95760003660031901126102b9576000546040516001600160a01b039091168152602090f35b346102b95760003660031901126102b957610a6561150e565b6000805160206116c883398151915280546001600160a01b031981169091556000906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346102b95760603660031901126102b9576024356001610b11600435610ada6110fb565b610ae261150e565b610b16575b610b0984610b0460075486610afb86611097565b500154906111b1565b61118e565b600755611097565b500155005b610b1e61130a565b610ae7565b346102b95760003660031901126102b9576102e761130a565b346102b95760003660031901126102b9576020600154604051908152f35b346102b95760203660031901126102b957600435610b7781611097565b5081600052600660205260408060002060009060018060a01b03331682526020522091600283019182544210610c0c576000938492610c026004600194610bca868060a01b0382541686549033906115b7565b8454936040518581527fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059560203392a3019182546111b1565b9055828155015555005b60405162461bcd60e51b815260206004820152603b60248201527f456d657267656e637920776974686472617720626c6f636b656420647572696e60448201527f672073616c6520616e6420636f6f6c646f776e20706572696f642e00000000006064820152608490fd5b346102b95760203660031901126102b9576102e7600435611242565b346102b957610ca13661110a565b610caa82611097565b50600083815260066020908152604080832033845290915290206002810180549092904210610df75783825410610d9f57600491610ce786611242565b6a0c097ce7bc90715b34b9f160241b610d3782549282610d0d60038701958654906111be565b0493610d226105cf60018401968754906111b1565b610d2d8983546111b1565b80925554906111be565b0490558054610d5290859033906001600160a01b03166115b7565b01610d5e8382546111b1565b905581610d95575b506040519081527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56860203392a3005b6000905582610d66565b60405162461bcd60e51b815260206004820152602a60248201527f77697468647261773a2063616e2774207769746864726177206d6f7265207468604482015269185b8819195c1bdcda5d60b21b6064820152608490fd5b60405162461bcd60e51b815260206004820152603160248201527f4c6173742073616c6520796f75207265676973746572656420666f72206973206044820152703737ba103334b734b9b432b2103cb2ba1760791b6064820152608490fd5b346102b95760003660031901126102b95760206104d56111d1565b346102b95760203660031901126102b957610e8a6110e5565b610e9261150e565b6001600160a01b031680156102b9576001600160601b0360a01b6004541617600455600080f35b346102b95760603660031901126102b957600435610ed56110cf565b610edd6110fb565b610ee561150e565b610fcd575b600854804211600014610fc85750425b610f068360075461118e565b6007556040519160a0830183811067ffffffffffffffff82111761040f5760405260018060a01b0316825260208201928352604082019081526060820160008152608083019160008352600554600160401b81101561040f57806001610f6f9201600555611097565b959095610fb257935185546001600160a01b0319166001600160a01b03919091161785559251600185015591516002840155905160038301555160049190910155005b634e487b7160e01b600052600060045260246000fd5b610efa565b610fd561130a565b610eea565b346102b95760003660031901126102b9576020600754604051908152f35b346102b95760203660031901126102b9576004356005548110156102b95761102160a091611097565b50600180831b0381541690600181015490600281015460046003830154920154926040519485526020850152604084015260608301526080820152f35b346102b95760003660031901126102b9576020600354604051908152f35b346102b95760003660031901126102b9576020906005548152f35b6005548110156103f9576005600081815291027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00191565b602435906001600160a01b03821682036102b957565b600435906001600160a01b03821682036102b957565b6044359081151582036102b957565b60409060031901126102b9576004359060243590565b90601f8019910116810190811067ffffffffffffffff82111761040f57604052565b67ffffffffffffffff811161040f5760051b60200190565b906020808351928381520192019060005b8181106111785750505090565b825184526020938401939092019160010161116b565b9190820180921161119b57565b634e487b7160e01b600052601160045260246000fd5b9190820391821161119b57565b8181029291811591840414171561119b57565b6008548042111561121c5761120661120f91600954804210600014611212575061120042915b600254926111b1565b906111be565b600154906111b1565b90565b61120090916111f7565b50600090565b811561122c570490565b634e487b7160e01b600052601260045260246000fd5b61124b90611097565b506009548042106000146113055750425b809160028101918254809111156112fd575b50600481015480156112f85760036112ad6112a46112996112908754896111b1565b600254906111be565b6001860154906111be565b60075490611222565b9201918254906a0c097ce7bc90715b34b9f160241b8102908082046a0c097ce7bc90715b34b9f160241b149015171561119b576112f3926112ed91611222565b9061118e565b905555565b505055565b92503861126e565b61125c565b60055460005b81811061131b575050565b80611327600192611242565b01611310565b9061133782611097565b5091600052600660205260406000209060018060a01b03166000526020526040600020600382015491600481015490600281015480421180611431575b6113a5575b50505060016a0c097ce7bc90715b34b9f160241b61139b61120f9484546111be565b04910154906111b1565b6113d29160016113c96112906112a49460095480421060001461142c5750426111b1565b910154906111be565b926a0c097ce7bc90715b34b9f160241b8402938085046a0c097ce7bc90715b34b9f160241b149015171561119b5761139b6114256a0c097ce7bc90715b34b9f160241b926112ed60019561120f98611222565b9450611379565b6111b1565b50821515611374565b908160209103126102b9575180151581036102b95790565b6001600160a01b031680156114b2576000805160206116c883398151915280546001600160a01b0319811683179091556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b631e4fbdf760e01b600052600060045260246000fd5b906114d282611142565b6114df6040519182611120565b82815280926114f0601f1991611142565b0190602036910137565b80518210156103f95760209160051b010190565b6000805160206116c8833981519152546001600160a01b0316330361152f57565b63118cdaa760e01b6000523360045260246000fd5b6000805460405163a9059cbb60e01b81526001600160a01b0393841660048201526024810185905293926020928592604492849291165af19182156104a3576115959261159a575b5060015461118e565b600155565b6115b29060203d60201161049c5761048e8183611120565b61158c565b60405163a9059cbb60e01b60208201526001600160a01b039290921660248301526044808301939093529181526115f8916115f3606483611120565b61163e565b565b6040516323b872dd60e01b60208201526001600160a01b0392831660248201529290911660448301526064808301939093529181526115f8916115f3608483611120565b906000602091828151910182855af1156104a3576000513d61169057506001600160a01b0381163b155b61166f5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415611668565b60ff6000805160206116e88339815191525460401c16156116b657565b631afcd79f60e31b60005260046000fdfe9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212205a7f775c9da29a434ea8ab6891703c6c45457556b90e6466569d14c860e7cbf364736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x81E3EDA EQ PUSH2 0x107C JUMPI POP DUP1 PUSH4 0xE15561A EQ PUSH2 0x105E JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0xFF8 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0xFDA JUMPI DUP1 PUSH4 0x1EAAA045 EQ PUSH2 0xEB9 JUMPI DUP1 PUSH4 0x3DFCB861 EQ PUSH2 0xE71 JUMPI DUP1 PUSH4 0x3F90916A EQ PUSH2 0xE56 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0xC93 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0xC77 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0xB5A JUMPI DUP1 PUSH4 0x5C76CA2D EQ PUSH2 0xB3C JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0xB23 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0xAB6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xA4C JUMPI DUP1 PUSH4 0x785E9E86 EQ PUSH2 0xA23 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9ED JUMPI DUP1 PUSH4 0x8F10369A EQ PUSH2 0x9CF JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x972 JUMPI DUP1 PUSH4 0x9E3D87CD EQ PUSH2 0x7C9 JUMPI DUP1 PUSH4 0xA2383106 EQ PUSH2 0x781 JUMPI DUP1 PUSH4 0xA85ADEAB EQ PUSH2 0x763 JUMPI DUP1 PUSH4 0xAA5F7E26 EQ PUSH2 0x690 JUMPI DUP1 PUSH4 0xCA1D209D EQ PUSH2 0x5DB JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x4DD JUMPI DUP1 PUSH4 0xE4C75C27 EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xE6F04ACC EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xE6FD48BC EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xED95F07F EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BE JUMPI PUSH4 0xFCFC1B14 EQ PUSH2 0x169 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2B9 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2B9 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1A5 DUP2 PUSH2 0x1142 JUMP JUMPDEST SWAP2 PUSH2 0x1B3 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1120 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0x2B9 JUMPI PUSH1 0x24 ADD SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x299 JUMPI DUP4 PUSH1 0x24 CALLDATALOAD PUSH2 0x1E5 DUP3 MLOAD PUSH2 0x14C8 JUMP JUMPDEST SWAP1 PUSH2 0x1F0 DUP4 MLOAD PUSH2 0x14C8 JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x26B JUMPI PUSH1 0x1 SWAP1 PUSH1 0x40 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x214 DUP4 DUP7 PUSH2 0x14FA JUMP JUMPDEST MLOAD AND DUP6 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 DUP6 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SLOAD PUSH2 0x23E DUP3 DUP8 PUSH2 0x14FA JUMP JUMPDEST MSTORE PUSH2 0x25A DUP3 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x252 DUP4 DUP7 PUSH2 0x14FA JUMP JUMPDEST MLOAD AND DUP6 PUSH2 0x132D JUMP JUMPDEST PUSH2 0x264 DUP3 DUP9 PUSH2 0x14FA JUMP JUMPDEST MSTORE ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x287 DUP5 PUSH2 0x295 DUP8 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x115A JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x115A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x2B9 JUMPI DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x2E7 PUSH2 0x2DA PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0x2E2 PUSH2 0x150E JUMP JUMPDEST PUSH2 0x1452 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x349 PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x1400493D PUSH1 0xE3 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x474 JUMPI JUMPDEST POP ISZERO PUSH2 0x425 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x2 DUP2 ADD SWAP1 DUP2 SLOAD TIMESTAMP LT PUSH2 0x2B9 JUMPI PUSH1 0x3 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 SSTORE ADD DUP1 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x40F JUMPI PUSH1 0x1 DUP3 ADD DUP1 DUP3 SSTORE DUP3 LT ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616C65206E6F742063726561746564207468726F75676820666163746F7279 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x496 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x49C JUMPI JUMPDEST PUSH2 0x48E DUP2 DUP4 PUSH2 0x1120 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x143A JUMP JUMPDEST DUP3 PUSH2 0x380 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x484 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH2 0x4D5 PUSH2 0x4CD PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH2 0x132D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH2 0x4EB CALLDATASIZE PUSH2 0x110A JUMP JUMPDEST PUSH2 0x4F4 DUP3 PUSH2 0x1097 JUMP JUMPDEST POP DUP3 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x57C PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 DUP6 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP4 PUSH2 0x533 DUP8 PUSH2 0x1242 JUMP JUMPDEST DUP5 SLOAD DUP1 PUSH2 0x5AE JUMPI JUMPDEST POP PUSH2 0x552 DUP7 DUP6 DUP1 PUSH1 0xA0 SHL SUB DUP4 SLOAD AND ADDRESS SWAP1 CALLER SWAP1 PUSH2 0x15FA JUMP JUMPDEST PUSH1 0x4 DUP2 ADD PUSH2 0x561 DUP8 DUP3 SLOAD PUSH2 0x118E JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x3 PUSH2 0x570 DUP8 DUP8 SLOAD PUSH2 0x118E JUMP JUMPDEST SWAP2 DUP3 DUP8 SSTORE ADD SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH2 0x5CF DUP5 PUSH2 0x5C4 PUSH2 0x5D5 SWAP4 PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV DUP7 DUP9 ADD SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST CALLER PUSH2 0x1544 JUMP JUMPDEST DUP8 PUSH2 0x53B JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 SLOAD PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x619 SWAP1 DUP3 SWAP1 ADDRESS SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15FA JUMP JUMPDEST PUSH2 0x630 PUSH2 0x628 PUSH1 0x2 SLOAD DUP4 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x118E JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x3 SLOAD PUSH2 0x118E JUMP JUMPDEST PUSH1 0x3 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x66756E643A20746F6F206C6174652C20746865206661726D20697320636C6F73 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6AD DUP2 PUSH2 0x1097 JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x6D0 DUP4 PUSH2 0x1242 JUMP JUMPDEST PUSH1 0x4 DUP2 SLOAD SWAP3 PUSH1 0x3 DUP2 ADD PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x71E DUP2 PUSH2 0x6F7 DUP5 SLOAD DUP10 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP3 PUSH2 0x713 PUSH2 0x70C PUSH1 0x1 DUP10 ADD SWAP6 DUP7 SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST DUP1 SWAP10 PUSH2 0x118E JUMP JUMPDEST SWAP1 DUP2 DUP9 SSTORE SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP1 SSTORE ADD PUSH2 0x72D DUP4 DUP3 SLOAD PUSH2 0x118E JUMP JUMPDEST SWAP1 SSTORE SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x92F0BDF80F3916A4279540865E94EF327CF48639092106CCA4BDDC9BB1DE4A86 PUSH1 0x40 CALLER SWAP3 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x79A PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x7E2 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP3 SWAP1 SUB PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD SWAP3 PUSH1 0xFF DUP5 PUSH1 0x40 SHR AND ISZERO SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP1 ISZERO SWAP1 DUP2 PUSH2 0x96A JUMPI JUMPDEST PUSH1 0x1 EQ SWAP1 DUP2 PUSH2 0x960 JUMPI JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0x957 JUMPI JUMPDEST POP PUSH2 0x946 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 AND PUSH1 0x1 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP5 PUSH2 0x919 JUMPI JUMPDEST POP PUSH2 0x86E PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x876 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x87F CALLER PUSH2 0x1452 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x0 SLOAD AND OR PUSH1 0x0 SSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x2 SSTORE DUP1 PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH2 0x8C0 JUMPI STOP JUMPDEST PUSH9 0xFF0000000000000000 NOT PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFFFF NOT AND PUSH9 0x10000000000000001 OR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SSTORE DUP5 PUSH2 0x865 JUMP JUMPDEST PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP ISZERO DUP7 PUSH2 0x83B JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO SWAP2 POP PUSH2 0x833 JUMP JUMPDEST DUP7 SWAP2 POP PUSH2 0x829 JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x60 PUSH1 0x40 PUSH2 0x98F PUSH2 0x10CF JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD SWAP1 PUSH1 0x2 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0xA65 PUSH2 0x150E JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH2 0xB11 PUSH1 0x4 CALLDATALOAD PUSH2 0xADA PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xAE2 PUSH2 0x150E JUMP JUMPDEST PUSH2 0xB16 JUMPI JUMPDEST PUSH2 0xB09 DUP5 PUSH2 0xB04 PUSH1 0x7 SLOAD DUP7 PUSH2 0xAFB DUP7 PUSH2 0x1097 JUMP JUMPDEST POP ADD SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0x118E JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x1097 JUMP JUMPDEST POP ADD SSTORE STOP JUMPDEST PUSH2 0xB1E PUSH2 0x130A JUMP JUMPDEST PUSH2 0xAE7 JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x2E7 PUSH2 0x130A JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xB77 DUP2 PUSH2 0x1097 JUMP JUMPDEST POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SWAP2 PUSH1 0x2 DUP4 ADD SWAP2 DUP3 SLOAD TIMESTAMP LT PUSH2 0xC0C JUMPI PUSH1 0x0 SWAP4 DUP5 SWAP3 PUSH2 0xC02 PUSH1 0x4 PUSH1 0x1 SWAP5 PUSH2 0xBCA DUP7 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP7 SLOAD SWAP1 CALLER SWAP1 PUSH2 0x15B7 JUMP JUMPDEST DUP5 SLOAD SWAP4 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 PUSH1 0x20 CALLER SWAP3 LOG3 ADD SWAP2 DUP3 SLOAD PUSH2 0x11B1 JUMP JUMPDEST SWAP1 SSTORE DUP3 DUP2 SSTORE ADD SSTORE SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456D657267656E637920776974686472617720626C6F636B656420647572696E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x672073616C6520616E6420636F6F6C646F776E20706572696F642E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0x2E7 PUSH1 0x4 CALLDATALOAD PUSH2 0x1242 JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH2 0xCA1 CALLDATASIZE PUSH2 0x110A JUMP JUMPDEST PUSH2 0xCAA DUP3 PUSH2 0x1097 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0x2 DUP2 ADD DUP1 SLOAD SWAP1 SWAP3 SWAP1 TIMESTAMP LT PUSH2 0xDF7 JUMPI DUP4 DUP3 SLOAD LT PUSH2 0xD9F JUMPI PUSH1 0x4 SWAP2 PUSH2 0xCE7 DUP7 PUSH2 0x1242 JUMP JUMPDEST PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0xD37 DUP3 SLOAD SWAP3 DUP3 PUSH2 0xD0D PUSH1 0x3 DUP8 ADD SWAP6 DUP7 SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP4 PUSH2 0xD22 PUSH2 0x5CF PUSH1 0x1 DUP5 ADD SWAP7 DUP8 SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0xD2D DUP10 DUP4 SLOAD PUSH2 0x11B1 JUMP JUMPDEST DUP1 SWAP3 SSTORE SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST DIV SWAP1 SSTORE DUP1 SLOAD PUSH2 0xD52 SWAP1 DUP6 SWAP1 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15B7 JUMP JUMPDEST ADD PUSH2 0xD5E DUP4 DUP3 SLOAD PUSH2 0x11B1 JUMP JUMPDEST SWAP1 SSTORE DUP2 PUSH2 0xD95 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x0 SWAP1 SSTORE DUP3 PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x77697468647261773A2063616E2774207769746864726177206D6F7265207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x185B8819195C1BDCDA5D PUSH1 0xB2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C6173742073616C6520796F75207265676973746572656420666F7220697320 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x3737BA103334B734B9B432B2103CB2BA17 PUSH1 0x79 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH2 0x4D5 PUSH2 0x11D1 JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH2 0xE8A PUSH2 0x10E5 JUMP JUMPDEST PUSH2 0xE92 PUSH2 0x150E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xED5 PUSH2 0x10CF JUMP JUMPDEST PUSH2 0xEDD PUSH2 0x10FB JUMP JUMPDEST PUSH2 0xEE5 PUSH2 0x150E JUMP JUMPDEST PUSH2 0xFCD JUMPI JUMPDEST PUSH1 0x8 SLOAD DUP1 TIMESTAMP GT PUSH1 0x0 EQ PUSH2 0xFC8 JUMPI POP TIMESTAMP JUMPDEST PUSH2 0xF06 DUP4 PUSH1 0x7 SLOAD PUSH2 0x118E JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 MLOAD SWAP2 PUSH1 0xA0 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x40F JUMPI PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x80 DUP4 ADD SWAP2 PUSH1 0x0 DUP4 MSTORE PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x40F JUMPI DUP1 PUSH1 0x1 PUSH2 0xF6F SWAP3 ADD PUSH1 0x5 SSTORE PUSH2 0x1097 JUMP JUMPDEST SWAP6 SWAP1 SWAP6 PUSH2 0xFB2 JUMPI SWAP4 MLOAD DUP6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND OR DUP6 SSTORE SWAP3 MLOAD PUSH1 0x1 DUP6 ADD SSTORE SWAP2 MLOAD PUSH1 0x2 DUP5 ADD SSTORE SWAP1 MLOAD PUSH1 0x3 DUP4 ADD SSTORE MLOAD PUSH1 0x4 SWAP2 SWAP1 SWAP2 ADD SSTORE STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xEFA JUMP JUMPDEST PUSH2 0xFD5 PUSH2 0x130A JUMP JUMPDEST PUSH2 0xEEA JUMP JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x2B9 JUMPI PUSH2 0x1021 PUSH1 0xA0 SWAP2 PUSH2 0x1097 JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP4 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2B9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x5 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x5 PUSH1 0x0 DUP2 DUP2 MSTORE SWAP2 MUL PUSH32 0x36B6384B5ECA791C62761152D0C79BB0604C104A5FB6F4EB0703F3154BB3DB0 ADD SWAP2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B9 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2B9 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x2B9 JUMPI JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x2B9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x40F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x40F JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1178 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x116B JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x119B JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x119B JUMPI JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x119B JUMPI JUMP JUMPDEST PUSH1 0x8 SLOAD DUP1 TIMESTAMP GT ISZERO PUSH2 0x121C JUMPI PUSH2 0x1206 PUSH2 0x120F SWAP2 PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0x1212 JUMPI POP PUSH2 0x1200 TIMESTAMP SWAP2 JUMPDEST PUSH1 0x2 SLOAD SWAP3 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1200 SWAP1 SWAP2 PUSH2 0x11F7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x122C JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x124B SWAP1 PUSH2 0x1097 JUMP JUMPDEST POP PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0x1305 JUMPI POP TIMESTAMP JUMPDEST DUP1 SWAP2 PUSH1 0x2 DUP2 ADD SWAP2 DUP3 SLOAD DUP1 SWAP2 GT ISZERO PUSH2 0x12FD JUMPI JUMPDEST POP PUSH1 0x4 DUP2 ADD SLOAD DUP1 ISZERO PUSH2 0x12F8 JUMPI PUSH1 0x3 PUSH2 0x12AD PUSH2 0x12A4 PUSH2 0x1299 PUSH2 0x1290 DUP8 SLOAD DUP10 PUSH2 0x11B1 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x1 DUP7 ADD SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH2 0x1222 JUMP JUMPDEST SWAP3 ADD SWAP2 DUP3 SLOAD SWAP1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP2 MUL SWAP1 DUP1 DUP3 DIV PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x119B JUMPI PUSH2 0x12F3 SWAP3 PUSH2 0x12ED SWAP2 PUSH2 0x1222 JUMP JUMPDEST SWAP1 PUSH2 0x118E JUMP JUMPDEST SWAP1 SSTORE SSTORE JUMP JUMPDEST POP POP SSTORE JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x126E JUMP JUMPDEST PUSH2 0x125C JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x131B JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0x1327 PUSH1 0x1 SWAP3 PUSH2 0x1242 JUMP JUMPDEST ADD PUSH2 0x1310 JUMP JUMPDEST SWAP1 PUSH2 0x1337 DUP3 PUSH2 0x1097 JUMP JUMPDEST POP SWAP2 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP3 ADD SLOAD SWAP2 PUSH1 0x4 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD DUP1 TIMESTAMP GT DUP1 PUSH2 0x1431 JUMPI JUMPDEST PUSH2 0x13A5 JUMPI JUMPDEST POP POP POP PUSH1 0x1 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL PUSH2 0x139B PUSH2 0x120F SWAP5 DUP5 SLOAD PUSH2 0x11BE JUMP JUMPDEST DIV SWAP2 ADD SLOAD SWAP1 PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0x13D2 SWAP2 PUSH1 0x1 PUSH2 0x13C9 PUSH2 0x1290 PUSH2 0x12A4 SWAP5 PUSH1 0x9 SLOAD DUP1 TIMESTAMP LT PUSH1 0x0 EQ PUSH2 0x142C JUMPI POP TIMESTAMP PUSH2 0x11B1 JUMP JUMPDEST SWAP2 ADD SLOAD SWAP1 PUSH2 0x11BE JUMP JUMPDEST SWAP3 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL DUP5 MUL SWAP4 DUP1 DUP6 DIV PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL EQ SWAP1 ISZERO OR ISZERO PUSH2 0x119B JUMPI PUSH2 0x139B PUSH2 0x1425 PUSH11 0xC097CE7BC90715B34B9F1 PUSH1 0x24 SHL SWAP3 PUSH2 0x12ED PUSH1 0x1 SWAP6 PUSH2 0x120F SWAP9 PUSH2 0x1222 JUMP JUMPDEST SWAP5 POP PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x11B1 JUMP JUMPDEST POP DUP3 ISZERO ISZERO PUSH2 0x1374 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2B9 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2B9 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x14B2 JUMPI PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH2 0x14D2 DUP3 PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x14DF PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x1120 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x14F0 PUSH1 0x1F NOT SWAP2 PUSH2 0x1142 JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16C8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x152F JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP4 SWAP3 PUSH1 0x20 SWAP3 DUP6 SWAP3 PUSH1 0x44 SWAP3 DUP5 SWAP3 SWAP2 AND GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x4A3 JUMPI PUSH2 0x1595 SWAP3 PUSH2 0x159A JUMPI JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x118E JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x15B2 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x49C JUMPI PUSH2 0x48E DUP2 DUP4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x158C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x15F8 SWAP2 PUSH2 0x15F3 PUSH1 0x64 DUP4 PUSH2 0x1120 JUMP JUMPDEST PUSH2 0x163E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x15F8 SWAP2 PUSH2 0x15F3 PUSH1 0x84 DUP4 PUSH2 0x1120 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x1690 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x166F JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x1668 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x16E8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x40 SHR AND ISZERO PUSH2 0x16B6 JUMPI JUMP JUMPDEST PUSH4 0x1AFCD79F PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID SWAP1 AND 0xD0 SWAP14 PUSH19 0xD40FDAE2FD8CEAC6B6234C7706214FD39C1CD1 0xE6 MULMOD LOG0 MSTORE DUP13 NOT SWAP4 STOP CREATE 0xC5 PUSH31 0x16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00A264 PUSH10 0x706673582212205A7F77 TLOAD SWAP14 LOG2 SWAP11 NUMBER 0x4E 0xA8 0xAB PUSH9 0x91703C6C45457556B9 0xE PUSH5 0x66569D14C8 PUSH1 0xE7 0xCB RETURN PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"357:13316:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13312:27;357:13316;;13312:27;:::i;:::-;357:13316;13378:27;357:13316;;13378:27;:::i;:::-;13477:10;357:13316;13507:3;357:13316;;13489:16;;;;;357:13316;;;-1:-1:-1;;;;;13555:8:27;357:13316;13555:8;;:::i;:::-;357:13316;;;;;5892:8;357:13316;;;;;-1:-1:-1;357:13316:27;;;;;;;;;;;;;13526:38;;;;:::i;:::-;357:13316;13592:22;357:13316;;;;;13605:8;;;;:::i;:::-;357:13316;;13592:22;;:::i;:::-;13578:36;;;;:::i;:::-;357:13316;;13477:10;;13489:16;357:13316;13489:16;357:13316;13489:16;357:13316;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;357:13316:27;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;2357:1:0;357:13316:27;;:::i;:::-;2303:62:0;;:::i;:::-;2357:1;:::i;:::-;357:13316:27;;;;;;;-1:-1:-1;;357:13316:27;;;;;;;;-1:-1:-1;;;;;357:13316:27;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;2678:29;357:13316;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3258:52;;3299:10;357:13316;3258:52;;357:13316;3258:52;;;;;;;357:13316;3258:52;;;357:13316;;;;;;;;;7844:8;357:13316;;;;;7844:21;357:13316;;;;;;-1:-1:-1;357:13316:27;;;;-1:-1:-1;357:13316:27;7937:21;;;357:13316;;;7962:15;-1:-1:-1;357:13316:27;;8102:20;357:13316;;;;;8102:20;357:13316;;;-1:-1:-1;;;357:13316:27;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;357:13316:27;3299:10;357:13316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;357:13316:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;357:13316:27;;;;;;;3258:52;;;;357:13316;3258:52;357:13316;3258:52;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;357:13316;;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;9225:14;;;:::i;:::-;357:13316;;;;9273:8;357:13316;;10003:15;-1:-1:-1;;;10021:33:27;357:13316;;;;-1:-1:-1;357:13316:27;;;;;;9288:10;357:13316;;;;;;9386:4;;;;:::i;:::-;357:13316;;9468:15;9464:178;;357:13316;;9761:7;357:13316;;;;;;;;;9754:4;9288:10;;9761:7;;:::i;:::-;357:13316;9841:18;;:32;357:13316;;;9841:32;:::i;:::-;357:13316;;10033:21;9937:25;357:13316;;;9937:25;:::i;:::-;357:13316;;;;10033:21;357:13316;10021:33;;:::i;:::-;357:13316;10003:15;;357:13316;;;;;;10105:40;357:13316;9288:10;10105:40;;357:13316;9464:178;9523:54;9535:21;9523:33;9617:13;9535:21;;;;357:13316;9523:33;;:::i;:::-;357:13316;9562:15;;;357:13316;9523:54;;:::i;:::-;9288:10;9617:13;:::i;:::-;9464:178;;;357:13316;;;;;;-1:-1:-1;;357:13316:27;;;;;;4360:12;357:13316;4342:15;:30;357:13316;;;;;4562:20;;357:13316;4480:7;;357:13316;;4473:4;;4452:10;;-1:-1:-1;;;;;357:13316:27;4480:7;:::i;:::-;4498:39;4514:23;4522:15;357:13316;4514:23;;:::i;:::-;4360:12;357:13316;4498:39;:::i;:::-;4360:12;357:13316;4562:12;357:13316;4562:20;:::i;:::-;:12;357:13316;;;;;-1:-1:-1;;;357:13316:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;357:13316:27;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;11450:14;;;:::i;:::-;-1:-1:-1;357:13316:27;;;;11498:8;357:13316;;;;;;;;11513:10;357:13316;;;;;;;11644:4;357:13316;11644:4;:::i;:::-;357:13316;;;11696:21;;;;-1:-1:-1;;;11859:33:27;357:13316;11684:33;357:13316;;11684:33;;:::i;:::-;357:13316;11723:15;11806:25;11684:54;357:13316;11723:15;;357:13316;;;11684:54;;:::i;:::-;11806:25;;;:::i;:::-;357:13316;;;;;11859:33;;:::i;:::-;357:13316;;;11971:18;:32;357:13316;;;11971:32;:::i;:::-;357:13316;;;;;;;;;;;;12018:64;357:13316;11513:10;12018:64;;357:13316;;;;;;;-1:-1:-1;;357:13316:27;;;;;2753:27;357:13316;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;:::i;:::-;;;;;5892:8;357:13316;;;;;5892:21;357:13316;;;;;;-1:-1:-1;357:13316:27;;;;;-1:-1:-1;357:13316:27;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;:::i;:::-;;;-1:-1:-1;;;;;357:13316:27;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;357:13316:27;;;;;;;4301:16:1;357:13316:27;;;;4726:16:1;;:34;;;;357:13316:27;;4790:16:1;:50;;;;357:13316:27;4855:13:1;:30;;;;357:13316:27;4851:91:1;;;-1:-1:-1;;357:13316:27;;;;-1:-1:-1;;;;;;;;;;;357:13316:27;;4979:67:1;;357:13316:27;6893:76:1;;;:::i;:::-;;;:::i;:::-;6961:1;966:10:2;6961:1:1;:::i;:::-;357:13316:27;;;;;;-1:-1:-1;;;;;357:13316:27;;;;;;;;;;3619:34;357:13316;;3663:32;357:13316;3705:30;357:13316;-1:-1:-1;;;;;357:13316:27;;;;;;;;5066:101:1;;357:13316:27;5066:101:1;357:13316:27;;-1:-1:-1;;;;;;;;;;;357:13316:27;;-1:-1:-1;;;;;;;;;;;357:13316:27;5142:14:1;357:13316:27;;;;;;5142:14:1;357:13316:27;4979:67:1;-1:-1:-1;;357:13316:27;;;-1:-1:-1;;;;;;;;;;;357:13316:27;4979:67:1;;;4851:91;4908:23;;;357:13316:27;4908:23:1;357:13316:27;;4908:23:1;4855:30;4872:13;;;4855:30;;;4790:50;4818:4;4810:25;:30;;-1:-1:-1;4790:50:1;;4726:34;;;-1:-1:-1;4726:34:1;;357:13316:27;;;;;;-1:-1:-1;;357:13316:27;;;;;;;;:::i;:::-;;;;;2442:64;357:13316;;;;;-1:-1:-1;357:13316:27;;;;;;;;;;;;;;2442:64;;357:13316;2442:64;;357:13316;2442:64;;357:13316;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;2152:30;357:13316;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;-1:-1:-1;;;;;;;;;;;357:13316:27;;;-1:-1:-1;;;;;357:13316:27;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;;;-1:-1:-1;;;;;357:13316:27;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;;;;;;;357:13316:27;;-1:-1:-1;;;;;;357:13316:27;;;;;;;-1:-1:-1;;;;;357:13316:27;3975:40:0;357:13316:27;;3975:40:0;357:13316:27;;;;;;;-1:-1:-1;;357:13316:27;;;;;;;5675:14;357:13316;;;;:::i;:::-;2303:62:0;;:::i;:::-;5526:59:27;;357:13316;5612:53;357:13316;5612:41;:15;357:13316;5628:14;;;;:::i;:::-;:25;;357:13316;5612:41;;:::i;:::-;:53;:::i;:::-;:15;357:13316;5675:14;:::i;:::-;-1:-1:-1;5675:25:27;357:13316;;5526:59;;;:::i;:::-;;;357:13316;;;;;;-1:-1:-1;;357:13316:27;;;;;;:::i;:::-;;;;;;-1:-1:-1;;357:13316:27;;;;;2083:22;357:13316;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;12239:14;;;:::i;:::-;357:13316;;;;12287:8;357:13316;;;;;;-1:-1:-1;357:13316:27;;;;;;12302:10;357:13316;;;;;;12331:21;;;;357:13316;;;12356:15;-1:-1:-1;357:13316:27;;;;;;12676:30;357:13316;;;12537:11;357:13316;;;;;;;;;;12302:10;;12537:11;;:::i;:::-;357:13316;;;;;;;;12564:48;357:13316;12302:10;12564:48;;12676:18;357:13316;;;12676:30;:::i;:::-;357:13316;;;;;12741:15;357:13316;;;;;;-1:-1:-1;;;357:13316:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;10285:14;;;:::i;:::-;-1:-1:-1;357:13316:27;;;;10333:8;357:13316;;;;;;;;10348:10;357:13316;;;;;;;10378:21;;;357:13316;;10378:21;;357:13316;10403:15;-1:-1:-1;357:13316:27;;;;;10490:22;357:13316;;;10604:4;;;;:::i;:::-;-1:-1:-1;;;10904:33:27;357:13316;;10697:21;;10685:33;10697:21;;;357:13316;;;10685:33;;:::i;:::-;357:13316;10724:15;10819:13;10685:54;10724:15;;;357:13316;;;10685:54;;:::i;10819:13::-;10857:19;357:13316;;;10857:19;:::i;:::-;357:13316;;;;10904:33;;:::i;:::-;357:13316;;;;;11046:7;;10348:10;;;;-1:-1:-1;;;;;357:13316:27;11046:7;:::i;:::-;11085:18;:26;357:13316;;;11085:26;:::i;:::-;357:13316;;11126:11;11122:111;;357:13316;;;;;;;11279:35;357:13316;10348:10;11279:35;;357:13316;11122:111;357:13316;;;11122:111;;;357:13316;;;-1:-1:-1;;;357:13316:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;357:13316:27;;;;;;;;;;-1:-1:-1;;;357:13316:27;;;;;;;;;;;;;;;;;-1:-1:-1;;;357:13316:27;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;357:13316:27;;;;;;:::i;:::-;2303:62:0;;:::i;:::-;-1:-1:-1;;;;;357:13316:27;4022:27;;357:13316;;-1:-1:-1;;;;;357:13316:27;;;;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;;;:::i;:::-;;;:::i;:::-;2303:62:0;;:::i;:::-;4846:59:27;;357:13316;4962:14;357:13316;4944:15;;:32;:67;:32;;;:15;;:67;5039:27;357:13316;5039:15;357:13316;5039:27;:::i;:::-;:15;357:13316;;;;;;;;;;;;;;;;;;;;;;;;;;;5132:190;;357:13316;;;;5132:190;;357:13316;;;;5132:190;;357:13316;;;5132:190;;;357:13316;;;;5105:8;357:13316;-1:-1:-1;;;357:13316:27;;;;;;;;;;5105:8;357:13316;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;;357:13316:27;-1:-1:-1;;;;;357:13316:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4944:67;;;4846:59;;;:::i;:::-;;;357:13316;;;;;;-1:-1:-1;;357:13316:27;;;;;2599:30;357:13316;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;2362:26;357:13316;2362:26;;;;;;357:13316;2362:26;;:::i;:::-;357:13316;;;;;;;;;2362:26;357:13316;2362:26;;357:13316;2362:26;;;;357:13316;;2362:26;;;357:13316;2362:26;;357:13316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;2223:27;357:13316;;;;;;;;;;;;;-1:-1:-1;;357:13316:27;;;;;;4213:8;357:13316;;;;;2362:26;357:13316;;;;;;2362:26;-1:-1:-1;357:13316:27;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;357:13316:27;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;357:13316:27;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;357:13316:27;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;7122:315::-;7211:14;357:13316;7192:15;;:33;;7188:72;;7374:48;:56;357:13316;7312:12;357:13316;7192:15;;7294:30;:63;:30;;;7192:15;7391:30;7192:15;7294:63;;7374:15;357:13316;7391:30;;:::i;:::-;7374:48;;:::i;:::-;7423:7;357:13316;7374:56;;:::i;:::-;7122:315;:::o;7294:63::-;7391:30;7294:63;;;;7188:72;7241:8;357:13316;7241:8;:::o;357:13316::-;;;;;;;:::o;:::-;;;;;;;;;;;;8219:856;8294:14;8219:856;8294:14;:::i;:::-;357:13316;8361:12;357:13316;8343:15;;:30;:63;:30;;;:15;;:63;8319:87;8438:24;;;;357:13316;;;8421:41;;;;8417:112;;8343:63;8558:18;;;;357:13316;8591:13;;8587:104;;8927:21;8793:59;:43;:27;8723:38;357:13316;;8723:38;;:::i;:::-;8438:24;357:13316;8793:27;;:::i;:::-;8821:15;;;357:13316;8793:43;;:::i;:::-;8837:15;357:13316;8793:59;;:::i;:::-;8927:21;;357:13316;;;;-1:-1:-1;;;357:13316:27;;;;;;-1:-1:-1;;;357:13316:27;;;;;;;8927:47;8949:25;;;;:::i;:::-;8927:47;;:::i;:::-;357:13316;;;8219:856::o;8587:104::-;357:13316;;;8674:7::o;8417:112::-;8478:40;-1:-1:-1;8417:112:27;;;8343:63;;;7517:175;7578:8;357:13316;7622:1;7625:12;;;;;;7517:175;;:::o;7639:5::-;7671:3;;357:13316;7671:3;;:::i;:::-;357:13316;7608:15;;6009:825;;6119:14;;;:::i;:::-;357:13316;;-1:-1:-1;357:13316:27;6167:8;357:13316;;;-1:-1:-1;357:13316:27;6167:21;357:13316;;;;;;-1:-1:-1;357:13316:27;;;;-1:-1:-1;357:13316:27;6225:21;;;357:13316;6276:18;;;;357:13316;6361:24;;;;357:13316;6343:15;;:42;:59;;;6009:825;6339:423;;6009:825;357:13316;;;6812:15;-1:-1:-1;;;6778:28:27;:49;357:13316;;;6778:28;:::i;:::-;357:13316;6812:15;;357:13316;6778:49;;:::i;6339:423::-;6615:59;357:13316;6643:15;6615:27;6541:38;6615:43;357:13316;6460:12;357:13316;6343:15;;6442:30;:63;:30;;;6343:15;;6541:38;:::i;6615:27::-;6643:15;;357:13316;6615:43;;:::i;:59::-;357:13316;-1:-1:-1;;;357:13316:27;;;;;;-1:-1:-1;;;357:13316:27;;;;;;;6778:28;6707:44;-1:-1:-1;;;6725:25:27;;6812:15;6725:25;6778:49;6725:25;;:::i;6707:44::-;6339:423;;;;6442:63;6541:38;:::i;6343:59::-;6389:13;;;;6343:59;;357:13316;;;;;;;;;;;;;;;;;;:::o;3405:215:0:-;-1:-1:-1;;;;;357:13316:27;3489:22:0;;3485:91;;-1:-1:-1;;;;;;;;;;;357:13316:27;;-1:-1:-1;;;;;;357:13316:27;;;;;;;-1:-1:-1;;;;;357:13316:27;3975:40:0;-1:-1:-1;;3975:40:0;3405:215::o;3485:91::-;3534:31;;;3509:1;3534:31;3509:1;3534:31;357:13316:27;;3509:1:0;3534:31;357:13316:27;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;2658:162:0:-;-1:-1:-1;;;;;;;;;;;357:13316:27;-1:-1:-1;;;;;357:13316:27;966:10:2;2717:23:0;2713:101;;2658:162::o;2713:101::-;2763:40;;;-1:-1:-1;2763:40:0;966:10:2;2763:40:0;357:13316:27;;-1:-1:-1;2763:40:0;12882:135:27;12954:5;357:13316;;;;-1:-1:-1;;;12954:28:27;;-1:-1:-1;;;;;357:13316:27;;;12954:28;;;357:13316;;;;;;;;;12954:28;;357:13316;;;;;;12954:5;357:13316;12954:28;;;;;;;12992:18;12954:28;;;12882:135;357:13316;12992:18;357:13316;12992:18;:::i;:::-;;357:13316;12882:135::o;12954:28::-;;;;;;;;;;;;;:::i;:::-;;;1219:160:12;357:13316:27;;-1:-1:-1;;;1328:43:12;;;;-1:-1:-1;;;;;357:13316:27;;;;1328:43:12;;;357:13316:27;;;;;;;;;1328:43:12;;;;;;357:13316:27;;1328:43:12;:::i;:::-;;:::i;:::-;1219:160::o;1618:188::-;357:13316:27;;-1:-1:-1;;;1745:53:12;;;;-1:-1:-1;;;;;357:13316:27;;;1745:53:12;;;357:13316:27;;;;;;;;;;;;;;;;;1745:53:12;;;;;;;357:13316:27;1745:53:12;:::i;7686:720::-;;-1:-1:-1;7823:421:12;7686:720;7823:421;;;;;;;;;;;;-1:-1:-1;7823:421:12;;8258:15;;-1:-1:-1;;;;;;357:13316:27;;8276:26:12;:31;8258:68;8254:146;;7686:720;:::o;8254:146::-;-1:-1:-1;;;;8349:40:12;;;-1:-1:-1;;;;;357:13316:27;;;;8349:40:12;357:13316:27;;;8349:40:12;8258:68;8325:1;8310:16;;8258:68;;7084:141:1;357:13316:27;-1:-1:-1;;;;;;;;;;;357:13316:27;;;;7150:18:1;7146:73;;7084:141::o;7146:73::-;7191:17;;;-1:-1:-1;7191:17:1;;-1:-1:-1;7191:17:1"},"methodIdentifiers":{"add(uint256,address,bool)":"1eaaa045","compound(uint256)":"aa5f7e26","deposit(uint256,uint256)":"e2bbb158","deposited(uint256,address)":"a2383106","emergencyWithdraw(uint256)":"5312ea8e","endTimestamp()":"a85adeab","erc20()":"785e9e86","fund(uint256)":"ca1d209d","getPendingAndDepositedForUsers(address[],uint256)":"fcfc1b14","initialize(address,uint256,uint256,address)":"9e3d87cd","massUpdatePools()":"630b5ba1","owner()":"8da5cb5b","paidOut()":"5c76ca2d","pending(uint256,address)":"e4c75c27","poolInfo(uint256)":"1526fe27","poolLength()":"081e3eda","renounceOwnership()":"715018a6","rewardPerSecond()":"8f10369a","salesFactory()":"ed95f07f","set(uint256,uint256,bool)":"64482f79","setSalesFactory(address)":"3dfcb861","setTokensUnlockTime(uint256,address,uint256)":"e6f04acc","startTimestamp()":"e6fd48bc","totalAllocPoint()":"17caf6f1","totalPending()":"3f90916a","totalRewards()":"0e15561a","transferOwnership(address)":"f2fde38b","updatePool(uint256)":"51eb05a6","userInfo(uint256,address)":"93f1a40b","withdraw(uint256,uint256)":"441a3e70"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountAdded\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDeposited\",\"type\":\"uint256\"}],\"name\":\"CompoundedEarnings\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_lpToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"compound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"deposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"getPendingAndDepositedForUsers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardPerSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_salesFactory\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paidOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accERC20PerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposits\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"salesFactory\",\"outputs\":[{\"internalType\":\"contract ISalesFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_salesFactory\",\"type\":\"address\"}],\"name\":\"setSalesFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensUnlockTime\",\"type\":\"uint256\"}],\"name\":\"setTokensUnlockTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensUnlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sales/AllocationStaking.sol\":\"AllocationStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/interfaces/ISalesFactory.sol\":{\"keccak256\":\"0x3edbcf61a2b14b34b0135456b1bf1a7d4d4ca9a16964eaf7b7f94b30fa55edb7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://263ef46c15246701be0c6bdc278c6d7aa5e11d45ec9e72be98704ba73c520fbd\",\"dweb:/ipfs/QmQp5t5m4ZQPz4v4QYDAt5vDxB5z1jsyCdMopupmsiFRTc\"]},\"contracts/sales/AllocationStaking.sol\":{\"keccak256\":\"0xdfb4bb837f1de3f6f0932dd7de8fb6ed4d0905d0666ae157ad8771cc4f1f3584\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://321bdf81e6dfb1ae335b312429df07b686ea5ddc75b2ca481ac355616455a35a\",\"dweb:/ipfs/QmPnGikujgPdBtTijuX48MLdp8Apo4G7kSAeYbDbjuDnQa\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":8209,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"erc20","offset":0,"slot":"0","type":"t_contract(IERC20)1466"},{"astId":8211,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"paidOut","offset":0,"slot":"1","type":"t_uint256"},{"astId":8213,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"rewardPerSecond","offset":0,"slot":"2","type":"t_uint256"},{"astId":8215,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"totalRewards","offset":0,"slot":"3","type":"t_uint256"},{"astId":8218,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"salesFactory","offset":0,"slot":"4","type":"t_contract(ISalesFactory)8171"},{"astId":8222,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"poolInfo","offset":0,"slot":"5","type":"t_array(t_struct(PoolInfo)8206_storage)dyn_storage"},{"astId":8229,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"userInfo","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8194_storage))"},{"astId":8231,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"totalAllocPoint","offset":0,"slot":"7","type":"t_uint256"},{"astId":8233,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"startTimestamp","offset":0,"slot":"8","type":"t_uint256"},{"astId":8235,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"endTimestamp","offset":0,"slot":"9","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_struct(PoolInfo)8206_storage)dyn_storage":{"base":"t_struct(PoolInfo)8206_storage","encoding":"dynamic_array","label":"struct AllocationStaking.PoolInfo[]","numberOfBytes":"32"},"t_contract(IERC20)1466":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(ISalesFactory)8171":{"encoding":"inplace","label":"contract ISalesFactory","numberOfBytes":"20"},"t_mapping(t_address,t_struct(UserInfo)8194_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct AllocationStaking.UserInfo)","numberOfBytes":"32","value":"t_struct(UserInfo)8194_storage"},"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)8194_storage))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => struct AllocationStaking.UserInfo))","numberOfBytes":"32","value":"t_mapping(t_address,t_struct(UserInfo)8194_storage)"},"t_struct(PoolInfo)8206_storage":{"encoding":"inplace","label":"struct AllocationStaking.PoolInfo","members":[{"astId":8197,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"lpToken","offset":0,"slot":"0","type":"t_contract(IERC20)1466"},{"astId":8199,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"allocPoint","offset":0,"slot":"1","type":"t_uint256"},{"astId":8201,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"lastRewardTimestamp","offset":0,"slot":"2","type":"t_uint256"},{"astId":8203,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"accERC20PerShare","offset":0,"slot":"3","type":"t_uint256"},{"astId":8205,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"totalDeposits","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_struct(UserInfo)8194_storage":{"encoding":"inplace","label":"struct AllocationStaking.UserInfo","members":[{"astId":8186,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"amount","offset":0,"slot":"0","type":"t_uint256"},{"astId":8188,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"rewardDebt","offset":0,"slot":"1","type":"t_uint256"},{"astId":8190,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"tokensUnlockTime","offset":0,"slot":"2","type":"t_uint256"},{"astId":8193,"contract":"contracts/sales/AllocationStaking.sol:AllocationStaking","label":"salesRegistered","offset":0,"slot":"3","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"128"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/sales/C2NSale.sol":{"C2NSale":{"abi":[{"inputs":[{"internalType":"address","name":"_admin","type":"address"},{"internalType":"address","name":"_allocationStaking","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"SafeERC20FailedOperation","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"maxParticipation","type":"uint256"}],"name":"MaxParticipationSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"registrationTimeStarts","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"registrationTimeEnds","type":"uint256"}],"name":"RegistrationTimeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"saleOwner","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenPriceInETH","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOfTokensToSell","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"saleEnd","type":"uint256"}],"name":"SaleCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"startTime","type":"uint256"}],"name":"StartTimeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"TokenPriceSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensSold","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokensWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"}],"name":"UserRegistered","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"contract IAdmin","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allocationStakingContract","outputs":[{"internalType":"contract IAllocationStaking","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"checkParticipationSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"user","type":"address"}],"name":"checkRegistrationSignature","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timeToAdd","type":"uint256"}],"name":"extendRegistrationPeriod","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"contract ISalesFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumberOfRegisteredUsers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getParticipation","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bool[]","name":"","type":"bool[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"getParticipationSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getVestingInfo","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isParticipated","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isRegistered","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxVestingTimeShift","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numberOfParticipants","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"participate","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"portionVestingPrecision","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"timeToShift","type":"uint256"}],"name":"postponeSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"pid","type":"uint256"}],"name":"registerForSale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"registration","outputs":[{"internalType":"uint256","name":"registrationTimeStarts","type":"uint256"},{"internalType":"uint256","name":"registrationTimeEnds","type":"uint256"},{"internalType":"uint256","name":"numberOfRegistrants","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sale","outputs":[{"internalType":"contract IERC20","name":"token","type":"address"},{"internalType":"bool","name":"isCreated","type":"bool"},{"internalType":"bool","name":"earningsWithdrawn","type":"bool"},{"internalType":"bool","name":"leftoverWithdrawn","type":"bool"},{"internalType":"bool","name":"tokensDeposited","type":"bool"},{"internalType":"address","name":"saleOwner","type":"address"},{"internalType":"uint256","name":"tokenPriceInETH","type":"uint256"},{"internalType":"uint256","name":"amountOfTokensToSell","type":"uint256"},{"internalType":"uint256","name":"totalTokensSold","type":"uint256"},{"internalType":"uint256","name":"totalETHRaised","type":"uint256"},{"internalType":"uint256","name":"saleStart","type":"uint256"},{"internalType":"uint256","name":"saleEnd","type":"uint256"},{"internalType":"uint256","name":"tokensUnlockTime","type":"uint256"},{"internalType":"uint256","name":"maxParticipation","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"cap","type":"uint256"}],"name":"setCap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_registrationTimeStarts","type":"uint256"},{"internalType":"uint256","name":"_registrationTimeEnds","type":"uint256"}],"name":"setRegistrationTime","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"address","name":"_saleOwner","type":"address"},{"internalType":"uint256","name":"_tokenPriceInETH","type":"uint256"},{"internalType":"uint256","name":"_amountOfTokensToSell","type":"uint256"},{"internalType":"uint256","name":"_saleEnd","type":"uint256"},{"internalType":"uint256","name":"_tokensUnlockTime","type":"uint256"},{"internalType":"uint256","name":"_portionVestingPrecision","type":"uint256"},{"internalType":"uint256","name":"_maxParticipation","type":"uint256"}],"name":"setSaleParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"starTime","type":"uint256"}],"name":"setSaleStart","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"saleToken","type":"address"}],"name":"setSaleToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"_unlockingTimes","type":"uint256[]"},{"internalType":"uint256[]","name":"_percents","type":"uint256[]"},{"internalType":"uint256","name":"_maxVestingTimeShift","type":"uint256"}],"name":"setVestingParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"timeToShift","type":"uint256"}],"name":"shiftVestingUnlockingTimes","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"name":"updateTokenPriceInETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userToParticipation","outputs":[{"internalType":"uint256","name":"amountBought","type":"uint256"},{"internalType":"uint256","name":"amountETHPaid","type":"uint256"},{"internalType":"uint256","name":"timeParticipated","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"vestingPercentPerPortion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"vestingPortionsUnlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawEarnings","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawEarningsAndLeftover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawLeftover","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"portionIds","type":"uint256[]"}],"name":"withdrawMultiplePortions","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"portionId","type":"uint256"}],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":194,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60803460a757601f61322d38819003918201601f19168301916001600160401b0383118484101760ac57808492604094855283398101031260a757604b602060458360c2565b920160c2565b6001600160a01b0390911690811560a7576001600160a01b031690811560a757600280546001600160a01b0319908116929092179055600180548216331790556000805490911691909117905560405161315790816100d68239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360a75756fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163059ea17214612732575080631f11cb1e146126545780632a7c35de146126365780632f181f54146123e8578063315a095d14612261578063443bd1d01461222f57806347786d3714612153578063482a5dc7146121395780634897f4c31461210d5780635164d8711461203d5780635e7464f614611fe35780636ad1fe0214611f2d578063718af7e614611da3578063735deffa14611d545780637417040e14611d365780637843990a14611c705780637c4b414d14611b9e578063927f6aee14611b73578063931d81c9146115b8578063a29f481c14611522578063a525d237146114fc578063ab7589b5146114de578063abee6927146113b7578063b73c6ce914611389578063c3c5a5471461134a578063c45a015514611321578063c4fbe09114611076578063cad925ef14610989578063ccc171f51461096b578063cf5b8d4b1461092c578063d937d45614610694578063da4d4fbf1461065b578063dc25a30014610575578063e099cf64146103f8578063e9d8479e14610222578063f1ef7ff2146101e85763f851a4400361000f57346101e557806003193601126101e5576002546040516001600160a01b039091168152602090f35b80fd5b50346101e55760203660031901126101e557600435906014548210156101e557602061021383612884565b90549060031b1c604051908152f35b50346101e557610231366128e8565b90600d54421015806103ec575b156103a75761024e903390612be1565b1561036e57338252601260205260ff60408320541661032957338252601260205260408220805460ff191660011790558154600a546001600160a01b0391909116918391833b1561032557606483928360405196879485936339bc12b360e21b8552600485015233602485015260448401525af1801561031857610308575b6102d8600f54612d42565b600f557f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b96020604051338152a180f35b61031191612788565b38816102cd565b50604051903d90823e3d90fd5b8280fd5b60405162461bcd60e51b815260206004820152601c60248201527f557365722063616e206e6f742072656769737465722074776963652e000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e206761746520697320636c6f7365642e000000006044820152606490fd5b50600e5442111561023e565b50346101e55760403660031901126101e5576004356024356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa801561056a5761044f91859161053b575b506129db565b60ff60035460a01c161561032557600d54610325574282101580610532575b1561032557600a5481101561032557600954806104c2575b50816040917faf6e91c17885891414abbe7fa95074976b3e429980b0d8790034468e69650dd993600d5580600e5582519182526020820152a180f35b8110156104cf5738610486565b60405162461bcd60e51b815260206004820152603560248201527f726567697374726174696f6e54696d65456e6473203e3d2073616c652e73616c6044820152741954dd185c9d081a5cc81b9bdd08185b1b1bddd959605a1b6064820152608490fd5b5081811161046e565b61055d915060203d602011610563575b6105558183612788565b8101906129c3565b38610449565b503d61054b565b6040513d86823e3d90fd5b50346101e557806003193601126101e5576040516014548082528160208101601485526020852092855b8181106106425750506105b492500382612788565b60405160158054808352908452909260208401917f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475915b81811061062c5761061a856106288861060681890382612788565b60405193849360408552604085019061298f565b90838203602085015261298f565b0390f35b82548452602090930192600192830192016105eb565b845483526001948501948694506020909301920161059f565b50346101e557806003193601126101e55761068160018060a01b03600454163314612c5b565b610689612e99565b610691612ded565b80f35b50346101e55760603660031901126101e55760043567ffffffffffffffff8111610928576106c6903690600401612932565b60243567ffffffffffffffff8111610325576106e6903690600401612932565b600254604051630935e01b60e21b815233600482015260443591602090829060249082906001600160a01b03165afa801561091d5761072b91869161053b57506129db565b6015541580610913575b1561090f57825182510361090f57601654156108a45762278d00811161085f5760175582805b835185101561080f5761076e8585612d51565b51601454600160401b8110156107fb57906107948260016107ad940160145560146128d0565b90919082549060031b91821b91600019901b1916179055565b6107b78584612d51565b51601554600160401b8110156107fb57916107e26107f39261079485600180970160155560156128d0565b6107ec8786612d51565b5190612a76565b94019361075b565b634e487b7160e01b84526041600452602484fd5b6016540361081a5780f35b60405162461bcd60e51b815260206004820152601b60248201527f50657263656e7420646973747269627574696f6e2069737375652e00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f4d6178696d616c20736869667420697320333020646179732e000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152603960248201527f53616665677561726420666f72206d616b696e6720737572652073657453616c60448201527f65506172616d73206765742066697273742063616c6c65642e000000000000006064820152608490fd5b8380fd5b5060145415610735565b6040513d87823e3d90fd5b5080fd5b50346101e55760203660031901126101e55760209060ff906040906001600160a01b03610957612812565b168152601384522054166040519015158152f35b50346101e557806003193601126101e5576020601754604051908152f35b50346101e55760203660031901126101e5576001600160a01b036109ab612812565b16815260116020526040812090604051906109c582612756565b8254825260018301549060208301918252600360028501549460408501958652019260405190818260208754928381520180978652602086209286905b80601f830110610e8e57610b1d945491818110610e78575b818110610e5f575b818110610e46575b818110610e2d575b818110610e15575b818110610dfc575b818110610de3575b818110610dca575b818110610db1575b818110610d98575b818110610d7f575b818110610d66575b818110610d4d575b818110610d34575b818110610d1b575b818110610d02575b818110610ce9575b818110610cd0575b818110610cb7575b818110610c9e575b818110610c85575b818110610c6c575b818110610c53575b818110610c3a575b818110610c21575b818110610c08575b818110610bef575b818110610bd6575b818110610bbd575b818110610ba4575b818110610b8b575b10610b7b575b5097969593970387612788565b8560608201525190519351946040519586956080870193875260208701526040860152608060608601525180915260a0840192915b818110610b60575050500390f35b82511515845285945060209384019390920191600101610b52565b60f81c1515815260200138610b10565b92602060019160ff8560f01c1615158152019301610b0a565b92602060019160ff8560e81c1615158152019301610b02565b92602060019160ff8560e01c1615158152019301610afa565b92602060019160ff8560d81c1615158152019301610af2565b92602060019160ff8560d01c1615158152019301610aea565b92602060019160ff8560c81c1615158152019301610ae2565b92602060019160ff8560c01c1615158152019301610ada565b92602060019160ff8560b81c1615158152019301610ad2565b92602060019160ff8560b01c1615158152019301610aca565b92602060019160ff8560a81c1615158152019301610ac2565b92602060019160ff8560a01c1615158152019301610aba565b92602060019160ff8560981c1615158152019301610ab2565b92602060019160ff8560901c1615158152019301610aaa565b92602060019160ff8560881c1615158152019301610aa2565b92602060019160ff8560801c1615158152019301610a9a565b92602060019160ff8560781c1615158152019301610a92565b92602060019160ff8560701c1615158152019301610a8a565b92602060019160ff8560681c1615158152019301610a82565b92602060019160ff8560601c1615158152019301610a7a565b92602060019160ff8560581c1615158152019301610a72565b92602060019160ff8560501c1615158152019301610a6a565b92602060019160ff8560481c1615158152019301610a62565b92602060019160ff8560401c1615158152019301610a5a565b92602060019160ff8560381c1615158152019301610a52565b92602060019160ff8560301c1615158152019301610a4a565b92602060019160ff8560281c1615158152019301610a42565b92602060019160ff85831c1615158152019301610a3a565b92602060019160ff8560181c1615158152019301610a32565b92602060019160ff8560101c1615158152019301610a2a565b92602060019160ff8560081c1615158152019301610a22565b92602060019160ff851615158152019301610a1a565b916020919350610400600191865460ff81161515825260ff8160081c1615158583015260ff8160101c161515604083015260ff8160181c161515606083015260ff81861c161515608083015260ff8160281c16151560a083015260ff8160301c16151560c083015260ff8160381c16151560e083015260ff8160401c16151561010083015260ff8160481c16151561012083015260ff8160501c16151561014083015260ff8160581c16151561016083015260ff8160601c16151561018083015260ff8160681c1615156101a083015260ff8160701c1615156101c083015260ff8160781c1615156101e083015260ff8160801c16151561020083015260ff8160881c16151561022083015260ff8160901c16151561024083015260ff8160981c16151561026083015260ff8160a01c16151561028083015260ff8160a81c1615156102a083015260ff8160b01c1615156102c083015260ff8160b81c1615156102e083015260ff8160c01c16151561030083015260ff8160c81c16151561032083015260ff8160d01c16151561034083015260ff8160d81c16151561036083015260ff8160e01c16151561038083015260ff8160e81c1615156103a083015260ff8160f01c1615156103c083015260f81c15156103e0820152019401920185929391610a02565b50346101e5576101003660031901126101e557611091612812565b611099612828565b6044356064356084359060a4359260c43560e4356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa8015611316576110eb918b9161053b57506129db565b6003549660ff8860a01c166112c1576001600160a01b0316958615611264578315158061125b575b80611252575b80611249575b80611240575b156111fb57606483106111bd577f2cd2dfcdeb2b58c4b80527e9df5e12da537fa4f6c958a4fb623a83ab74eeab6398608098600160a01b9160018060a01b0316906affffffffffffffffffffff60a81b161717600355866001600160601b0360a01b6004541617600455836005558460065585600a55600b55600c55601655604051938452602084015260408301526060820152a180f35b60405162461bcd60e51b8152602060048201526016602482015275053686f756c64206265206174206c65617374203130360541b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f73657453616c65506172616d733a2042616420696e70757400000000000000006044820152606490fd5b50811515611125565b5042811161111f565b50428611611119565b50841515611113565b60405162461bcd60e51b815260206004820152602f60248201527f73657453616c65506172616d733a2053616c65206f776e65722061646472657360448201526e399031b0b7103737ba10313290181760891b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f73657453616c65506172616d733a2053616c6520697320616c726561647920636044820152663932b0ba32b21760c91b6064820152608490fd5b6040513d8c823e3d90fd5b50346101e557806003193601126101e5576001546040516001600160a01b039091168152602090f35b50346101e55760203660031901126101e55760209060ff906040906001600160a01b03611375612812565b168152601284522054166040519015158152f35b50346101e557806003193601126101e5576113af60018060a01b03600454163314612c5b565b610691612e99565b50346101e55760203660031901126101e557600435906024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa9081156114d3579061140d91839161053b57506129db565b811515806114c8575b1561145d5780601755805b601454811015611459578061145361144a8561143e600195612884565b90549060031b1c612a76565b61079483612884565b01611421565b5080f35b60405162461bcd60e51b815260206004820152603b60248201527f5368696674206d757374206265206e6f6e7a65726f20616e6420736d616c6c6560448201527f72207468616e206d617856657374696e6754696d6553686966742e00000000006064820152608490fd5b506017548210611416565b6040513d84823e3d90fd5b50346101e557806003193601126101e5576020600f54604051908152f35b50346101e557806003193601126101e55761068960018060a01b03600454163314612c5b565b50346101e55760203660031901126101e55761153c612812565b600254604051630935e01b60e21b815233600482015290602090829060249082906001600160a01b03165afa80156115ad5761157e91849161053b57506129db565b600354906001600160a01b038216610325576001600160a01b03166001600160a01b0319919091161760035580f35b6040513d85823e3d90fd5b506115c2366128e8565b90600c548211611b1a57338352601260205260ff60408420541615611ad557816115ed913390612aec565b15611a815760095442101580611a76575b15611a3257338252601360205260ff6040832054166119ed573233036119a85760035460405163313ce56760e01b815290602090829060049082906001600160a01b03165afa9081156115ad57839161196a575b5061166b61166560ff6116749316612ca7565b34612ab9565b60055490612acc565b9081156119305781116118ec5761168d81600754612a76565b60075561169c34600854612a76565b6008556014546116ab8161291a565b906116b96040519283612788565b8082526116c8601f199161291a565b0136602083013760036040516116dd81612756565b838152602081013481526040820190428252606083019485523387526011602052604087209251835551600183015551600282015501905180519067ffffffffffffffff82116118d857600160401b82116118d857825482845580831061187f575b50602001918452602084208160051c91855b83811061183a5750601f1981169003806117cf575b857f57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e6117c987338452601360205260408420600160ff198254161790556117ae601054612d42565b60105560408051338152602081019290925290918291820190565b0390a180f35b928593865b81811061180b5750505001556117c97f57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e3880611766565b90919460206118306001928489511515919060ff809160031b9316831b921b19161790565b96019291016117d4565b86875b60208110611852575083820155600101611751565b959060206118766001928985511515919060ff809160031b9316831b921b19161790565b9201960161183d565b83865260208620601f80850160051c8201920160051c0190601f8416806118bb575b505b8181106118b0575061173f565b8681556001016118a3565b6000198201908154906000199060200360031b1c169055386118a1565b634e487b7160e01b85526041600452602485fd5b606460405162461bcd60e51b815260206004820152602060248201527f547279696e6720746f20627579206d6f7265207468616e20616c6c6f7765642e6044820152fd5b60405162461bcd60e51b815260206004820152601260248201527143616e277420627579203020746f6b656e7360701b6044820152606490fd5b90506020813d6020116119a0575b8161198560209383612788565b81010312610325575160ff811681036103255761166b611652565b3d9150611978565b60405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792064697265637420636f6e74726163742063616c6c732e00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f557365722063616e207061727469636970617465206f6e6c79206f6e63652e006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f73616c65206469646e2774207374617274206f72206974277320656e6465642e6044820152fd5b50600a5442106115fe565b60405162461bcd60e51b815260206004820152602660248201527f496e76616c6964207369676e61747572652e20566572696669636174696f6e2060448201526519985a5b195960d21b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4e6f74207265676973746572656420666f7220746869732073616c652e0000006044820152606490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4f766572666c6f77696e67206d6178696d616c2070617274696369706174696f60448201526a37103337b91039b0b6329760a91b6064820152608490fd5b50346101e55760203660031901126101e557600435906015548210156101e5576020610213836128b5565b50346101e557806003193601126101e557611bc460018060a01b03600454163314612c5b565b60035460ff8160b81c16611c2b5760ff60b81b198116600160b81b176003556006546040516323b872dd60e01b602082015233602482015230604482015260648082019290925290815261069191611c1d608483612788565b6001600160a01b0316612f79565b60405162461bcd60e51b815260206004820152601d60248201527f4465706f7369742063616e20626520646f6e65206f6e6c79206f6e63650000006044820152606490fd5b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad57611cc391849161053b57506129db565b8015611cfb576020817f4b59d61d9ffdc3db926d0ce7e06ebabb6bd1bf9dcdae262667e48be36822721692600555604051908152a180f35b60405162461bcd60e51b8152602060048201526013602482015272283934b1b29031b0b7103737ba10313290181760691b6044820152606490fd5b50346101e557806003193601126101e5576020601054604051908152f35b50346101e55760403660031901126101e5576004359067ffffffffffffffff82116101e5576020611d99611d8b36600486016127c6565b611d93612828565b90612be1565b6040519015158152f35b50346101e55760203660031901126101e55760043567ffffffffffffffff8111610928573660238201121561092857806004013567ffffffffffffffff8111610325573660248260051b8401011161032557908233845260116020526040842091849060038401915b85811015611ed05760248160051b83010135601554811015611ecc5760ff611e348286612a99565b90549060031b1c161580611eb3575b611e51575b50600101611e0c565b60019194611ea6611e9d83611e83611e6c611eac968a612a99565b819291549060031b9060ff6001831b921b19161790565b9055611e908a54916128b5565b90549060031b1c90612ab9565b60165490612acc565b90612a76565b9390611e48565b50611ebd81612884565b90549060031b1c421015611e43565b8780fd5b868480611edb575080f35b6117c981611f157f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b933360018060a01b0360035416612d65565b60408051338152602081019290925290918291820190565b50346101e557806003193601126101e5576101c060035460018060a01b036004541660055460065460075460085460095491600a5493600b5495600c549760ff6040519a60018060a01b0381168c52818160a01c16151560208d0152818160a81c16151560408d0152818160b01c16151560608d015260b81c16151560808b015260a08a015260c089015260e08801526101008701526101208601526101408501526101608401526101808301526101a0820152f35b50346101e55760203660031901126101e5576040906001600160a01b03612008612812565b168152601160205220805461062860026001840154930154604051938493846040919493926060820195825260208201520152565b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad5761209091849161053b57506129db565b600e549061209e8183612a76565b60095411156120b6576120b091612a76565b600e5580f35b60405162461bcd60e51b815260206004820152602960248201527f526567697374726174696f6e20706572696f64206f766572666c6f777320736160448201526836329039ba30b93a1760b91b6064820152608490fd5b50346101e55760206121276121213661283e565b91612b66565b6040516001600160a01b039091168152f35b50346101e5576020611d9961214d3661283e565b91612aec565b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad576121a691849161053b57506129db565b6121b36009544210612a32565b80156121eb576020817f37cfb0744bdb923d0300a0c37fac13cfec5fc2ee313cb9b217d284122980bada92600c55604051908152a180f35b606460405162461bcd60e51b815260206004820152602060248201527f43616e277420736574206d61782070617274696369706174696f6e20746f20306044820152fd5b50346101e557806003193601126101e557600d54600e54600f5460408051938452602084019290925290820152606090f35b50346101e55760203660031901126101e557600435600b5442106123a45760155481101561235f57338252601160205260408220600381019160ff6122a68285612a99565b90549060031b1c161580612346575b156122e357611e90611e9d926122d1611e6c846122da97612a99565b905554916128b5565b80611edb575080f35b60405162461bcd60e51b815260206004820152603560248201527f546f6b656e7320616c72656164792077697468647261776e206f7220706f727460448201527434b7b7103737ba103ab73637b1b5b2b2103cb2ba1760591b6064820152608490fd5b5061235081612884565b4291549060031b1c11156122b5565b60405162461bcd60e51b815260206004820152601860248201527f506f7274696f6e206964206f7574206f662072616e67652e00000000000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f546f6b656e732063616e206e6f742062652077697468647261776e207965742e6044820152fd5b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad5761243b91849161053b57506129db565b60ff60035460a01c16156125fa576009546125a657600e5481111561254457600a548110156124ee5742811061249d576020817faad53c4362ef2fe5a5390cc046e71fd8423a0a8dceebc156ac9bbcd15997eec292600955604051908152a180f35b60405162461bcd60e51b815260206004820152602360248201527f73746172742074696d652073686f756c6420626520696e20746865206675747560448201526239329760e91b6064820152608490fd5b60405162461bcd60e51b815260206004820152602860248201527f73746172742074696d652073686f756c64206c657373207468616e2073616c65604482015267456e642074696d6560c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152603460248201527f73746172742074696d652073686f756c642067726561746572207468616e207260448201527332b3b4b9ba3930ba34b7b72a34b6b2a2b732399760611b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f73657453616c6553746172743a207374617254696d652069732073657420616c6044820152653932b0b23c9760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601460248201527339b0b6329034b9903737ba1031b932b0ba32b21760611b6044820152606490fd5b50346101e557806003193601126101e5576020601654604051908152f35b50346101e55760203660031901126101e5576024600435602060018060a01b036002541660405193848092630935e01b60e21b82523360048301525afa9182156115ad576126cc926126ac91859161053b57506129db565b6126c3816009546126be814210612a32565b612a76565b80600955612a76565b600a5411156126d85780f35b60405162461bcd60e51b815260206004820152602c60248201527f53746172742074696d652063616e206e6f74206265206772656174657220746860448201526b30b71032b732103a34b6b29760a11b6064820152608490fd5b90503461092857816003193601126109285790546001600160a01b03168152602090f35b6080810190811067ffffffffffffffff82111761277257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761277257604052565b67ffffffffffffffff811161277257601f01601f191660200190565b81601f8201121561280d578035906127dd826127aa565b926127eb6040519485612788565b8284526020838301011161280d57816000926020809301838601378301015290565b600080fd5b600435906001600160a01b038216820361280d57565b602435906001600160a01b038216820361280d57565b606060031982011261280d576004359067ffffffffffffffff821161280d57612869916004016127c6565b906024356001600160a01b038116810361280d579060443590565b60145481101561289f57601460005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60155481101561289f57601560005260206000200190600090565b805482101561289f5760005260206000200190600090565b604060031982011261280d576004359067ffffffffffffffff821161280d57612913916004016127c6565b9060243590565b67ffffffffffffffff81116127725760051b60200190565b9080601f8301121561280d5781356129498161291a565b926129576040519485612788565b81845260208085019260051b82010192831161280d57602001905b82821061297f5750505090565b8135815260209182019101612972565b906020808351928381520192019060005b8181106129ad5750505090565b82518452602093840193909201916001016129a0565b9081602091031261280d5751801515810361280d5790565b156129e257565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f604482015261371760f11b6064820152608490fd5b15612a3957565b60405162461bcd60e51b815260206004820152601560248201527439b0b6329030b63932b0b23c9039ba30b93a32b21760591b6044820152606490fd5b91908201809211612a8357565b634e487b7160e01b600052601160045260246000fd5b919091805483101561289f57600052601f60206000208360051c01921690565b81810292918115918404141715612a8357565b8115612ad6570490565b634e487b7160e01b600052601260045260246000fd5b6002546001600160a01b031692602092612b0592612b66565b604051630935e01b60e21b81526001600160a01b03909116600482015291829060249082905afa908115612b5a57600091612b3e575090565b612b57915060203d602011610563576105558183612788565b90565b6040513d6000823e3d90fd5b612bd891612b57936040519060208201926001600160601b03199060601b16835260348201523060601b605482015260488152612ba4606882612788565b5190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c600020612fd4565b90929192613010565b9060405160208101916001600160601b03199060601b1682523060601b603482015260288152612c12604882612788565b5190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c526020612b05612bd8603c6000209360018060a01b036002541694612fd4565b15612c6257565b60405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7953616c654f776e65723a3a20526573747269637465640000000000006044820152606490fd5b8015612d3c5760009060208110600116604e821060011617612d3457600a916001915b60018111612cf7575082600019048211612ce357500290565b634e487b7160e01b81526011600452602490fd5b9280600019048111612d205760018416612d17575b80029260011c612cca565b80920291612d0c565b634e487b7160e01b82526011600452602482fd5b9050600a0a90565b50600190565b6000198114612a835760010190565b805182101561289f5760209160051b010190565b60405163a9059cbb60e01b60208201526001600160a01b03929092166024830152604480830193909352918152612da691612da1606483612788565b612f79565b565b15612daf57565b60405162461bcd60e51b815260206004820152601660248201527539b0b6329034b9903737ba1032b73232b2103cb2ba1760511b6044820152606490fd5b612dfb600a54421015612da8565b60035460ff8160b01c16612e485760ff60b01b198116600160b01b1760035560065460075480820391808311612a835703612e34575050565b612da69133906001600160a01b0316612d65565b60405162461bcd60e51b815260206004820152602360248201527f6f776e65722063616e2774207769746864726177206c6566746f76657220747760448201526269636560e81b6064820152608490fd5b612ea7600a54421015612da8565b60035460ff8160a81c16612f285760ff60a81b1916600160a81b17600355600854604051602091600091829190612ede8582612788565b82815284810190601f1986013683375191335af1903d15612f225760003d91612f06836127aa565b92612f146040519485612788565b83523d92013e5b1561280d57565b50612f1b565b60405162461bcd60e51b815260206004820152602360248201527f6f776e65722063616e2774207769746864726177206561726e696e677320747760448201526269636560e81b6064820152608490fd5b906000602091828151910182855af115612b5a576000513d612fcb57506001600160a01b0381163b155b612faa5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415612fa3565b815191906041830361300557612ffe92506020820151906060604084015193015160001a90613098565b9192909190565b505060009160029190565b9190916004811015613082578061302657509050565b6000600182036130415763f645eedf60e01b60005260046000fd5b506002810361305f578263fce698f760e01b60005260045260246000fd5b909160036000921461306f575050565b6335e2f38360e21b825260045260249150fd5b634e487b7160e01b600052602160045260246000fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411613115579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15612b5a576000516001600160a01b038116156131095790600090600090565b50600090600190600090565b5050506000916003919056fea2646970667358221220f945a3bb5f19698ecafbffc5dd290e615e7304babe1627a49b5093e8bc538ae864736f6c634300081a0033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0xA7 JUMPI PUSH1 0x1F PUSH2 0x322D CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xAC JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xA7 JUMPI PUSH1 0x4B PUSH1 0x20 PUSH1 0x45 DUP4 PUSH1 0xC2 JUMP JUMPDEST SWAP3 ADD PUSH1 0xC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH1 0xA7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH1 0xA7 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x3157 SWAP1 DUP2 PUSH2 0xD6 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH1 0xA7 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x59EA172 EQ PUSH2 0x2732 JUMPI POP DUP1 PUSH4 0x1F11CB1E EQ PUSH2 0x2654 JUMPI DUP1 PUSH4 0x2A7C35DE EQ PUSH2 0x2636 JUMPI DUP1 PUSH4 0x2F181F54 EQ PUSH2 0x23E8 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x2261 JUMPI DUP1 PUSH4 0x443BD1D0 EQ PUSH2 0x222F JUMPI DUP1 PUSH4 0x47786D37 EQ PUSH2 0x2153 JUMPI DUP1 PUSH4 0x482A5DC7 EQ PUSH2 0x2139 JUMPI DUP1 PUSH4 0x4897F4C3 EQ PUSH2 0x210D JUMPI DUP1 PUSH4 0x5164D871 EQ PUSH2 0x203D JUMPI DUP1 PUSH4 0x5E7464F6 EQ PUSH2 0x1FE3 JUMPI DUP1 PUSH4 0x6AD1FE02 EQ PUSH2 0x1F2D JUMPI DUP1 PUSH4 0x718AF7E6 EQ PUSH2 0x1DA3 JUMPI DUP1 PUSH4 0x735DEFFA EQ PUSH2 0x1D54 JUMPI DUP1 PUSH4 0x7417040E EQ PUSH2 0x1D36 JUMPI DUP1 PUSH4 0x7843990A EQ PUSH2 0x1C70 JUMPI DUP1 PUSH4 0x7C4B414D EQ PUSH2 0x1B9E JUMPI DUP1 PUSH4 0x927F6AEE EQ PUSH2 0x1B73 JUMPI DUP1 PUSH4 0x931D81C9 EQ PUSH2 0x15B8 JUMPI DUP1 PUSH4 0xA29F481C EQ PUSH2 0x1522 JUMPI DUP1 PUSH4 0xA525D237 EQ PUSH2 0x14FC JUMPI DUP1 PUSH4 0xAB7589B5 EQ PUSH2 0x14DE JUMPI DUP1 PUSH4 0xABEE6927 EQ PUSH2 0x13B7 JUMPI DUP1 PUSH4 0xB73C6CE9 EQ PUSH2 0x1389 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x134A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1321 JUMPI DUP1 PUSH4 0xC4FBE091 EQ PUSH2 0x1076 JUMPI DUP1 PUSH4 0xCAD925EF EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0xCCC171F5 EQ PUSH2 0x96B JUMPI DUP1 PUSH4 0xCF5B8D4B EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0xD937D456 EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xDA4D4FBF EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xDC25A300 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xE099CF64 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xE9D8479E EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xF1EF7FF2 EQ PUSH2 0x1E8 JUMPI PUSH4 0xF851A440 SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x14 SLOAD DUP3 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x213 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x231 CALLDATASIZE PUSH2 0x28E8 JUMP JUMPDEST SWAP1 PUSH1 0xD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x3EC JUMPI JUMPDEST ISZERO PUSH2 0x3A7 JUMPI PUSH2 0x24E SWAP1 CALLER SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST ISZERO PUSH2 0x36E JUMPI CALLER DUP3 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x329 JUMPI CALLER DUP3 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x325 JUMPI PUSH1 0x64 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x39BC12B3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE CALLER PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x318 JUMPI PUSH2 0x308 JUMPI JUMPDEST PUSH2 0x2D8 PUSH1 0xF SLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH32 0x54DB7A5CB4735E1AAC1F53DB512D3390390BB6637BD30AD4BF9FC98667D9B9B9 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0x311 SWAP2 PUSH2 0x2788 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x2CD JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722063616E206E6F742072656769737465722074776963652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E206761746520697320636C6F7365642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD TIMESTAMP GT ISZERO PUSH2 0x23E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x56A JUMPI PUSH2 0x44F SWAP2 DUP6 SWAP2 PUSH2 0x53B JUMPI JUMPDEST POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x325 JUMPI PUSH1 0xD SLOAD PUSH2 0x325 JUMPI TIMESTAMP DUP3 LT ISZERO DUP1 PUSH2 0x532 JUMPI JUMPDEST ISZERO PUSH2 0x325 JUMPI PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x9 SLOAD DUP1 PUSH2 0x4C2 JUMPI JUMPDEST POP DUP2 PUSH1 0x40 SWAP2 PUSH32 0xAF6E91C17885891414ABBE7FA95074976B3E429980B0D8790034468E69650DD9 SWAP4 PUSH1 0xD SSTORE DUP1 PUSH1 0xE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP2 LT ISZERO PUSH2 0x4CF JUMPI CODESIZE PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726567697374726174696F6E54696D65456E6473203E3D2073616C652E73616C PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1954DD185C9D081A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP2 DUP2 GT PUSH2 0x46E JUMP JUMPDEST PUSH2 0x55D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x563 JUMPI JUMPDEST PUSH2 0x555 DUP2 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29C3 JUMP JUMPDEST CODESIZE PUSH2 0x449 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH1 0x14 SLOAD DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 ADD PUSH1 0x14 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x642 JUMPI POP POP PUSH2 0x5B4 SWAP3 POP SUB DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x15 DUP1 SLOAD DUP1 DUP4 MSTORE SWAP1 DUP5 MSTORE SWAP1 SWAP3 PUSH1 0x20 DUP5 ADD SWAP2 PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x62C JUMPI PUSH2 0x61A DUP6 PUSH2 0x628 DUP9 PUSH2 0x606 DUP2 DUP10 SUB DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x298F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5EB JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x59F JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x681 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x689 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x691 PUSH2 0x2DED JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x928 JUMPI PUSH2 0x6C6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x325 JUMPI PUSH2 0x6E6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x91D JUMPI PUSH2 0x72B SWAP2 DUP7 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x15 SLOAD ISZERO DUP1 PUSH2 0x913 JUMPI JUMPDEST ISZERO PUSH2 0x90F JUMPI DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x90F JUMPI PUSH1 0x16 SLOAD ISZERO PUSH2 0x8A4 JUMPI PUSH3 0x278D00 DUP2 GT PUSH2 0x85F JUMPI PUSH1 0x17 SSTORE DUP3 DUP1 JUMPDEST DUP4 MLOAD DUP6 LT ISZERO PUSH2 0x80F JUMPI PUSH2 0x76E DUP6 DUP6 PUSH2 0x2D51 JUMP JUMPDEST MLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7FB JUMPI SWAP1 PUSH2 0x794 DUP3 PUSH1 0x1 PUSH2 0x7AD SWAP5 ADD PUSH1 0x14 SSTORE PUSH1 0x14 PUSH2 0x28D0 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7B7 DUP6 DUP5 PUSH2 0x2D51 JUMP JUMPDEST MLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7FB JUMPI SWAP2 PUSH2 0x7E2 PUSH2 0x7F3 SWAP3 PUSH2 0x794 DUP6 PUSH1 0x1 DUP1 SWAP8 ADD PUSH1 0x15 SSTORE PUSH1 0x15 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x7EC DUP8 DUP7 PUSH2 0x2D51 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A76 JUMP JUMPDEST SWAP5 ADD SWAP4 PUSH2 0x75B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x16 SLOAD SUB PUSH2 0x81A JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E7420646973747269627574696F6E2069737375652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D616C20736869667420697320333020646179732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665677561726420666F72206D616B696E6720737572652073657453616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65506172616D73206765742066697273742063616C6C65642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD ISZERO PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x957 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x13 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9AB PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9C5 DUP3 PUSH2 0x2756 JUMP JUMPDEST DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x2 DUP6 ADD SLOAD SWAP5 PUSH1 0x40 DUP6 ADD SWAP6 DUP7 MSTORE ADD SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP3 PUSH1 0x20 DUP8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP8 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0xE8E JUMPI PUSH2 0xB1D SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0xE78 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE5F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE46 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE2D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE15 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDFC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDE3 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDCA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDB1 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD98 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD7F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD66 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD4D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD34 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD1B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD02 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCE9 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCD0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCB7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC9E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC85 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC6C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC53 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC3A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC21 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC08 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBEF JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBD6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBBD JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBA4 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xB8B JUMPI JUMPDEST LT PUSH2 0xB7B JUMPI JUMPDEST POP SWAP8 SWAP7 SWAP6 SWAP4 SWAP8 SUB DUP8 PUSH2 0x2788 JUMP JUMPDEST DUP6 PUSH1 0x60 DUP3 ADD MSTORE MLOAD SWAP1 MLOAD SWAP4 MLOAD SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 ADD SWAP4 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xB60 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD ISZERO ISZERO DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0xF8 SHR ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD CODESIZE PUSH2 0xB10 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xF0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xB02 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAFA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAF2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAEA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xADA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xACA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xABA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x98 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAB2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x90 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAAA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x88 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x80 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA9A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x78 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA92 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x70 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA8A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x68 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA82 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x60 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA7A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x58 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA72 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x50 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA6A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x48 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x40 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA5A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x38 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA52 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x30 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA4A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x28 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA42 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 DUP4 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA3A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x18 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA32 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x10 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA2A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA1A JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 DUP7 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO DUP6 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x18 SHR AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x28 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x30 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x38 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x48 SHR AND ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x50 SHR AND ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x58 SHR AND ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x60 SHR AND ISZERO ISZERO PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x68 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x70 SHR AND ISZERO ISZERO PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x78 SHR AND ISZERO ISZERO PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x80 SHR AND ISZERO ISZERO PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x88 SHR AND ISZERO ISZERO PUSH2 0x220 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x90 SHR AND ISZERO ISZERO PUSH2 0x240 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x98 SHR AND ISZERO ISZERO PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x280 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH2 0x2A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND ISZERO ISZERO PUSH2 0x2C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND ISZERO ISZERO PUSH2 0x2E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC0 SHR AND ISZERO ISZERO PUSH2 0x300 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC8 SHR AND ISZERO ISZERO PUSH2 0x320 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH2 0x340 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD8 SHR AND ISZERO ISZERO PUSH2 0x360 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE0 SHR AND ISZERO ISZERO PUSH2 0x380 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE8 SHR AND ISZERO ISZERO PUSH2 0x3A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xF0 SHR AND ISZERO ISZERO PUSH2 0x3C0 DUP4 ADD MSTORE PUSH1 0xF8 SHR ISZERO ISZERO PUSH2 0x3E0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP3 ADD DUP6 SWAP3 SWAP4 SWAP2 PUSH2 0xA02 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1091 PUSH2 0x2812 JUMP JUMPDEST PUSH2 0x1099 PUSH2 0x2828 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0xE4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1316 JUMPI PUSH2 0x10EB SWAP2 DUP12 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP7 PUSH1 0xFF DUP9 PUSH1 0xA0 SHR AND PUSH2 0x12C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP7 ISZERO PUSH2 0x1264 JUMPI DUP4 ISZERO ISZERO DUP1 PUSH2 0x125B JUMPI JUMPDEST DUP1 PUSH2 0x1252 JUMPI JUMPDEST DUP1 PUSH2 0x1249 JUMPI JUMPDEST DUP1 PUSH2 0x1240 JUMPI JUMPDEST ISZERO PUSH2 0x11FB JUMPI PUSH1 0x64 DUP4 LT PUSH2 0x11BD JUMPI PUSH32 0x2CD2DFCDEB2B58C4B80527E9DF5E12DA537FA4F6C958A4FB623A83AB74EEAB63 SWAP9 PUSH1 0x80 SWAP9 PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR PUSH1 0x3 SSTORE DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP4 PUSH1 0x5 SSTORE DUP5 PUSH1 0x6 SSTORE DUP6 PUSH1 0xA SSTORE PUSH1 0xB SSTORE PUSH1 0xC SSTORE PUSH1 0x16 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x53686F756C64206265206174206C656173742031303 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2042616420696E7075740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x1125 JUMP JUMPDEST POP TIMESTAMP DUP2 GT PUSH2 0x111F JUMP JUMPDEST POP TIMESTAMP DUP7 GT PUSH2 0x1119 JUMP JUMPDEST POP DUP5 ISZERO ISZERO PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2053616C65206F776E657220616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x399031B0B7103737BA103132901817 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2053616C6520697320616C72656164792063 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3932B0BA32B217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1375 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x12 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x13AF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x691 PUSH2 0x2E99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x14D3 JUMPI SWAP1 PUSH2 0x140D SWAP2 DUP4 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x14C8 JUMPI JUMPDEST ISZERO PUSH2 0x145D JUMPI DUP1 PUSH1 0x17 SSTORE DUP1 JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP1 PUSH2 0x1453 PUSH2 0x144A DUP6 PUSH2 0x143E PUSH1 0x1 SWAP6 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH2 0x2A76 JUMP JUMPDEST PUSH2 0x794 DUP4 PUSH2 0x2884 JUMP JUMPDEST ADD PUSH2 0x1421 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368696674206D757374206265206E6F6E7A65726F20616E6420736D616C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207468616E206D617856657374696E6754696D6553686966742E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD DUP3 LT PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x689 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x153C PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x157E SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x325 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x15C2 CALLDATASIZE PUSH2 0x28E8 JUMP JUMPDEST SWAP1 PUSH1 0xC SLOAD DUP3 GT PUSH2 0x1B1A JUMPI CALLER DUP4 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AD5 JUMPI DUP2 PUSH2 0x15ED SWAP2 CALLER SWAP1 PUSH2 0x2AEC JUMP JUMPDEST ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x1A76 JUMPI JUMPDEST ISZERO PUSH2 0x1A32 JUMPI CALLER DUP3 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x19ED JUMPI ORIGIN CALLER SUB PUSH2 0x19A8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x15AD JUMPI DUP4 SWAP2 PUSH2 0x196A JUMPI JUMPDEST POP PUSH2 0x166B PUSH2 0x1665 PUSH1 0xFF PUSH2 0x1674 SWAP4 AND PUSH2 0x2CA7 JUMP JUMPDEST CALLVALUE PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0x2ACC JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1930 JUMPI DUP2 GT PUSH2 0x18EC JUMPI PUSH2 0x168D DUP2 PUSH1 0x7 SLOAD PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x169C CALLVALUE PUSH1 0x8 SLOAD PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x14 SLOAD PUSH2 0x16AB DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP1 PUSH2 0x16B9 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH2 0x16C8 PUSH1 0x1F NOT SWAP2 PUSH2 0x291A JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x3 PUSH1 0x40 MLOAD PUSH2 0x16DD DUP2 PUSH2 0x2756 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD CALLVALUE DUP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP5 DUP6 MSTORE CALLER DUP8 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18D8 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x18D8 JUMPI DUP3 SLOAD DUP3 DUP5 SSTORE DUP1 DUP4 LT PUSH2 0x187F JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 DUP6 JUMPDEST DUP4 DUP2 LT PUSH2 0x183A JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x17CF JUMPI JUMPDEST DUP6 PUSH32 0x57D61F3CCD4CCD25EC5D234D6049553A586FAC134C85C98D0B0D9D5724F4E43E PUSH2 0x17C9 DUP8 CALLER DUP5 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x17AE PUSH1 0x10 SLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP3 DUP6 SWAP4 DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x180B JUMPI POP POP POP ADD SSTORE PUSH2 0x17C9 PUSH32 0x57D61F3CCD4CCD25EC5D234D6049553A586FAC134C85C98D0B0D9D5724F4E43E CODESIZE DUP1 PUSH2 0x1766 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 PUSH1 0x20 PUSH2 0x1830 PUSH1 0x1 SWAP3 DUP5 DUP10 MLOAD ISZERO ISZERO SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x17D4 JUMP JUMPDEST DUP7 DUP8 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x1852 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x1751 JUMP JUMPDEST SWAP6 SWAP1 PUSH1 0x20 PUSH2 0x1876 PUSH1 0x1 SWAP3 DUP10 DUP6 MLOAD ISZERO ISZERO SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x183D JUMP JUMPDEST DUP4 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x1F DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 PUSH1 0x1F DUP5 AND DUP1 PUSH2 0x18BB JUMPI JUMPDEST POP JUMPDEST DUP2 DUP2 LT PUSH2 0x18B0 JUMPI POP PUSH2 0x173F JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x18A1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547279696E6720746F20627579206D6F7265207468616E20616C6C6F7765642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E277420627579203020746F6B656E73 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x19A0 JUMPI JUMPDEST DUP2 PUSH2 0x1985 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x325 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x325 JUMPI PUSH2 0x166B PUSH2 0x1652 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792064697265637420636F6E74726163742063616C6C732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722063616E207061727469636970617465206F6E6C79206F6E63652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65206469646E2774207374617274206F72206974277320656E6465642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xA SLOAD TIMESTAMP LT PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E61747572652E20566572696669636174696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x19985A5B1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207265676973746572656420666F7220746869732073616C652E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F77696E67206D6178696D616C2070617274696369706174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x37103337B91039B0B63297 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x15 SLOAD DUP3 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x213 DUP4 PUSH2 0x28B5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1BC4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND PUSH2 0x1C2B JUMPI PUSH1 0xFF PUSH1 0xB8 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xB8 SHL OR PUSH1 0x3 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 MSTORE PUSH2 0x691 SWAP2 PUSH2 0x1C1D PUSH1 0x84 DUP4 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F7369742063616E20626520646F6E65206F6E6C79206F6E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x1CC3 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CFB JUMPI PUSH1 0x20 DUP2 PUSH32 0x4B59D61D9FFDC3DB926D0CE7E06EBABB6BD1BF9DCDAE262667E48BE368227216 SWAP3 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x283934B1B29031B0B7103737BA103132901817 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x1D99 PUSH2 0x1D8B CALLDATASIZE PUSH1 0x4 DUP7 ADD PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x1D93 PUSH2 0x2828 JUMP JUMPDEST SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x928 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x928 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x325 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT PUSH2 0x325 JUMPI SWAP1 DUP3 CALLER DUP5 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP2 DUP5 SWAP1 PUSH1 0x3 DUP5 ADD SWAP2 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x24 DUP2 PUSH1 0x5 SHL DUP4 ADD ADD CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x1ECC JUMPI PUSH1 0xFF PUSH2 0x1E34 DUP3 DUP7 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND ISZERO DUP1 PUSH2 0x1EB3 JUMPI JUMPDEST PUSH2 0x1E51 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP5 PUSH2 0x1EA6 PUSH2 0x1E9D DUP4 PUSH2 0x1E83 PUSH2 0x1E6C PUSH2 0x1EAC SWAP7 DUP11 PUSH2 0x2A99 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH1 0xFF PUSH1 0x1 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1E90 DUP11 SLOAD SWAP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 PUSH2 0x2ACC JUMP JUMPDEST SWAP1 PUSH2 0x2A76 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP PUSH2 0x1EBD DUP2 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR TIMESTAMP LT ISZERO PUSH2 0x1E43 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP5 DUP1 PUSH2 0x1EDB JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x1F15 PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B SWAP4 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1C0 PUSH1 0x3 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP2 PUSH1 0xA SLOAD SWAP4 PUSH1 0xB SLOAD SWAP6 PUSH1 0xC SLOAD SWAP8 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP13 MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP14 ADD MSTORE DUP2 DUP2 PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP14 ADD MSTORE DUP2 DUP2 PUSH1 0xB0 SHR AND ISZERO ISZERO PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0xB8 SHR AND ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2008 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH2 0x628 PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x2090 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 PUSH2 0x209E DUP2 DUP4 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x9 SLOAD GT ISZERO PUSH2 0x20B6 JUMPI PUSH2 0x20B0 SWAP2 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0xE SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20706572696F64206F766572666C6F7773207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x36329039BA30B93A17 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x2127 PUSH2 0x2121 CALLDATASIZE PUSH2 0x283E JUMP JUMPDEST SWAP2 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x1D99 PUSH2 0x214D CALLDATASIZE PUSH2 0x283E JUMP JUMPDEST SWAP2 PUSH2 0x2AEC JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x21A6 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH2 0x21B3 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x2A32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21EB JUMPI PUSH1 0x20 DUP2 PUSH32 0x37CFB0744BDB923D0300A0C37FAC13CFEC5FC2EE313CB9B217D284122980BADA SWAP3 PUSH1 0xC SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574206D61782070617274696369706174696F6E20746F2030 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD TIMESTAMP LT PUSH2 0x23A4 JUMPI PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x235F JUMPI CALLER DUP3 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP2 PUSH1 0xFF PUSH2 0x22A6 DUP3 DUP6 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND ISZERO DUP1 PUSH2 0x2346 JUMPI JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH2 0x1E90 PUSH2 0x1E9D SWAP3 PUSH2 0x22D1 PUSH2 0x1E6C DUP5 PUSH2 0x22DA SWAP8 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH2 0x28B5 JUMP JUMPDEST DUP1 PUSH2 0x1EDB JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320616C72656164792077697468647261776E206F7220706F7274 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x34B7B7103737BA103AB73637B1B5B2B2103CB2BA17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x2350 DUP2 PUSH2 0x2884 JUMP JUMPDEST TIMESTAMP SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR GT ISZERO PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F7274696F6E206964206F7574206F662072616E67652E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E732063616E206E6F742062652077697468647261776E207965742E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x243B SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x25FA JUMPI PUSH1 0x9 SLOAD PUSH2 0x25A6 JUMPI PUSH1 0xE SLOAD DUP2 GT ISZERO PUSH2 0x2544 JUMPI PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x24EE JUMPI TIMESTAMP DUP2 LT PUSH2 0x249D JUMPI PUSH1 0x20 DUP2 PUSH32 0xAAD53C4362EF2FE5A5390CC046E71FD8423A0A8DCEEBC156AC9BBCD15997EEC2 SWAP3 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C6420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x393297 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C64206C657373207468616E2073616C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x456E642074696D65 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C642067726561746572207468616E2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x32B3B4B9BA3930BA34B7B72A34B6B2A2B7323997 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C6553746172743A207374617254696D652069732073657420616C PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3932B0B23C97 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x39B0B6329034B9903737BA1031B932B0BA32B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x26CC SWAP3 PUSH2 0x26AC SWAP2 DUP6 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH2 0x26C3 DUP2 PUSH1 0x9 SLOAD PUSH2 0x26BE DUP2 TIMESTAMP LT PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x2A76 JUMP JUMPDEST DUP1 PUSH1 0x9 SSTORE PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0xA SLOAD GT ISZERO PUSH2 0x26D8 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D652063616E206E6F742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x30B71032B732103A34B6B297 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x928 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x928 JUMPI SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2772 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x280D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x27DD DUP3 PUSH2 0x27AA JUMP JUMPDEST SWAP3 PUSH2 0x27EB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x280D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x280D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x280D JUMPI PUSH2 0x2869 SWAP2 PUSH1 0x4 ADD PUSH2 0x27C6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x280D JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x14 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x15 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x280D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x280D JUMPI PUSH2 0x2913 SWAP2 PUSH1 0x4 ADD PUSH2 0x27C6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2772 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x280D JUMPI DUP2 CALLDATALOAD PUSH2 0x2949 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP3 PUSH2 0x2957 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x280D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x297F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x29AD JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x29A0 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x280D JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x280D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x29E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A39 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x39B0B6329030B63932B0B23C9039BA30B93A32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2A83 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x5 SHR ADD SWAP3 AND SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2A83 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2AD6 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x2B05 SWAP3 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2B3E JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x2B57 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x563 JUMPI PUSH2 0x555 DUP2 DUP4 PUSH2 0x2788 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x2BD8 SWAP2 PUSH2 0x2B57 SWAP4 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP4 MSTORE PUSH1 0x34 DUP3 ADD MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x48 DUP2 MSTORE PUSH2 0x2BA4 PUSH1 0x68 DUP3 PUSH2 0x2788 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 PUSH2 0x2FD4 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x3010 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x28 DUP2 MSTORE PUSH2 0x2C12 PUSH1 0x48 DUP3 PUSH2 0x2788 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x20 PUSH2 0x2B05 PUSH2 0x2BD8 PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP5 PUSH2 0x2FD4 JUMP JUMPDEST ISZERO PUSH2 0x2C62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7953616C654F776E65723A3A2052657374726963746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2D3C JUMPI PUSH1 0x0 SWAP1 PUSH1 0x20 DUP2 LT PUSH1 0x1 AND PUSH1 0x4E DUP3 LT PUSH1 0x1 AND OR PUSH2 0x2D34 JUMPI PUSH1 0xA SWAP2 PUSH1 0x1 SWAP2 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x2CF7 JUMPI POP DUP3 PUSH1 0x0 NOT DIV DUP3 GT PUSH2 0x2CE3 JUMPI POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 DUP1 PUSH1 0x0 NOT DIV DUP2 GT PUSH2 0x2D20 JUMPI PUSH1 0x1 DUP5 AND PUSH2 0x2D17 JUMPI JUMPDEST DUP1 MUL SWAP3 PUSH1 0x1 SHR PUSH2 0x2CCA JUMP JUMPDEST DUP1 SWAP3 MUL SWAP2 PUSH2 0x2D0C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP PUSH1 0xA EXP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2A83 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x2DA6 SWAP2 PUSH2 0x2DA1 PUSH1 0x64 DUP4 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x2F79 JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x2DAF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x39B0B6329034B9903737BA1032B73232B2103CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2DFB PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND PUSH2 0x2E48 JUMPI PUSH1 0xFF PUSH1 0xB0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xB0 SHL OR PUSH1 0x3 SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD DUP1 DUP3 SUB SWAP2 DUP1 DUP4 GT PUSH2 0x2A83 JUMPI SUB PUSH2 0x2E34 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2DA6 SWAP2 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E2774207769746864726177206C6566746F766572207477 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2EA7 PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH2 0x2F28 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH2 0x2EDE DUP6 DUP3 PUSH2 0x2788 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 PUSH1 0x1F NOT DUP7 ADD CALLDATASIZE DUP4 CALLDATACOPY MLOAD SWAP2 CALLER GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x2F22 JUMPI PUSH1 0x0 RETURNDATASIZE SWAP2 PUSH2 0x2F06 DUP4 PUSH2 0x27AA JUMP JUMPDEST SWAP3 PUSH2 0x2F14 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x280D JUMPI JUMP JUMPDEST POP PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E2774207769746864726177206561726E696E6773207477 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x2FCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2FAA JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2FA3 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x3005 JUMPI PUSH2 0x2FFE SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x3098 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x3082 JUMPI DUP1 PUSH2 0x3026 JUMPI POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SUB PUSH2 0x3041 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP2 SUB PUSH2 0x305F JUMPI DUP3 PUSH4 0xFCE698F7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x3 PUSH1 0x0 SWAP3 EQ PUSH2 0x306F JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x3115 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x3109 JUMPI SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 GASLIMIT LOG3 0xBB PUSH0 NOT PUSH10 0x8ECAFBFFC5DD290E615E PUSH20 0x4BABE1627A49B5093E8BC538AE864736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"455:21455:28:-:0;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;-1:-1:-1;;;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;455:21455:28;;;;3933:20;;455:21455;;-1:-1:-1;;;;;455:21455:28;;3972:32;;455:21455;;4015:22;455:21455;;-1:-1:-1;;;;;;455:21455:28;;;;;;;;;;;;;;4071:10;455:21455;;;-1:-1:-1;455:21455:28;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:21455:28;;;;;;-1:-1:-1;455:21455:28;;;;;-1:-1:-1;455:21455:28;;;;-1:-1:-1;;;;;455:21455:28;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10280,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_39883":{"entryPoint":10258,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":10546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":10691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":10182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytest_addresst_uint256":{"entryPoint":10302,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_bytest_uint256":{"entryPoint":10472,"id":null,"parameterSlots":1,"returnSlots":2},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":10639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":10522,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":10154,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256":{"entryPoint":10870,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":10956,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":11431,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":10937,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":10120,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_39891":{"entryPoint":10070,"id":null,"parameterSlots":1,"returnSlots":0},"fun_callOptionalReturn":{"entryPoint":12153,"id":1859,"parameterSlots":2,"returnSlots":0},"fun_checkParticipationSignature":{"entryPoint":10988,"id":10758,"parameterSlots":3,"returnSlots":1},"fun_checkRegistrationSignature":{"entryPoint":11233,"id":10737,"parameterSlots":2,"returnSlots":1},"fun_getParticipationSigner":{"entryPoint":11110,"id":10796,"parameterSlots":3,"returnSlots":1},"fun_safeTransfer":{"entryPoint":11621,"id":1537,"parameterSlots":3,"returnSlots":0},"fun_throwError":{"entryPoint":12304,"id":3530,"parameterSlots":2,"returnSlots":0},"fun_tryRecover":{"entryPoint":12244,"id":3257,"parameterSlots":2,"returnSlots":3},"fun_tryRecover_3445":{"entryPoint":12440,"id":3445,"parameterSlots":4,"returnSlots":3},"fun_withdrawEarningsInternal":{"entryPoint":11929,"id":10650,"parameterSlots":0,"returnSlots":0},"fun_withdrawLeftoverInternal":{"entryPoint":11757,"id":10699,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":11586,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":11601,"id":null,"parameterSlots":2,"returnSlots":1},"require_helper_stringliteral_0bd4":{"entryPoint":11355,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_94af":{"entryPoint":10715,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a1b7":{"entryPoint":10802,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a270":{"entryPoint":11688,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_bool_dyn":{"entryPoint":10905,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn":{"entryPoint":10448,"id":null,"parameterSlots":2,"returnSlots":2},"storage_array_index_access_uint256_dyn_39878":{"entryPoint":10372,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_uint256_dyn_39880":{"entryPoint":10421,"id":null,"parameterSlots":1,"returnSlots":2},"update_byte_slice_dynamic1":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"update_byte_slice_dynamic1_39879":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"update_storage_value_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163059ea17214612732575080631f11cb1e146126545780632a7c35de146126365780632f181f54146123e8578063315a095d14612261578063443bd1d01461222f57806347786d3714612153578063482a5dc7146121395780634897f4c31461210d5780635164d8711461203d5780635e7464f614611fe35780636ad1fe0214611f2d578063718af7e614611da3578063735deffa14611d545780637417040e14611d365780637843990a14611c705780637c4b414d14611b9e578063927f6aee14611b73578063931d81c9146115b8578063a29f481c14611522578063a525d237146114fc578063ab7589b5146114de578063abee6927146113b7578063b73c6ce914611389578063c3c5a5471461134a578063c45a015514611321578063c4fbe09114611076578063cad925ef14610989578063ccc171f51461096b578063cf5b8d4b1461092c578063d937d45614610694578063da4d4fbf1461065b578063dc25a30014610575578063e099cf64146103f8578063e9d8479e14610222578063f1ef7ff2146101e85763f851a4400361000f57346101e557806003193601126101e5576002546040516001600160a01b039091168152602090f35b80fd5b50346101e55760203660031901126101e557600435906014548210156101e557602061021383612884565b90549060031b1c604051908152f35b50346101e557610231366128e8565b90600d54421015806103ec575b156103a75761024e903390612be1565b1561036e57338252601260205260ff60408320541661032957338252601260205260408220805460ff191660011790558154600a546001600160a01b0391909116918391833b1561032557606483928360405196879485936339bc12b360e21b8552600485015233602485015260448401525af1801561031857610308575b6102d8600f54612d42565b600f557f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b96020604051338152a180f35b61031191612788565b38816102cd565b50604051903d90823e3d90fd5b8280fd5b60405162461bcd60e51b815260206004820152601c60248201527f557365722063616e206e6f742072656769737465722074776963652e000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e206761746520697320636c6f7365642e000000006044820152606490fd5b50600e5442111561023e565b50346101e55760403660031901126101e5576004356024356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa801561056a5761044f91859161053b575b506129db565b60ff60035460a01c161561032557600d54610325574282101580610532575b1561032557600a5481101561032557600954806104c2575b50816040917faf6e91c17885891414abbe7fa95074976b3e429980b0d8790034468e69650dd993600d5580600e5582519182526020820152a180f35b8110156104cf5738610486565b60405162461bcd60e51b815260206004820152603560248201527f726567697374726174696f6e54696d65456e6473203e3d2073616c652e73616c6044820152741954dd185c9d081a5cc81b9bdd08185b1b1bddd959605a1b6064820152608490fd5b5081811161046e565b61055d915060203d602011610563575b6105558183612788565b8101906129c3565b38610449565b503d61054b565b6040513d86823e3d90fd5b50346101e557806003193601126101e5576040516014548082528160208101601485526020852092855b8181106106425750506105b492500382612788565b60405160158054808352908452909260208401917f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475915b81811061062c5761061a856106288861060681890382612788565b60405193849360408552604085019061298f565b90838203602085015261298f565b0390f35b82548452602090930192600192830192016105eb565b845483526001948501948694506020909301920161059f565b50346101e557806003193601126101e55761068160018060a01b03600454163314612c5b565b610689612e99565b610691612ded565b80f35b50346101e55760603660031901126101e55760043567ffffffffffffffff8111610928576106c6903690600401612932565b60243567ffffffffffffffff8111610325576106e6903690600401612932565b600254604051630935e01b60e21b815233600482015260443591602090829060249082906001600160a01b03165afa801561091d5761072b91869161053b57506129db565b6015541580610913575b1561090f57825182510361090f57601654156108a45762278d00811161085f5760175582805b835185101561080f5761076e8585612d51565b51601454600160401b8110156107fb57906107948260016107ad940160145560146128d0565b90919082549060031b91821b91600019901b1916179055565b6107b78584612d51565b51601554600160401b8110156107fb57916107e26107f39261079485600180970160155560156128d0565b6107ec8786612d51565b5190612a76565b94019361075b565b634e487b7160e01b84526041600452602484fd5b6016540361081a5780f35b60405162461bcd60e51b815260206004820152601b60248201527f50657263656e7420646973747269627574696f6e2069737375652e00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f4d6178696d616c20736869667420697320333020646179732e000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152603960248201527f53616665677561726420666f72206d616b696e6720737572652073657453616c60448201527f65506172616d73206765742066697273742063616c6c65642e000000000000006064820152608490fd5b8380fd5b5060145415610735565b6040513d87823e3d90fd5b5080fd5b50346101e55760203660031901126101e55760209060ff906040906001600160a01b03610957612812565b168152601384522054166040519015158152f35b50346101e557806003193601126101e5576020601754604051908152f35b50346101e55760203660031901126101e5576001600160a01b036109ab612812565b16815260116020526040812090604051906109c582612756565b8254825260018301549060208301918252600360028501549460408501958652019260405190818260208754928381520180978652602086209286905b80601f830110610e8e57610b1d945491818110610e78575b818110610e5f575b818110610e46575b818110610e2d575b818110610e15575b818110610dfc575b818110610de3575b818110610dca575b818110610db1575b818110610d98575b818110610d7f575b818110610d66575b818110610d4d575b818110610d34575b818110610d1b575b818110610d02575b818110610ce9575b818110610cd0575b818110610cb7575b818110610c9e575b818110610c85575b818110610c6c575b818110610c53575b818110610c3a575b818110610c21575b818110610c08575b818110610bef575b818110610bd6575b818110610bbd575b818110610ba4575b818110610b8b575b10610b7b575b5097969593970387612788565b8560608201525190519351946040519586956080870193875260208701526040860152608060608601525180915260a0840192915b818110610b60575050500390f35b82511515845285945060209384019390920191600101610b52565b60f81c1515815260200138610b10565b92602060019160ff8560f01c1615158152019301610b0a565b92602060019160ff8560e81c1615158152019301610b02565b92602060019160ff8560e01c1615158152019301610afa565b92602060019160ff8560d81c1615158152019301610af2565b92602060019160ff8560d01c1615158152019301610aea565b92602060019160ff8560c81c1615158152019301610ae2565b92602060019160ff8560c01c1615158152019301610ada565b92602060019160ff8560b81c1615158152019301610ad2565b92602060019160ff8560b01c1615158152019301610aca565b92602060019160ff8560a81c1615158152019301610ac2565b92602060019160ff8560a01c1615158152019301610aba565b92602060019160ff8560981c1615158152019301610ab2565b92602060019160ff8560901c1615158152019301610aaa565b92602060019160ff8560881c1615158152019301610aa2565b92602060019160ff8560801c1615158152019301610a9a565b92602060019160ff8560781c1615158152019301610a92565b92602060019160ff8560701c1615158152019301610a8a565b92602060019160ff8560681c1615158152019301610a82565b92602060019160ff8560601c1615158152019301610a7a565b92602060019160ff8560581c1615158152019301610a72565b92602060019160ff8560501c1615158152019301610a6a565b92602060019160ff8560481c1615158152019301610a62565b92602060019160ff8560401c1615158152019301610a5a565b92602060019160ff8560381c1615158152019301610a52565b92602060019160ff8560301c1615158152019301610a4a565b92602060019160ff8560281c1615158152019301610a42565b92602060019160ff85831c1615158152019301610a3a565b92602060019160ff8560181c1615158152019301610a32565b92602060019160ff8560101c1615158152019301610a2a565b92602060019160ff8560081c1615158152019301610a22565b92602060019160ff851615158152019301610a1a565b916020919350610400600191865460ff81161515825260ff8160081c1615158583015260ff8160101c161515604083015260ff8160181c161515606083015260ff81861c161515608083015260ff8160281c16151560a083015260ff8160301c16151560c083015260ff8160381c16151560e083015260ff8160401c16151561010083015260ff8160481c16151561012083015260ff8160501c16151561014083015260ff8160581c16151561016083015260ff8160601c16151561018083015260ff8160681c1615156101a083015260ff8160701c1615156101c083015260ff8160781c1615156101e083015260ff8160801c16151561020083015260ff8160881c16151561022083015260ff8160901c16151561024083015260ff8160981c16151561026083015260ff8160a01c16151561028083015260ff8160a81c1615156102a083015260ff8160b01c1615156102c083015260ff8160b81c1615156102e083015260ff8160c01c16151561030083015260ff8160c81c16151561032083015260ff8160d01c16151561034083015260ff8160d81c16151561036083015260ff8160e01c16151561038083015260ff8160e81c1615156103a083015260ff8160f01c1615156103c083015260f81c15156103e0820152019401920185929391610a02565b50346101e5576101003660031901126101e557611091612812565b611099612828565b6044356064356084359060a4359260c43560e4356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa8015611316576110eb918b9161053b57506129db565b6003549660ff8860a01c166112c1576001600160a01b0316958615611264578315158061125b575b80611252575b80611249575b80611240575b156111fb57606483106111bd577f2cd2dfcdeb2b58c4b80527e9df5e12da537fa4f6c958a4fb623a83ab74eeab6398608098600160a01b9160018060a01b0316906affffffffffffffffffffff60a81b161717600355866001600160601b0360a01b6004541617600455836005558460065585600a55600b55600c55601655604051938452602084015260408301526060820152a180f35b60405162461bcd60e51b8152602060048201526016602482015275053686f756c64206265206174206c65617374203130360541b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f73657453616c65506172616d733a2042616420696e70757400000000000000006044820152606490fd5b50811515611125565b5042811161111f565b50428611611119565b50841515611113565b60405162461bcd60e51b815260206004820152602f60248201527f73657453616c65506172616d733a2053616c65206f776e65722061646472657360448201526e399031b0b7103737ba10313290181760891b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f73657453616c65506172616d733a2053616c6520697320616c726561647920636044820152663932b0ba32b21760c91b6064820152608490fd5b6040513d8c823e3d90fd5b50346101e557806003193601126101e5576001546040516001600160a01b039091168152602090f35b50346101e55760203660031901126101e55760209060ff906040906001600160a01b03611375612812565b168152601284522054166040519015158152f35b50346101e557806003193601126101e5576113af60018060a01b03600454163314612c5b565b610691612e99565b50346101e55760203660031901126101e557600435906024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa9081156114d3579061140d91839161053b57506129db565b811515806114c8575b1561145d5780601755805b601454811015611459578061145361144a8561143e600195612884565b90549060031b1c612a76565b61079483612884565b01611421565b5080f35b60405162461bcd60e51b815260206004820152603b60248201527f5368696674206d757374206265206e6f6e7a65726f20616e6420736d616c6c6560448201527f72207468616e206d617856657374696e6754696d6553686966742e00000000006064820152608490fd5b506017548210611416565b6040513d84823e3d90fd5b50346101e557806003193601126101e5576020600f54604051908152f35b50346101e557806003193601126101e55761068960018060a01b03600454163314612c5b565b50346101e55760203660031901126101e55761153c612812565b600254604051630935e01b60e21b815233600482015290602090829060249082906001600160a01b03165afa80156115ad5761157e91849161053b57506129db565b600354906001600160a01b038216610325576001600160a01b03166001600160a01b0319919091161760035580f35b6040513d85823e3d90fd5b506115c2366128e8565b90600c548211611b1a57338352601260205260ff60408420541615611ad557816115ed913390612aec565b15611a815760095442101580611a76575b15611a3257338252601360205260ff6040832054166119ed573233036119a85760035460405163313ce56760e01b815290602090829060049082906001600160a01b03165afa9081156115ad57839161196a575b5061166b61166560ff6116749316612ca7565b34612ab9565b60055490612acc565b9081156119305781116118ec5761168d81600754612a76565b60075561169c34600854612a76565b6008556014546116ab8161291a565b906116b96040519283612788565b8082526116c8601f199161291a565b0136602083013760036040516116dd81612756565b838152602081013481526040820190428252606083019485523387526011602052604087209251835551600183015551600282015501905180519067ffffffffffffffff82116118d857600160401b82116118d857825482845580831061187f575b50602001918452602084208160051c91855b83811061183a5750601f1981169003806117cf575b857f57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e6117c987338452601360205260408420600160ff198254161790556117ae601054612d42565b60105560408051338152602081019290925290918291820190565b0390a180f35b928593865b81811061180b5750505001556117c97f57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e3880611766565b90919460206118306001928489511515919060ff809160031b9316831b921b19161790565b96019291016117d4565b86875b60208110611852575083820155600101611751565b959060206118766001928985511515919060ff809160031b9316831b921b19161790565b9201960161183d565b83865260208620601f80850160051c8201920160051c0190601f8416806118bb575b505b8181106118b0575061173f565b8681556001016118a3565b6000198201908154906000199060200360031b1c169055386118a1565b634e487b7160e01b85526041600452602485fd5b606460405162461bcd60e51b815260206004820152602060248201527f547279696e6720746f20627579206d6f7265207468616e20616c6c6f7765642e6044820152fd5b60405162461bcd60e51b815260206004820152601260248201527143616e277420627579203020746f6b656e7360701b6044820152606490fd5b90506020813d6020116119a0575b8161198560209383612788565b81010312610325575160ff811681036103255761166b611652565b3d9150611978565b60405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792064697265637420636f6e74726163742063616c6c732e00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f557365722063616e207061727469636970617465206f6e6c79206f6e63652e006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f73616c65206469646e2774207374617274206f72206974277320656e6465642e6044820152fd5b50600a5442106115fe565b60405162461bcd60e51b815260206004820152602660248201527f496e76616c6964207369676e61747572652e20566572696669636174696f6e2060448201526519985a5b195960d21b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4e6f74207265676973746572656420666f7220746869732073616c652e0000006044820152606490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4f766572666c6f77696e67206d6178696d616c2070617274696369706174696f60448201526a37103337b91039b0b6329760a91b6064820152608490fd5b50346101e55760203660031901126101e557600435906015548210156101e5576020610213836128b5565b50346101e557806003193601126101e557611bc460018060a01b03600454163314612c5b565b60035460ff8160b81c16611c2b5760ff60b81b198116600160b81b176003556006546040516323b872dd60e01b602082015233602482015230604482015260648082019290925290815261069191611c1d608483612788565b6001600160a01b0316612f79565b60405162461bcd60e51b815260206004820152601d60248201527f4465706f7369742063616e20626520646f6e65206f6e6c79206f6e63650000006044820152606490fd5b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad57611cc391849161053b57506129db565b8015611cfb576020817f4b59d61d9ffdc3db926d0ce7e06ebabb6bd1bf9dcdae262667e48be36822721692600555604051908152a180f35b60405162461bcd60e51b8152602060048201526013602482015272283934b1b29031b0b7103737ba10313290181760691b6044820152606490fd5b50346101e557806003193601126101e5576020601054604051908152f35b50346101e55760403660031901126101e5576004359067ffffffffffffffff82116101e5576020611d99611d8b36600486016127c6565b611d93612828565b90612be1565b6040519015158152f35b50346101e55760203660031901126101e55760043567ffffffffffffffff8111610928573660238201121561092857806004013567ffffffffffffffff8111610325573660248260051b8401011161032557908233845260116020526040842091849060038401915b85811015611ed05760248160051b83010135601554811015611ecc5760ff611e348286612a99565b90549060031b1c161580611eb3575b611e51575b50600101611e0c565b60019194611ea6611e9d83611e83611e6c611eac968a612a99565b819291549060031b9060ff6001831b921b19161790565b9055611e908a54916128b5565b90549060031b1c90612ab9565b60165490612acc565b90612a76565b9390611e48565b50611ebd81612884565b90549060031b1c421015611e43565b8780fd5b868480611edb575080f35b6117c981611f157f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b933360018060a01b0360035416612d65565b60408051338152602081019290925290918291820190565b50346101e557806003193601126101e5576101c060035460018060a01b036004541660055460065460075460085460095491600a5493600b5495600c549760ff6040519a60018060a01b0381168c52818160a01c16151560208d0152818160a81c16151560408d0152818160b01c16151560608d015260b81c16151560808b015260a08a015260c089015260e08801526101008701526101208601526101408501526101608401526101808301526101a0820152f35b50346101e55760203660031901126101e5576040906001600160a01b03612008612812565b168152601160205220805461062860026001840154930154604051938493846040919493926060820195825260208201520152565b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad5761209091849161053b57506129db565b600e549061209e8183612a76565b60095411156120b6576120b091612a76565b600e5580f35b60405162461bcd60e51b815260206004820152602960248201527f526567697374726174696f6e20706572696f64206f766572666c6f777320736160448201526836329039ba30b93a1760b91b6064820152608490fd5b50346101e55760206121276121213661283e565b91612b66565b6040516001600160a01b039091168152f35b50346101e5576020611d9961214d3661283e565b91612aec565b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad576121a691849161053b57506129db565b6121b36009544210612a32565b80156121eb576020817f37cfb0744bdb923d0300a0c37fac13cfec5fc2ee313cb9b217d284122980bada92600c55604051908152a180f35b606460405162461bcd60e51b815260206004820152602060248201527f43616e277420736574206d61782070617274696369706174696f6e20746f20306044820152fd5b50346101e557806003193601126101e557600d54600e54600f5460408051938452602084019290925290820152606090f35b50346101e55760203660031901126101e557600435600b5442106123a45760155481101561235f57338252601160205260408220600381019160ff6122a68285612a99565b90549060031b1c161580612346575b156122e357611e90611e9d926122d1611e6c846122da97612a99565b905554916128b5565b80611edb575080f35b60405162461bcd60e51b815260206004820152603560248201527f546f6b656e7320616c72656164792077697468647261776e206f7220706f727460448201527434b7b7103737ba103ab73637b1b5b2b2103cb2ba1760591b6064820152608490fd5b5061235081612884565b4291549060031b1c11156122b5565b60405162461bcd60e51b815260206004820152601860248201527f506f7274696f6e206964206f7574206f662072616e67652e00000000000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f546f6b656e732063616e206e6f742062652077697468647261776e207965742e6044820152fd5b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad5761243b91849161053b57506129db565b60ff60035460a01c16156125fa576009546125a657600e5481111561254457600a548110156124ee5742811061249d576020817faad53c4362ef2fe5a5390cc046e71fd8423a0a8dceebc156ac9bbcd15997eec292600955604051908152a180f35b60405162461bcd60e51b815260206004820152602360248201527f73746172742074696d652073686f756c6420626520696e20746865206675747560448201526239329760e91b6064820152608490fd5b60405162461bcd60e51b815260206004820152602860248201527f73746172742074696d652073686f756c64206c657373207468616e2073616c65604482015267456e642074696d6560c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152603460248201527f73746172742074696d652073686f756c642067726561746572207468616e207260448201527332b3b4b9ba3930ba34b7b72a34b6b2a2b732399760611b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f73657453616c6553746172743a207374617254696d652069732073657420616c6044820152653932b0b23c9760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601460248201527339b0b6329034b9903737ba1031b932b0ba32b21760611b6044820152606490fd5b50346101e557806003193601126101e5576020601654604051908152f35b50346101e55760203660031901126101e5576024600435602060018060a01b036002541660405193848092630935e01b60e21b82523360048301525afa9182156115ad576126cc926126ac91859161053b57506129db565b6126c3816009546126be814210612a32565b612a76565b80600955612a76565b600a5411156126d85780f35b60405162461bcd60e51b815260206004820152602c60248201527f53746172742074696d652063616e206e6f74206265206772656174657220746860448201526b30b71032b732103a34b6b29760a11b6064820152608490fd5b90503461092857816003193601126109285790546001600160a01b03168152602090f35b6080810190811067ffffffffffffffff82111761277257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761277257604052565b67ffffffffffffffff811161277257601f01601f191660200190565b81601f8201121561280d578035906127dd826127aa565b926127eb6040519485612788565b8284526020838301011161280d57816000926020809301838601378301015290565b600080fd5b600435906001600160a01b038216820361280d57565b602435906001600160a01b038216820361280d57565b606060031982011261280d576004359067ffffffffffffffff821161280d57612869916004016127c6565b906024356001600160a01b038116810361280d579060443590565b60145481101561289f57601460005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60155481101561289f57601560005260206000200190600090565b805482101561289f5760005260206000200190600090565b604060031982011261280d576004359067ffffffffffffffff821161280d57612913916004016127c6565b9060243590565b67ffffffffffffffff81116127725760051b60200190565b9080601f8301121561280d5781356129498161291a565b926129576040519485612788565b81845260208085019260051b82010192831161280d57602001905b82821061297f5750505090565b8135815260209182019101612972565b906020808351928381520192019060005b8181106129ad5750505090565b82518452602093840193909201916001016129a0565b9081602091031261280d5751801515810361280d5790565b156129e257565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f604482015261371760f11b6064820152608490fd5b15612a3957565b60405162461bcd60e51b815260206004820152601560248201527439b0b6329030b63932b0b23c9039ba30b93a32b21760591b6044820152606490fd5b91908201809211612a8357565b634e487b7160e01b600052601160045260246000fd5b919091805483101561289f57600052601f60206000208360051c01921690565b81810292918115918404141715612a8357565b8115612ad6570490565b634e487b7160e01b600052601260045260246000fd5b6002546001600160a01b031692602092612b0592612b66565b604051630935e01b60e21b81526001600160a01b03909116600482015291829060249082905afa908115612b5a57600091612b3e575090565b612b57915060203d602011610563576105558183612788565b90565b6040513d6000823e3d90fd5b612bd891612b57936040519060208201926001600160601b03199060601b16835260348201523060601b605482015260488152612ba4606882612788565b5190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c600020612fd4565b90929192613010565b9060405160208101916001600160601b03199060601b1682523060601b603482015260288152612c12604882612788565b5190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c526020612b05612bd8603c6000209360018060a01b036002541694612fd4565b15612c6257565b60405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7953616c654f776e65723a3a20526573747269637465640000000000006044820152606490fd5b8015612d3c5760009060208110600116604e821060011617612d3457600a916001915b60018111612cf7575082600019048211612ce357500290565b634e487b7160e01b81526011600452602490fd5b9280600019048111612d205760018416612d17575b80029260011c612cca565b80920291612d0c565b634e487b7160e01b82526011600452602482fd5b9050600a0a90565b50600190565b6000198114612a835760010190565b805182101561289f5760209160051b010190565b60405163a9059cbb60e01b60208201526001600160a01b03929092166024830152604480830193909352918152612da691612da1606483612788565b612f79565b565b15612daf57565b60405162461bcd60e51b815260206004820152601660248201527539b0b6329034b9903737ba1032b73232b2103cb2ba1760511b6044820152606490fd5b612dfb600a54421015612da8565b60035460ff8160b01c16612e485760ff60b01b198116600160b01b1760035560065460075480820391808311612a835703612e34575050565b612da69133906001600160a01b0316612d65565b60405162461bcd60e51b815260206004820152602360248201527f6f776e65722063616e2774207769746864726177206c6566746f76657220747760448201526269636560e81b6064820152608490fd5b612ea7600a54421015612da8565b60035460ff8160a81c16612f285760ff60a81b1916600160a81b17600355600854604051602091600091829190612ede8582612788565b82815284810190601f1986013683375191335af1903d15612f225760003d91612f06836127aa565b92612f146040519485612788565b83523d92013e5b1561280d57565b50612f1b565b60405162461bcd60e51b815260206004820152602360248201527f6f776e65722063616e2774207769746864726177206561726e696e677320747760448201526269636560e81b6064820152608490fd5b906000602091828151910182855af115612b5a576000513d612fcb57506001600160a01b0381163b155b612faa5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415612fa3565b815191906041830361300557612ffe92506020820151906060604084015193015160001a90613098565b9192909190565b505060009160029190565b9190916004811015613082578061302657509050565b6000600182036130415763f645eedf60e01b60005260046000fd5b506002810361305f578263fce698f760e01b60005260045260246000fd5b909160036000921461306f575050565b6335e2f38360e21b825260045260249150fd5b634e487b7160e01b600052602160045260246000fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411613115579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15612b5a576000516001600160a01b038116156131095790600090600090565b50600090600190600090565b5050506000916003919056fea2646970667358221220f945a3bb5f19698ecafbffc5dd290e615e7304babe1627a49b5093e8bc538ae864736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x59EA172 EQ PUSH2 0x2732 JUMPI POP DUP1 PUSH4 0x1F11CB1E EQ PUSH2 0x2654 JUMPI DUP1 PUSH4 0x2A7C35DE EQ PUSH2 0x2636 JUMPI DUP1 PUSH4 0x2F181F54 EQ PUSH2 0x23E8 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x2261 JUMPI DUP1 PUSH4 0x443BD1D0 EQ PUSH2 0x222F JUMPI DUP1 PUSH4 0x47786D37 EQ PUSH2 0x2153 JUMPI DUP1 PUSH4 0x482A5DC7 EQ PUSH2 0x2139 JUMPI DUP1 PUSH4 0x4897F4C3 EQ PUSH2 0x210D JUMPI DUP1 PUSH4 0x5164D871 EQ PUSH2 0x203D JUMPI DUP1 PUSH4 0x5E7464F6 EQ PUSH2 0x1FE3 JUMPI DUP1 PUSH4 0x6AD1FE02 EQ PUSH2 0x1F2D JUMPI DUP1 PUSH4 0x718AF7E6 EQ PUSH2 0x1DA3 JUMPI DUP1 PUSH4 0x735DEFFA EQ PUSH2 0x1D54 JUMPI DUP1 PUSH4 0x7417040E EQ PUSH2 0x1D36 JUMPI DUP1 PUSH4 0x7843990A EQ PUSH2 0x1C70 JUMPI DUP1 PUSH4 0x7C4B414D EQ PUSH2 0x1B9E JUMPI DUP1 PUSH4 0x927F6AEE EQ PUSH2 0x1B73 JUMPI DUP1 PUSH4 0x931D81C9 EQ PUSH2 0x15B8 JUMPI DUP1 PUSH4 0xA29F481C EQ PUSH2 0x1522 JUMPI DUP1 PUSH4 0xA525D237 EQ PUSH2 0x14FC JUMPI DUP1 PUSH4 0xAB7589B5 EQ PUSH2 0x14DE JUMPI DUP1 PUSH4 0xABEE6927 EQ PUSH2 0x13B7 JUMPI DUP1 PUSH4 0xB73C6CE9 EQ PUSH2 0x1389 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x134A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1321 JUMPI DUP1 PUSH4 0xC4FBE091 EQ PUSH2 0x1076 JUMPI DUP1 PUSH4 0xCAD925EF EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0xCCC171F5 EQ PUSH2 0x96B JUMPI DUP1 PUSH4 0xCF5B8D4B EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0xD937D456 EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xDA4D4FBF EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xDC25A300 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xE099CF64 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xE9D8479E EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xF1EF7FF2 EQ PUSH2 0x1E8 JUMPI PUSH4 0xF851A440 SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x14 SLOAD DUP3 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x213 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x231 CALLDATASIZE PUSH2 0x28E8 JUMP JUMPDEST SWAP1 PUSH1 0xD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x3EC JUMPI JUMPDEST ISZERO PUSH2 0x3A7 JUMPI PUSH2 0x24E SWAP1 CALLER SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST ISZERO PUSH2 0x36E JUMPI CALLER DUP3 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x329 JUMPI CALLER DUP3 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x325 JUMPI PUSH1 0x64 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x39BC12B3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE CALLER PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x318 JUMPI PUSH2 0x308 JUMPI JUMPDEST PUSH2 0x2D8 PUSH1 0xF SLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH32 0x54DB7A5CB4735E1AAC1F53DB512D3390390BB6637BD30AD4BF9FC98667D9B9B9 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0x311 SWAP2 PUSH2 0x2788 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x2CD JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722063616E206E6F742072656769737465722074776963652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E206761746520697320636C6F7365642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD TIMESTAMP GT ISZERO PUSH2 0x23E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x56A JUMPI PUSH2 0x44F SWAP2 DUP6 SWAP2 PUSH2 0x53B JUMPI JUMPDEST POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x325 JUMPI PUSH1 0xD SLOAD PUSH2 0x325 JUMPI TIMESTAMP DUP3 LT ISZERO DUP1 PUSH2 0x532 JUMPI JUMPDEST ISZERO PUSH2 0x325 JUMPI PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x9 SLOAD DUP1 PUSH2 0x4C2 JUMPI JUMPDEST POP DUP2 PUSH1 0x40 SWAP2 PUSH32 0xAF6E91C17885891414ABBE7FA95074976B3E429980B0D8790034468E69650DD9 SWAP4 PUSH1 0xD SSTORE DUP1 PUSH1 0xE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP2 LT ISZERO PUSH2 0x4CF JUMPI CODESIZE PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726567697374726174696F6E54696D65456E6473203E3D2073616C652E73616C PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1954DD185C9D081A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP2 DUP2 GT PUSH2 0x46E JUMP JUMPDEST PUSH2 0x55D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x563 JUMPI JUMPDEST PUSH2 0x555 DUP2 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29C3 JUMP JUMPDEST CODESIZE PUSH2 0x449 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH1 0x14 SLOAD DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 ADD PUSH1 0x14 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x642 JUMPI POP POP PUSH2 0x5B4 SWAP3 POP SUB DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x15 DUP1 SLOAD DUP1 DUP4 MSTORE SWAP1 DUP5 MSTORE SWAP1 SWAP3 PUSH1 0x20 DUP5 ADD SWAP2 PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x62C JUMPI PUSH2 0x61A DUP6 PUSH2 0x628 DUP9 PUSH2 0x606 DUP2 DUP10 SUB DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x298F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5EB JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x59F JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x681 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x689 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x691 PUSH2 0x2DED JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x928 JUMPI PUSH2 0x6C6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x325 JUMPI PUSH2 0x6E6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x91D JUMPI PUSH2 0x72B SWAP2 DUP7 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x15 SLOAD ISZERO DUP1 PUSH2 0x913 JUMPI JUMPDEST ISZERO PUSH2 0x90F JUMPI DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x90F JUMPI PUSH1 0x16 SLOAD ISZERO PUSH2 0x8A4 JUMPI PUSH3 0x278D00 DUP2 GT PUSH2 0x85F JUMPI PUSH1 0x17 SSTORE DUP3 DUP1 JUMPDEST DUP4 MLOAD DUP6 LT ISZERO PUSH2 0x80F JUMPI PUSH2 0x76E DUP6 DUP6 PUSH2 0x2D51 JUMP JUMPDEST MLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7FB JUMPI SWAP1 PUSH2 0x794 DUP3 PUSH1 0x1 PUSH2 0x7AD SWAP5 ADD PUSH1 0x14 SSTORE PUSH1 0x14 PUSH2 0x28D0 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7B7 DUP6 DUP5 PUSH2 0x2D51 JUMP JUMPDEST MLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7FB JUMPI SWAP2 PUSH2 0x7E2 PUSH2 0x7F3 SWAP3 PUSH2 0x794 DUP6 PUSH1 0x1 DUP1 SWAP8 ADD PUSH1 0x15 SSTORE PUSH1 0x15 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x7EC DUP8 DUP7 PUSH2 0x2D51 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A76 JUMP JUMPDEST SWAP5 ADD SWAP4 PUSH2 0x75B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x16 SLOAD SUB PUSH2 0x81A JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E7420646973747269627574696F6E2069737375652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D616C20736869667420697320333020646179732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665677561726420666F72206D616B696E6720737572652073657453616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65506172616D73206765742066697273742063616C6C65642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD ISZERO PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x957 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x13 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9AB PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9C5 DUP3 PUSH2 0x2756 JUMP JUMPDEST DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x2 DUP6 ADD SLOAD SWAP5 PUSH1 0x40 DUP6 ADD SWAP6 DUP7 MSTORE ADD SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP3 PUSH1 0x20 DUP8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP8 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0xE8E JUMPI PUSH2 0xB1D SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0xE78 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE5F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE46 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE2D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE15 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDFC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDE3 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDCA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDB1 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD98 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD7F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD66 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD4D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD34 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD1B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD02 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCE9 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCD0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCB7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC9E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC85 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC6C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC53 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC3A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC21 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC08 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBEF JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBD6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBBD JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBA4 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xB8B JUMPI JUMPDEST LT PUSH2 0xB7B JUMPI JUMPDEST POP SWAP8 SWAP7 SWAP6 SWAP4 SWAP8 SUB DUP8 PUSH2 0x2788 JUMP JUMPDEST DUP6 PUSH1 0x60 DUP3 ADD MSTORE MLOAD SWAP1 MLOAD SWAP4 MLOAD SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 ADD SWAP4 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xB60 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD ISZERO ISZERO DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0xF8 SHR ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD CODESIZE PUSH2 0xB10 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xF0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xB02 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAFA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAF2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAEA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xADA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xACA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xABA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x98 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAB2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x90 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAAA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x88 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x80 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA9A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x78 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA92 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x70 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA8A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x68 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA82 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x60 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA7A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x58 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA72 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x50 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA6A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x48 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x40 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA5A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x38 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA52 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x30 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA4A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x28 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA42 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 DUP4 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA3A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x18 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA32 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x10 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA2A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA1A JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 DUP7 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO DUP6 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x18 SHR AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x28 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x30 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x38 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x48 SHR AND ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x50 SHR AND ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x58 SHR AND ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x60 SHR AND ISZERO ISZERO PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x68 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x70 SHR AND ISZERO ISZERO PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x78 SHR AND ISZERO ISZERO PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x80 SHR AND ISZERO ISZERO PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x88 SHR AND ISZERO ISZERO PUSH2 0x220 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x90 SHR AND ISZERO ISZERO PUSH2 0x240 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x98 SHR AND ISZERO ISZERO PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x280 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH2 0x2A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND ISZERO ISZERO PUSH2 0x2C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND ISZERO ISZERO PUSH2 0x2E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC0 SHR AND ISZERO ISZERO PUSH2 0x300 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC8 SHR AND ISZERO ISZERO PUSH2 0x320 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH2 0x340 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD8 SHR AND ISZERO ISZERO PUSH2 0x360 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE0 SHR AND ISZERO ISZERO PUSH2 0x380 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE8 SHR AND ISZERO ISZERO PUSH2 0x3A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xF0 SHR AND ISZERO ISZERO PUSH2 0x3C0 DUP4 ADD MSTORE PUSH1 0xF8 SHR ISZERO ISZERO PUSH2 0x3E0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP3 ADD DUP6 SWAP3 SWAP4 SWAP2 PUSH2 0xA02 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1091 PUSH2 0x2812 JUMP JUMPDEST PUSH2 0x1099 PUSH2 0x2828 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0xE4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1316 JUMPI PUSH2 0x10EB SWAP2 DUP12 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP7 PUSH1 0xFF DUP9 PUSH1 0xA0 SHR AND PUSH2 0x12C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP7 ISZERO PUSH2 0x1264 JUMPI DUP4 ISZERO ISZERO DUP1 PUSH2 0x125B JUMPI JUMPDEST DUP1 PUSH2 0x1252 JUMPI JUMPDEST DUP1 PUSH2 0x1249 JUMPI JUMPDEST DUP1 PUSH2 0x1240 JUMPI JUMPDEST ISZERO PUSH2 0x11FB JUMPI PUSH1 0x64 DUP4 LT PUSH2 0x11BD JUMPI PUSH32 0x2CD2DFCDEB2B58C4B80527E9DF5E12DA537FA4F6C958A4FB623A83AB74EEAB63 SWAP9 PUSH1 0x80 SWAP9 PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR PUSH1 0x3 SSTORE DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP4 PUSH1 0x5 SSTORE DUP5 PUSH1 0x6 SSTORE DUP6 PUSH1 0xA SSTORE PUSH1 0xB SSTORE PUSH1 0xC SSTORE PUSH1 0x16 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x53686F756C64206265206174206C656173742031303 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2042616420696E7075740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x1125 JUMP JUMPDEST POP TIMESTAMP DUP2 GT PUSH2 0x111F JUMP JUMPDEST POP TIMESTAMP DUP7 GT PUSH2 0x1119 JUMP JUMPDEST POP DUP5 ISZERO ISZERO PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2053616C65206F776E657220616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x399031B0B7103737BA103132901817 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2053616C6520697320616C72656164792063 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3932B0BA32B217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1375 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x12 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x13AF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x691 PUSH2 0x2E99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x14D3 JUMPI SWAP1 PUSH2 0x140D SWAP2 DUP4 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x14C8 JUMPI JUMPDEST ISZERO PUSH2 0x145D JUMPI DUP1 PUSH1 0x17 SSTORE DUP1 JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP1 PUSH2 0x1453 PUSH2 0x144A DUP6 PUSH2 0x143E PUSH1 0x1 SWAP6 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH2 0x2A76 JUMP JUMPDEST PUSH2 0x794 DUP4 PUSH2 0x2884 JUMP JUMPDEST ADD PUSH2 0x1421 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368696674206D757374206265206E6F6E7A65726F20616E6420736D616C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207468616E206D617856657374696E6754696D6553686966742E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD DUP3 LT PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x689 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x153C PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x157E SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x325 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x15C2 CALLDATASIZE PUSH2 0x28E8 JUMP JUMPDEST SWAP1 PUSH1 0xC SLOAD DUP3 GT PUSH2 0x1B1A JUMPI CALLER DUP4 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AD5 JUMPI DUP2 PUSH2 0x15ED SWAP2 CALLER SWAP1 PUSH2 0x2AEC JUMP JUMPDEST ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x1A76 JUMPI JUMPDEST ISZERO PUSH2 0x1A32 JUMPI CALLER DUP3 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x19ED JUMPI ORIGIN CALLER SUB PUSH2 0x19A8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x15AD JUMPI DUP4 SWAP2 PUSH2 0x196A JUMPI JUMPDEST POP PUSH2 0x166B PUSH2 0x1665 PUSH1 0xFF PUSH2 0x1674 SWAP4 AND PUSH2 0x2CA7 JUMP JUMPDEST CALLVALUE PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0x2ACC JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1930 JUMPI DUP2 GT PUSH2 0x18EC JUMPI PUSH2 0x168D DUP2 PUSH1 0x7 SLOAD PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x169C CALLVALUE PUSH1 0x8 SLOAD PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x14 SLOAD PUSH2 0x16AB DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP1 PUSH2 0x16B9 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH2 0x16C8 PUSH1 0x1F NOT SWAP2 PUSH2 0x291A JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x3 PUSH1 0x40 MLOAD PUSH2 0x16DD DUP2 PUSH2 0x2756 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD CALLVALUE DUP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP5 DUP6 MSTORE CALLER DUP8 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18D8 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x18D8 JUMPI DUP3 SLOAD DUP3 DUP5 SSTORE DUP1 DUP4 LT PUSH2 0x187F JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 DUP6 JUMPDEST DUP4 DUP2 LT PUSH2 0x183A JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x17CF JUMPI JUMPDEST DUP6 PUSH32 0x57D61F3CCD4CCD25EC5D234D6049553A586FAC134C85C98D0B0D9D5724F4E43E PUSH2 0x17C9 DUP8 CALLER DUP5 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x17AE PUSH1 0x10 SLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP3 DUP6 SWAP4 DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x180B JUMPI POP POP POP ADD SSTORE PUSH2 0x17C9 PUSH32 0x57D61F3CCD4CCD25EC5D234D6049553A586FAC134C85C98D0B0D9D5724F4E43E CODESIZE DUP1 PUSH2 0x1766 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 PUSH1 0x20 PUSH2 0x1830 PUSH1 0x1 SWAP3 DUP5 DUP10 MLOAD ISZERO ISZERO SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x17D4 JUMP JUMPDEST DUP7 DUP8 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x1852 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x1751 JUMP JUMPDEST SWAP6 SWAP1 PUSH1 0x20 PUSH2 0x1876 PUSH1 0x1 SWAP3 DUP10 DUP6 MLOAD ISZERO ISZERO SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x183D JUMP JUMPDEST DUP4 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x1F DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 PUSH1 0x1F DUP5 AND DUP1 PUSH2 0x18BB JUMPI JUMPDEST POP JUMPDEST DUP2 DUP2 LT PUSH2 0x18B0 JUMPI POP PUSH2 0x173F JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x18A1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547279696E6720746F20627579206D6F7265207468616E20616C6C6F7765642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E277420627579203020746F6B656E73 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x19A0 JUMPI JUMPDEST DUP2 PUSH2 0x1985 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x325 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x325 JUMPI PUSH2 0x166B PUSH2 0x1652 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792064697265637420636F6E74726163742063616C6C732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722063616E207061727469636970617465206F6E6C79206F6E63652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65206469646E2774207374617274206F72206974277320656E6465642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xA SLOAD TIMESTAMP LT PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E61747572652E20566572696669636174696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x19985A5B1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207265676973746572656420666F7220746869732073616C652E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F77696E67206D6178696D616C2070617274696369706174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x37103337B91039B0B63297 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x15 SLOAD DUP3 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x213 DUP4 PUSH2 0x28B5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1BC4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND PUSH2 0x1C2B JUMPI PUSH1 0xFF PUSH1 0xB8 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xB8 SHL OR PUSH1 0x3 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 MSTORE PUSH2 0x691 SWAP2 PUSH2 0x1C1D PUSH1 0x84 DUP4 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F7369742063616E20626520646F6E65206F6E6C79206F6E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x1CC3 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CFB JUMPI PUSH1 0x20 DUP2 PUSH32 0x4B59D61D9FFDC3DB926D0CE7E06EBABB6BD1BF9DCDAE262667E48BE368227216 SWAP3 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x283934B1B29031B0B7103737BA103132901817 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x1D99 PUSH2 0x1D8B CALLDATASIZE PUSH1 0x4 DUP7 ADD PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x1D93 PUSH2 0x2828 JUMP JUMPDEST SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x928 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x928 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x325 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT PUSH2 0x325 JUMPI SWAP1 DUP3 CALLER DUP5 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP2 DUP5 SWAP1 PUSH1 0x3 DUP5 ADD SWAP2 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x24 DUP2 PUSH1 0x5 SHL DUP4 ADD ADD CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x1ECC JUMPI PUSH1 0xFF PUSH2 0x1E34 DUP3 DUP7 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND ISZERO DUP1 PUSH2 0x1EB3 JUMPI JUMPDEST PUSH2 0x1E51 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP5 PUSH2 0x1EA6 PUSH2 0x1E9D DUP4 PUSH2 0x1E83 PUSH2 0x1E6C PUSH2 0x1EAC SWAP7 DUP11 PUSH2 0x2A99 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH1 0xFF PUSH1 0x1 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1E90 DUP11 SLOAD SWAP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 PUSH2 0x2ACC JUMP JUMPDEST SWAP1 PUSH2 0x2A76 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP PUSH2 0x1EBD DUP2 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR TIMESTAMP LT ISZERO PUSH2 0x1E43 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP5 DUP1 PUSH2 0x1EDB JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x1F15 PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B SWAP4 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1C0 PUSH1 0x3 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP2 PUSH1 0xA SLOAD SWAP4 PUSH1 0xB SLOAD SWAP6 PUSH1 0xC SLOAD SWAP8 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP13 MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP14 ADD MSTORE DUP2 DUP2 PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP14 ADD MSTORE DUP2 DUP2 PUSH1 0xB0 SHR AND ISZERO ISZERO PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0xB8 SHR AND ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2008 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH2 0x628 PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x2090 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 PUSH2 0x209E DUP2 DUP4 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x9 SLOAD GT ISZERO PUSH2 0x20B6 JUMPI PUSH2 0x20B0 SWAP2 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0xE SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20706572696F64206F766572666C6F7773207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x36329039BA30B93A17 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x2127 PUSH2 0x2121 CALLDATASIZE PUSH2 0x283E JUMP JUMPDEST SWAP2 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x1D99 PUSH2 0x214D CALLDATASIZE PUSH2 0x283E JUMP JUMPDEST SWAP2 PUSH2 0x2AEC JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x21A6 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH2 0x21B3 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x2A32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21EB JUMPI PUSH1 0x20 DUP2 PUSH32 0x37CFB0744BDB923D0300A0C37FAC13CFEC5FC2EE313CB9B217D284122980BADA SWAP3 PUSH1 0xC SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574206D61782070617274696369706174696F6E20746F2030 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD TIMESTAMP LT PUSH2 0x23A4 JUMPI PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x235F JUMPI CALLER DUP3 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP2 PUSH1 0xFF PUSH2 0x22A6 DUP3 DUP6 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND ISZERO DUP1 PUSH2 0x2346 JUMPI JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH2 0x1E90 PUSH2 0x1E9D SWAP3 PUSH2 0x22D1 PUSH2 0x1E6C DUP5 PUSH2 0x22DA SWAP8 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH2 0x28B5 JUMP JUMPDEST DUP1 PUSH2 0x1EDB JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320616C72656164792077697468647261776E206F7220706F7274 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x34B7B7103737BA103AB73637B1B5B2B2103CB2BA17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x2350 DUP2 PUSH2 0x2884 JUMP JUMPDEST TIMESTAMP SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR GT ISZERO PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F7274696F6E206964206F7574206F662072616E67652E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E732063616E206E6F742062652077697468647261776E207965742E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x243B SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x25FA JUMPI PUSH1 0x9 SLOAD PUSH2 0x25A6 JUMPI PUSH1 0xE SLOAD DUP2 GT ISZERO PUSH2 0x2544 JUMPI PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x24EE JUMPI TIMESTAMP DUP2 LT PUSH2 0x249D JUMPI PUSH1 0x20 DUP2 PUSH32 0xAAD53C4362EF2FE5A5390CC046E71FD8423A0A8DCEEBC156AC9BBCD15997EEC2 SWAP3 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C6420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x393297 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C64206C657373207468616E2073616C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x456E642074696D65 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C642067726561746572207468616E2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x32B3B4B9BA3930BA34B7B72A34B6B2A2B7323997 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C6553746172743A207374617254696D652069732073657420616C PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3932B0B23C97 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x39B0B6329034B9903737BA1031B932B0BA32B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x26CC SWAP3 PUSH2 0x26AC SWAP2 DUP6 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH2 0x26C3 DUP2 PUSH1 0x9 SLOAD PUSH2 0x26BE DUP2 TIMESTAMP LT PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x2A76 JUMP JUMPDEST DUP1 PUSH1 0x9 SSTORE PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0xA SLOAD GT ISZERO PUSH2 0x26D8 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D652063616E206E6F742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x30B71032B732103A34B6B297 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x928 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x928 JUMPI SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2772 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x280D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x27DD DUP3 PUSH2 0x27AA JUMP JUMPDEST SWAP3 PUSH2 0x27EB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x280D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x280D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x280D JUMPI PUSH2 0x2869 SWAP2 PUSH1 0x4 ADD PUSH2 0x27C6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x280D JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x14 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x15 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x280D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x280D JUMPI PUSH2 0x2913 SWAP2 PUSH1 0x4 ADD PUSH2 0x27C6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2772 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x280D JUMPI DUP2 CALLDATALOAD PUSH2 0x2949 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP3 PUSH2 0x2957 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x280D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x297F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x29AD JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x29A0 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x280D JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x280D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x29E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A39 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x39B0B6329030B63932B0B23C9039BA30B93A32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2A83 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x5 SHR ADD SWAP3 AND SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2A83 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2AD6 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x2B05 SWAP3 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2B3E JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x2B57 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x563 JUMPI PUSH2 0x555 DUP2 DUP4 PUSH2 0x2788 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x2BD8 SWAP2 PUSH2 0x2B57 SWAP4 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP4 MSTORE PUSH1 0x34 DUP3 ADD MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x48 DUP2 MSTORE PUSH2 0x2BA4 PUSH1 0x68 DUP3 PUSH2 0x2788 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 PUSH2 0x2FD4 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x3010 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x28 DUP2 MSTORE PUSH2 0x2C12 PUSH1 0x48 DUP3 PUSH2 0x2788 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x20 PUSH2 0x2B05 PUSH2 0x2BD8 PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP5 PUSH2 0x2FD4 JUMP JUMPDEST ISZERO PUSH2 0x2C62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7953616C654F776E65723A3A2052657374726963746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2D3C JUMPI PUSH1 0x0 SWAP1 PUSH1 0x20 DUP2 LT PUSH1 0x1 AND PUSH1 0x4E DUP3 LT PUSH1 0x1 AND OR PUSH2 0x2D34 JUMPI PUSH1 0xA SWAP2 PUSH1 0x1 SWAP2 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x2CF7 JUMPI POP DUP3 PUSH1 0x0 NOT DIV DUP3 GT PUSH2 0x2CE3 JUMPI POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 DUP1 PUSH1 0x0 NOT DIV DUP2 GT PUSH2 0x2D20 JUMPI PUSH1 0x1 DUP5 AND PUSH2 0x2D17 JUMPI JUMPDEST DUP1 MUL SWAP3 PUSH1 0x1 SHR PUSH2 0x2CCA JUMP JUMPDEST DUP1 SWAP3 MUL SWAP2 PUSH2 0x2D0C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP PUSH1 0xA EXP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2A83 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x2DA6 SWAP2 PUSH2 0x2DA1 PUSH1 0x64 DUP4 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x2F79 JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x2DAF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x39B0B6329034B9903737BA1032B73232B2103CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2DFB PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND PUSH2 0x2E48 JUMPI PUSH1 0xFF PUSH1 0xB0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xB0 SHL OR PUSH1 0x3 SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD DUP1 DUP3 SUB SWAP2 DUP1 DUP4 GT PUSH2 0x2A83 JUMPI SUB PUSH2 0x2E34 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2DA6 SWAP2 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E2774207769746864726177206C6566746F766572207477 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2EA7 PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH2 0x2F28 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH2 0x2EDE DUP6 DUP3 PUSH2 0x2788 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 PUSH1 0x1F NOT DUP7 ADD CALLDATASIZE DUP4 CALLDATACOPY MLOAD SWAP2 CALLER GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x2F22 JUMPI PUSH1 0x0 RETURNDATASIZE SWAP2 PUSH2 0x2F06 DUP4 PUSH2 0x27AA JUMP JUMPDEST SWAP3 PUSH2 0x2F14 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x280D JUMPI JUMP JUMPDEST POP PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E2774207769746864726177206561726E696E6773207477 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x2FCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2FAA JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2FA3 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x3005 JUMPI PUSH2 0x2FFE SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x3098 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x3082 JUMPI DUP1 PUSH2 0x3026 JUMPI POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SUB PUSH2 0x3041 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP2 SUB PUSH2 0x305F JUMPI DUP3 PUSH4 0xFCE698F7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x3 PUSH1 0x0 SWAP3 EQ PUSH2 0x306F JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x3115 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x3109 JUMPI SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 GASLIMIT LOG3 0xBB PUSH0 NOT PUSH10 0x8ECAFBFFC5DD290E615E PUSH20 0x4BABE1627A49B5093E8BC538AE864736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"455:21455:28:-:0;;;;;;;;;;-1:-1:-1;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;780:19;455:21455;;;-1:-1:-1;;;;;455:21455:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;;2582:42;455:21455;2582:42;;;;;455:21455;2582:42;;;:::i;:::-;455:21455;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9573:12;455:21455;9554:15;:54;;:122;;;455:21455;;;;9761:49;9799:10;;9761:49;;:::i;:::-;455:21455;;;9799:10;455:21455;;9885:12;455:21455;;;;;;;;;;9799:10;455:21455;;9885:12;455:21455;;;;;;;-1:-1:-1;;455:21455:28;10000:4;455:21455;;;;;10143:12;455:21455;-1:-1:-1;;;;;455:21455:28;;;;;;;10043:122;;;;;;455:21455;;;;;;;;;;;;;10043:122;;455:21455;10043:122;;455:21455;9799:10;455:21455;;;;;;;;10043:122;;;;;;;;455:21455;10224:34;:32;455:21455;10224:34;:::i;:::-;:32;455:21455;10308:26;455:21455;;;9799:10;455:21455;;10308:26;455:21455;;10043:122;;;;:::i;:::-;;;;;;455:21455;;;;;;;;;;;10043:122;455:21455;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;9554:122;455:21455;9643:33;455:21455;9554:15;9624:52;;9554:122;;455:21455;;;;;;;-1:-1:-1;;455:21455:28;;;;;;;;;;;;;;;3116:5;455:21455;;;;;;;;;;;3116:25;;3130:10;455:21455;3116:25;;455:21455;3116:25;;;;;;3095:106;3116:25;;;;;455:21455;3095:106;;:::i;:::-;455:21455;7989:4;455:21455;;;;;;;8022:12;455:21455;;;8121:15;8094:42;;;:105;;;455:21455;;;;8251:12;455:21455;8227:36;;455:21455;;;8279:14;455:21455;8279:18;8275:153;;455:21455;;;;;8582:125;455:21455;8022:12;455:21455;;8509:33;455:21455;;;;;;;;;;8582:125;455:21455;;8275:153;8321:38;;455:21455;;;8275:153;;;455:21455;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;8094:105;8152:47;;;;8094:105;;3116:25;;;;455:21455;3116:25;455:21455;3116:25;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;455:21455;;;;;;;;;;;;;;;;;;;;;;;;21745:25;455:21455;;;;;;;;21745:25;455:21455;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;21772:24;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:21455:28;;;;;;;;;;;;;;;;;;;;;2973:67;455:21455;;;;;;;;2981:10;:28;2973:67;:::i;:::-;17684:141;;:::i;:::-;;;:::i;:::-;455:21455;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;3116:5;455:21455;;;-1:-1:-1;;;3116:25:28;;3130:10;455:21455;3116:25;;455:21455;;;;;;;;;;;;-1:-1:-1;;;;;455:21455:28;3116:25;;;;;;3095:106;3116:25;;;;;3095:106;;:::i;:::-;4424:24;455:21455;4424:36;:89;;;455:21455;;;;;;;;4541:42;455:21455;;4602:23;455:21455;4602:27;455:21455;;4733:7;4709:31;;455:21455;;4819:42;455:21455;4872:11;;4942:3;455:21455;;4914:26;;;;;4992:18;;;;:::i;:::-;455:21455;4961:25;455:21455;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;4961:25;455:21455;4961:25;455:21455;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;5055:12;;;;:::i;:::-;455:21455;4424:24;455:21455;-1:-1:-1;;;455:21455:28;;;;;;;5082:19;455:21455;;;;;;;4424:24;455:21455;4424:24;455:21455;:::i;:::-;5089:12;;;;:::i;:::-;455:21455;5082:19;;:::i;:::-;4942:3;455:21455;4899:13;;;455:21455;-1:-1:-1;;;455:21455:28;;;;;;;;4914:26;4602:23;455:21455;5130:30;455:21455;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4424:89;455:21455;4476:25;455:21455;4476:37;4424:89;;3116:25;455:21455;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;;;;;-1:-1:-1;;;;;455:21455:28;;:::i;:::-;;;;2482:46;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;;2853:34;455:21455;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;-1:-1:-1;;;;;455:21455:28;;:::i;:::-;;;;21189:19;455:21455;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::ii;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3116:5;455:21455;;;;;;;;;;;3116:25;;3130:10;455:21455;3116:25;;455:21455;3116:25;;;;;;3095:106;3116:25;;;;;3095:106;;:::i;:::-;6108:4;455:21455;;;;;;;;;-1:-1:-1;;;;;455:21455:28;;6197:24;;455:21455;;6325:21;;;:63;;;455:21455;6325:105;;;455:21455;6325:156;;;455:21455;6325:193;;;455:21455;;;;;6586:31;;455:21455;;7154:148;455:21455;;;;;;;;;;;;;;;;;;;;6108:4;455:21455;;-1:-1:-1;;;;;455:21455:28;;;;;;;;;6782:20;455:21455;;6831:25;455:21455;;6890:12;455:21455;6923:21;455:21455;6974:21;455:21455;7067:50;455:21455;;;;;;;;;;;;;;;;;;7154:148;455:21455;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;6325:193;6497:21;;;;6325:193;;:156;6466:15;;6446:35;;6325:156;;:105;6415:15;;6404:26;;6325:105;;:63;6362:26;;;;6325:63;;455:21455;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;3116:25;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;455:21455:28;;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;;;;;-1:-1:-1;;;;;455:21455:28;;:::i;:::-;;;;2386:44;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;2973:67;455:21455;;;;;;;;2981:10;:28;2973:67;:::i;:::-;17873:94;;:::i;455:21455::-;;;;;;;-1:-1:-1;;455:21455:28;;;;;;;3116:25;455:21455;;;;;;3116:5;455:21455;;;;;;;;;;;3116:25;;3130:10;455:21455;3116:25;;455:21455;3116:25;;;;;;;;3095:106;3116:25;;;;;3095:106;;:::i;:::-;5324:15;;;:52;;;455:21455;;;;;5514:23;455:21455;5553:13;5606:3;5572:25;455:21455;5568:36;;;;;5656:28;5625:72;5656:41;:28;;455:21455;5656:28;;:::i;:::-;455:21455;;;;;;5656:41;:::i;:::-;5625:28;;;:::i;:72::-;455:21455;5553:13;;5568:36;;455:21455;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;3116:25;455:21455;;;;;;;;;;;;;;;;5324:52;455:21455;5357:19;455:21455;5343:33;;5324:52;;3116:25;455:21455;;;;;;;;;;;;;;;;;;;;;;;21521:32;455:21455;;;;;;;;;;;;;;;;;;;;2973:67;455:21455;;;;;;;;2981:10;:28;2973:67;:::i;455:21455::-;;;;;;;-1:-1:-1;;455:21455:28;;;;;;:::i;:::-;3116:5;455:21455;;;-1:-1:-1;;;3116:25:28;;3130:10;455:21455;3116:25;;455:21455;;;;;;3116:25;;455:21455;;-1:-1:-1;;;;;455:21455:28;3116:25;;;;;;3095:106;3116:25;;;;;3095:106;;:::i;:::-;7690:4;455:21455;;-1:-1:-1;;;;;455:21455:28;;;;-1:-1:-1;;;;;455:21455:28;-1:-1:-1;;;;;;455:21455:28;;;;;7690:4;455:21455;;;3116:25;455:21455;;;;;;;;;;;;;;:::i;:::-;;12834:21;455:21455;12824:31;;455:21455;;13031:10;455:21455;;13018:12;455:21455;;;;;;;;;;;13031:10;13161:120;13031:10;;13161:120;;:::i;:::-;455:21455;;;12834:21;455:21455;13409:15;:33;;:79;;;455:21455;;;;13031:10;455:21455;;13604:14;455:21455;;;;;;;;;;13735:9;13031:10;13721:23;455:21455;;12834:4;455:21455;;;-1:-1:-1;;;13905:46:28;;455:21455;;;;;;;;;-1:-1:-1;;;;;455:21455:28;13905:46;;;;;;;;;;;455:21455;;13881:70;455:21455;;13881:91;455:21455;;;:::i;:::-;13882:9;13881:70;:::i;:::-;13952:20;455:21455;13881:91;;:::i;:::-;14030:24;;;455:21455;;14148:30;;455:21455;;14312:41;455:21455;14312:20;455:21455;14312:41;:::i;:::-;:20;455:21455;14427:29;13882:9;14427:19;455:21455;14427:29;:::i;:::-;:19;455:21455;14527:25;455:21455;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;12834:4;455:21455;;;;;:::i;:::-;;;;;14644:199;;13882:9;455:21455;;;14644:199;;13409:15;;455:21455;;14644:199;;;455:21455;;;13031:10;455:21455;;14893:19;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;13952:20;455:21455;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;13031:10;15113:44;;13031:10;;455:21455;;13604:14;455:21455;;;;;;;;;;;;;;15075:22;;455:21455;15075:22;:::i;:::-;;455:21455;;;;13031:10;455:21455;;;;;;;;;;;;;;;;;15113:44;;;;455:21455;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;15113:44;;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13952:20;455:21455;;;;;13952:20;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12834:4;455:21455;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;13018:12;455:21455;;;;-1:-1:-1;;;455:21455:28;;;;;;;13905:46;;;455:21455;13905:46;;455:21455;13905:46;;;;;;455:21455;13905:46;;;:::i;:::-;;;455:21455;;;;;;;;;;;;13881:70;13905:46;;;;;-1:-1:-1;13905:46:28;;455:21455;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13409:79;455:21455;13476:12;455:21455;13409:15;13458:30;13409:79;;455:21455;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;;2684:41;455:21455;2684:41;;;;;455:21455;2684:41;;;:::i;455:21455::-;;;;;;;;;;;;;2973:67;455:21455;;;;;;;;2981:10;:28;2973:67;:::i;:::-;12396:4;455:21455;;;;;;;;-1:-1:-1;;;;455:21455:28;;-1:-1:-1;;;455:21455:28;12396:4;455:21455;12600:25;455:21455;;;-1:-1:-1;;;1745:53:12;;;;2981:10:28;1745:53:12;;;455:21455:28;12581:4;455:21455;;;;;;;;;;;;1745:53:12;;;;;;;455:21455:28;1745:53:12;:::i;:::-;-1:-1:-1;;;;;455:21455:28;1745:53:12;:::i;455:21455:28:-;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;3116:25;455:21455;;;;;;3116:5;455:21455;;;;;;;;;;;3116:25;;3130:10;455:21455;3116:25;;455:21455;3116:25;;;;;;3095:106;3116:25;;;;;3095:106;;:::i;:::-;10760:9;;455:21455;;;;10906:20;455:21455;10863:20;455:21455;;;;;;10906:20;455:21455;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;3116:25;455:21455;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;2194:35;455:21455;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16441:27;;16525:10;455:21455;;16505:19;455:21455;;;;;16552:10;;16742:20;;;;16547:652;16587:3;16564:21;;;;;;455:21455;;;;;;;;16673:24;455:21455;16661:43;;455:21455;;;;16742:31;;;;:::i;:::-;455:21455;;;16742:20;455:21455;;;16741:32;:103;;;16587:3;16720:469;;16587:3;;455:21455;;16552:10;;16720:469;455:21455;16877:31;;16961:74;:50;16877:31;455:21455;16877:31;17141:33;16877:31;;;:::i;:::-;455:21455;;;;;;;;;;;;;;;;;;;;;;16976:35;455:21455;;16976:35;;:::i;:::-;455:21455;;;16742:20;455:21455;;16961:50;;:::i;:::-;17012:23;455:21455;16961:74;;:::i;:::-;17141:33;;:::i;:::-;16720:469;;;;16741:103;16789:36;;;;:::i;:::-;455:21455;;;16742:20;455:21455;;16829:15;-1:-1:-1;16789:55:28;16741:103;;455:21455;;;;16564:21;;;17213:19;17209:165;;455:21455;;;17209:165;17319:44;16525:10;17284:15;17319:44;16525:10;;455:21455;;;;;16742:20;455:21455;;17284:15;:::i;:::-;455:21455;;;16525:10;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2065:16;455:21455;;;;;;;;;2065:16;455:21455;2065:16;455:21455;2065:16;455:21455;2065:16;455:21455;2065:16;455:21455;;2065:16;455:21455;;2065:16;455:21455;;2065:16;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;-1:-1:-1;;;;;455:21455:28;;:::i;:::-;;;;2276:60;455:21455;;;;;;2276:60;;;;455:21455;2276:60;;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;3116:25;455:21455;;;;;;3116:5;455:21455;;;;;;;;;;;3116:25;;3130:10;455:21455;3116:25;;455:21455;3116:25;;;;;;3095:106;3116:25;;;;;3095:106;;:::i;:::-;11584:33;455:21455;11584:43;;;;;:::i;:::-;11642:14;455:21455;-1:-1:-1;455:21455:28;;;11770:43;;;:::i;:::-;11584:33;455:21455;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;3116:25;455:21455;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;455:21455:28;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;455:21455:28;;;;;;3116:25;455:21455;;;;;;3116:5;455:21455;;;;;;;;;;;3116:25;;3130:10;455:21455;3116:25;;455:21455;3116:25;;;;;;3095:106;3116:25;;;;;3095:106;;:::i;:::-;11974:100;12013:14;455:21455;11995:15;:32;11974:100;:::i;:::-;12093:7;;455:21455;;;;12191:42;455:21455;12148:21;455:21455;;;;;;12191:42;455:21455;;;;;;;;;;;;;;;;;3116:25;455:21455;;;;;;;;;;;;;;;;;;;;;;2107:32;455:21455;2107:32;455:21455;2107:32;455:21455;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;15316:21;455:21455;15297:15;:40;455:21455;;15438:24;455:21455;15426:43;;455:21455;;;15576:10;455:21455;;15556:19;455:21455;;;;;15316:4;15616:20;;:31;455:21455;15616:31;;;;:::i;:::-;455:21455;;;15316:4;455:21455;;;15615:32;:99;;;455:21455;15598:663;;;15834:35;15819:50;15739:31;455:21455;15739:31;;15819:74;15739:31;;:::i;455:21455::-;;;;15834:35;;:::i;15819:74::-;15978:21;15974:183;;15598:663;455:21455;;15598:663;455:21455;;-1:-1:-1;;;16187:63:28;;455:21455;;16187:63;;455:21455;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;16187:63;;;15615:99;15659:36;;;;:::i;:::-;15297:15;455:21455;;;15316:4;455:21455;;15659:55;;15615:99;;455:21455;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;;;3116:25;455:21455;;;;;;3116:5;455:21455;;;;;;;;;;;3116:25;;3130:10;455:21455;3116:25;;455:21455;3116:25;;;;;;3095:106;3116:25;;;;;3095:106;;:::i;:::-;455:21455;8811:4;455:21455;;;;;;;8868:14;455:21455;;;8959:33;455:21455;8948:44;;455:21455;;;9078:12;455:21455;9067:23;;455:21455;;;9165:15;9153:27;;455:21455;;;;9293:28;455:21455;8868:14;455:21455;;;;;;9293:28;455:21455;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;3116:25;455:21455;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;3116:25;455:21455;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;3116:25;455:21455;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;3116:25;455:21455;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;3116:25;455:21455;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;2779:38;455:21455;;;;;;;;;;;;;;-1:-1:-1;;455:21455:28;;;;3116:25;455:21455;;;;;;;;3116:5;455:21455;;;;;;;;;;;3116:25;;3130:10;455:21455;3116:25;;455:21455;3116:25;;;;;;;11296:28;3116:25;3095:106;3116:25;;;;;3095:106;;:::i;:::-;11239:26;455:21455;11106:14;455:21455;11067:100;11088:15;;:32;11067:100;:::i;:::-;11239:26;:::i;:::-;455:21455;11106:14;455:21455;11296:28;:::i;:::-;11327:12;455:21455;-1:-1:-1;455:21455:28;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;3116:25;455:21455;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;455:21455:28;;;;;-1:-1:-1;455:21455:28;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;455:21455:28;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;455:21455:28;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;455:21455:28;;;;;;-1:-1:-1;;;;;455:21455:28;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;455:21455:28;;;;;;:::o;:::-;;-1:-1:-1;;455:21455:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;455:21455:28;;;;;;;;;;:::o;:::-;15659:25;455:21455;;;;;;15659:25;-1:-1:-1;455:21455:28;;-1:-1:-1;455:21455:28;;;-1:-1:-1;455:21455:28;:::o;:::-;;;;;;;;;;;;;15438:24;455:21455;;;;;;15438:24;-1:-1:-1;455:21455:28;;-1:-1:-1;455:21455:28;;;-1:-1:-1;455:21455:28;:::o;:::-;;;;;;;;-1:-1:-1;455:21455:28;;-1:-1:-1;455:21455:28;;;-1:-1:-1;455:21455:28;:::o;:::-;;-1:-1:-1;;455:21455:28;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:21455:28;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:21455:28;;;-1:-1:-1;455:21455:28;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;19869:326;20042:5;455:21455;-1:-1:-1;;;;;455:21455:28;;;;20069:109;;;:::i;:::-;455:21455;;-1:-1:-1;;;20042:146:28;;-1:-1:-1;;;;;455:21455:28;;;20042:146;;;455:21455;;;;20042:146;;455:21455;;20042:146;;;;;;;-1:-1:-1;20042:146:28;;;20027:161;19869:326;:::o;20042:146::-;;;;455:21455;20042:146;455:21455;20042:146;;;;;;;:::i;:::-;19869:326;:::o;20042:146::-;455:21455;;;-1:-1:-1;455:21455:28;;;;;20488:426;3871:27:16;20488:426:28;3927:8:16;20488:426:28;455:21455;;20682:107;;;;455:21455;-1:-1:-1;;;;;455:21455:28;;;;;;;;;;;20770:4;455:21455;;;;;;20682:107;;;;;;;:::i;:::-;455:21455;20659:140;;1324:325:17;-1:-1:-1;1324:325:17;;;;-1:-1:-1;1324:325:17;3871:27:16;:::i;:::-;3927:8;;;;;:::i;19458:348:28:-;;455:21455;;19629:37;;;455:21455;-1:-1:-1;;;;;455:21455:28;;;;;;;19660:4;455:21455;;;;;;19629:37;;;;;;;:::i;:::-;455:21455;19606:70;;1324:325:17;-1:-1:-1;1324:325:17;;;19629:37:28;3927:8:16;3871:27;1324:325:17;-1:-1:-1;1324:325:17;455:21455:28;;;;;;19754:5;455:21455;;3871:27:16;;:::i;455:21455:28:-;;;;:::o;:::-;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13898:2;;455:21455;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;13898:2;455:21455;;:::o;:::-;;;;:::o;:::-;-1:-1:-1;;455:21455:28;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;1219:160:12:-;455:21455:28;;-1:-1:-1;;;1328:43:12;;;;-1:-1:-1;;;;;455:21455:28;;;;1328:43:12;;;455:21455:28;;;;;;;;;1328:43:12;;;;;;455:21455:28;;1328:43:12;:::i;:::-;;:::i;:::-;1219:160::o;455:21455:28:-;;;;:::o;:::-;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;18673:550;18760:66;18787:12;455:21455;18768:15;:31;;18760:66;:::i;:::-;18787:4;455:21455;;;;;;;;-1:-1:-1;;;;455:21455:28;;-1:-1:-1;;;455:21455:28;18787:4;455:21455;19072:25;455:21455;18787:12;455:21455;;;;;;;;;;19133:12;19129:88;;18673:550;;:::o;19129:88::-;19197:8;;19185:10;;-1:-1:-1;;;;;455:21455:28;19197:8;:::i;455:21455::-;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;18152:478;18239:66;18266:12;455:21455;18247:15;:31;;18239:66;:::i;:::-;18266:4;455:21455;;;;;;;;-1:-1:-1;;;;455:21455:28;-1:-1:-1;;;455:21455:28;18266:4;455:21455;18553:19;455:21455;;;;;-1:-1:-1;;;;455:21455:28;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;455:21455:28;;;;;17524:36;18599:10;;17524:36;;;455:21455;;;;-1:-1:-1;455:21455:28;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;18152:478::o;455:21455::-;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;;;;;;;;;;;-1:-1:-1;;;455:21455:28;;;;;;;7686:720:12;;-1:-1:-1;7823:421:12;7686:720;7823:421;;;;;;;;;;;;-1:-1:-1;7823:421:12;;8258:15;;-1:-1:-1;;;;;;455:21455:28;;8276:26:12;:31;8258:68;8254:146;;7686:720;:::o;8254:146::-;-1:-1:-1;;;;8349:40:12;;;-1:-1:-1;;;;;455:21455:28;;;;8349:40:12;455:21455:28;;;8349:40:12;8258:68;8325:1;8310:16;;8258:68;;2129:778:16;455:21455:28;;;2129:778:16;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:16;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;7280:532::-;;;;455:21455:28;;;;;;7366:29:16;;;7411:7;;;:::o;7362:444::-;7375:20;455:21455:28;7462:38:16;;455:21455:28;;7523:23:16;;;7375:20;7523:23;455:21455:28;7375:20:16;7523:23;7458:348;-1:-1:-1;7576:35:16;7567:44;;7576:35;;7634:46;;;;7375:20;7634:46;455:21455:28;;;7375:20:16;7634:46;7563:243;455:21455:28;;7710:30:16;7375:20;7701:39;;7697:109;;7563:243;;7280:532::o;7697:109::-;-1:-1:-1;;;7763:32:16;;455:21455:28;;;;-1:-1:-1;7763:32:16;455:21455:28;;;;7375:20:16;455:21455:28;;;;;7375:20:16;455:21455:28;5203:1551:16;;;6283:66;6270:79;;6266:164;;455:21455:28;;;;;;-1:-1:-1;455:21455:28;;;;;;;;;;;;;;;;;;;6541:24:16;;;;;;;;;-1:-1:-1;6541:24:16;-1:-1:-1;;;;;455:21455:28;;6579:20:16;6575:113;;6698:49;-1:-1:-1;6698:49:16;-1:-1:-1;5203:1551:16;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:16;6541:24;6615:62;-1:-1:-1;6615:62:16;:::o;6266:164::-;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o"},"methodIdentifiers":{"admin()":"f851a440","allocationStakingContract()":"059ea172","checkParticipationSignature(bytes,address,uint256)":"482a5dc7","checkRegistrationSignature(bytes,address)":"735deffa","depositTokens()":"7c4b414d","extendRegistrationPeriod(uint256)":"5164d871","factory()":"c45a0155","getNumberOfRegisteredUsers()":"ab7589b5","getParticipation(address)":"cad925ef","getParticipationSigner(bytes,address,uint256)":"4897f4c3","getVestingInfo()":"dc25a300","isParticipated(address)":"cf5b8d4b","isRegistered(address)":"c3c5a547","maxVestingTimeShift()":"ccc171f5","numberOfParticipants()":"7417040e","participate(bytes,uint256)":"931d81c9","portionVestingPrecision()":"2a7c35de","postponeSale(uint256)":"1f11cb1e","registerForSale(bytes,uint256)":"e9d8479e","registration()":"443bd1d0","sale()":"6ad1fe02","setCap(uint256)":"47786d37","setRegistrationTime(uint256,uint256)":"e099cf64","setSaleParams(address,address,uint256,uint256,uint256,uint256,uint256,uint256)":"c4fbe091","setSaleStart(uint256)":"2f181f54","setSaleToken(address)":"a29f481c","setVestingParams(uint256[],uint256[],uint256)":"d937d456","shiftVestingUnlockingTimes(uint256)":"abee6927","updateTokenPriceInETH(uint256)":"7843990a","userToParticipation(address)":"5e7464f6","vestingPercentPerPortion(uint256)":"927f6aee","vestingPortionsUnlockTime(uint256)":"f1ef7ff2","withdrawEarnings()":"b73c6ce9","withdrawEarningsAndLeftover()":"da4d4fbf","withdrawLeftover()":"a525d237","withdrawMultiplePortions(uint256[])":"718af7e6","withdrawTokens(uint256)":"315a095d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_allocationStaking\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxParticipation\",\"type\":\"uint256\"}],\"name\":\"MaxParticipationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationTimeStarts\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"registrationTimeEnds\",\"type\":\"uint256\"}],\"name\":\"RegistrationTimeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenPriceInETH\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOfTokensToSell\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saleEnd\",\"type\":\"uint256\"}],\"name\":\"SaleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"StartTimeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"TokenPriceSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"UserRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"contract IAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationStakingContract\",\"outputs\":[{\"internalType\":\"contract IAllocationStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"checkParticipationSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkRegistrationSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeToAdd\",\"type\":\"uint256\"}],\"name\":\"extendRegistrationPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract ISalesFactory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfRegisteredUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getParticipation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getParticipationSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVestingInfo\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isParticipated\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxVestingTimeShift\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfParticipants\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"participate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"portionVestingPrecision\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeToShift\",\"type\":\"uint256\"}],\"name\":\"postponeSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"}],\"name\":\"registerForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"registrationTimeStarts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registrationTimeEnds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"numberOfRegistrants\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sale\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isCreated\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"earningsWithdrawn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"leftoverWithdrawn\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"tokensDeposited\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"saleOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenPriceInETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOfTokensToSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalTokensSold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalETHRaised\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saleEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokensUnlockTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxParticipation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cap\",\"type\":\"uint256\"}],\"name\":\"setCap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_registrationTimeStarts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_registrationTimeEnds\",\"type\":\"uint256\"}],\"name\":\"setRegistrationTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_saleOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPriceInETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountOfTokensToSell\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_saleEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_tokensUnlockTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_portionVestingPrecision\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxParticipation\",\"type\":\"uint256\"}],\"name\":\"setSaleParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"starTime\",\"type\":\"uint256\"}],\"name\":\"setSaleStart\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"saleToken\",\"type\":\"address\"}],\"name\":\"setSaleToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_unlockingTimes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_percents\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_maxVestingTimeShift\",\"type\":\"uint256\"}],\"name\":\"setVestingParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeToShift\",\"type\":\"uint256\"}],\"name\":\"shiftVestingUnlockingTimes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"updateTokenPriceInETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userToParticipation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHPaid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeParticipated\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestingPercentPerPortion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"vestingPortionsUnlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEarnings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEarningsAndLeftover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLeftover\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"portionIds\",\"type\":\"uint256[]\"}],\"name\":\"withdrawMultiplePortions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"portionId\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"checkRegistrationSignature(bytes,address)\":{\"params\":{\"signature\":\"is the message signed by the trusted entity (backend)\",\"user\":\"is the address of user which is registering for sale\"}},\"getParticipationSigner(bytes,address,uint256)\":{\"params\":{\"amount\":\"is the maximal amount of tokens user can buy\",\"signature\":\"is the message allowing user to participate in sale\",\"user\":\"is the address of user for which we're signing the message\"}},\"registerForSale(bytes,uint256)\":{\"params\":{\"signature\":\"is the message signed by the backend\"}},\"updateTokenPriceInETH(uint256)\":{\"details\":\"This will be updated with an oracle during the sale every N minutes, so the users will always             pay initialy set $ value of the token. This is to reduce reliance on the ETH volatility.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkRegistrationSignature(bytes,address)\":{\"notice\":\"Check signature user submits for registration.\"},\"extendRegistrationPeriod(uint256)\":{\"notice\":\"Function to extend registration period\"},\"getNumberOfRegisteredUsers()\":{\"notice\":\"Function to get number of registered users for sale\"},\"getParticipation(address)\":{\"notice\":\"Function to get participation for passed user address\"},\"getParticipationSigner(bytes,address,uint256)\":{\"notice\":\"Check who signed the message\"},\"getVestingInfo()\":{\"notice\":\"Function to get all info about vesting.\"},\"postponeSale(uint256)\":{\"notice\":\"Admin function to postpone the sale\"},\"registerForSale(bytes,uint256)\":{\"notice\":\"Registration for sale.\"},\"setCap(uint256)\":{\"notice\":\"Admin function to set max participation before sale start\"},\"setRegistrationTime(uint256,uint256)\":{\"notice\":\"Function to set registration period parameters\"},\"setSaleParams(address,address,uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"Admin function to set sale parameters\"},\"setVestingParams(uint256[],uint256[],uint256)\":{\"notice\":\"Function to set vesting params\"},\"updateTokenPriceInETH(uint256)\":{\"notice\":\"Admin function, to update token price before sale to match the closest $ desired rate.\"},\"withdrawEarningsAndLeftover()\":{\"notice\":\"Function to withdraw all the earnings and the leftover of the sale contract.\"},\"withdrawTokens(uint256)\":{\"notice\":\"Users can claim their participation\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sales/C2NSale.sol\":\"C2NSale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da\",\"dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/interfaces/IAdmin.sol\":{\"keccak256\":\"0x2d2739983345ed7a53de2c007704877d198de574c0b405e2dc93518189c42cbc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccee90c17b4de2e7aa7d041302c03a1f0761cd431b4c1d13efdc7b9aabf48c7b\",\"dweb:/ipfs/QmNksD3G6SxU9qDP3oFBP5iQYAGk3YAppJQK8gPsJXGcvN\"]},\"contracts/interfaces/IAllocationStaking.sol\":{\"keccak256\":\"0xfc71214fdf8b8f9e02eadeecabaf2ff7b87d06b3b31525d4aa83cd65c1f5bed8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9d46e23c611c581fee00fe8921376998a0736804d4210f9eec8767d18560144a\",\"dweb:/ipfs/QmcsTt1RpoE68LzqQhYLRn73SoRM1v1pEBgFdiioujM4qh\"]},\"contracts/interfaces/ISalesFactory.sol\":{\"keccak256\":\"0x3edbcf61a2b14b34b0135456b1bf1a7d4d4ca9a16964eaf7b7f94b30fa55edb7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://263ef46c15246701be0c6bdc278c6d7aa5e11d45ec9e72be98704ba73c520fbd\",\"dweb:/ipfs/QmQp5t5m4ZQPz4v4QYDAt5vDxB5z1jsyCdMopupmsiFRTc\"]},\"contracts/sales/C2NSale.sol\":{\"keccak256\":\"0xa969981c011765cb4b2b8f62a47c4d9f51b62c0ba3cdeadd8214d5a796afeb80\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4dfc7d7046290048a6087923113b88dd002517929b91eecc3447958913743e16\",\"dweb:/ipfs/QmVakwk6eruZqrAa8zsyRSFcEe3Z9nT2q8KCYqBL1R7eVg\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":9319,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"allocationStakingContract","offset":0,"slot":"0","type":"t_contract(IAllocationStaking)8154"},{"astId":9322,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"factory","offset":0,"slot":"1","type":"t_contract(ISalesFactory)8171"},{"astId":9325,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"admin","offset":0,"slot":"2","type":"t_contract(IAdmin)8133"},{"astId":9375,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"sale","offset":0,"slot":"3","type":"t_struct(Sale)9355_storage"},{"astId":9378,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"registration","offset":0,"slot":"13","type":"t_struct(Registration)9372_storage"},{"astId":9380,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"numberOfParticipants","offset":0,"slot":"16","type":"t_uint256"},{"astId":9385,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"userToParticipation","offset":0,"slot":"17","type":"t_mapping(t_address,t_struct(Participation)9365_storage)"},{"astId":9389,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"isRegistered","offset":0,"slot":"18","type":"t_mapping(t_address,t_bool)"},{"astId":9393,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"isParticipated","offset":0,"slot":"19","type":"t_mapping(t_address,t_bool)"},{"astId":9396,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"vestingPortionsUnlockTime","offset":0,"slot":"20","type":"t_array(t_uint256)dyn_storage"},{"astId":9399,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"vestingPercentPerPortion","offset":0,"slot":"21","type":"t_array(t_uint256)dyn_storage"},{"astId":9401,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"portionVestingPrecision","offset":0,"slot":"22","type":"t_uint256"},{"astId":9403,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"maxVestingTimeShift","offset":0,"slot":"23","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_bool)dyn_storage":{"base":"t_bool","encoding":"dynamic_array","label":"bool[]","numberOfBytes":"32"},"t_array(t_uint256)dyn_storage":{"base":"t_uint256","encoding":"dynamic_array","label":"uint256[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IAdmin)8133":{"encoding":"inplace","label":"contract IAdmin","numberOfBytes":"20"},"t_contract(IAllocationStaking)8154":{"encoding":"inplace","label":"contract IAllocationStaking","numberOfBytes":"20"},"t_contract(IERC20)1466":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_contract(ISalesFactory)8171":{"encoding":"inplace","label":"contract ISalesFactory","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_struct(Participation)9365_storage)":{"encoding":"mapping","key":"t_address","label":"mapping(address => struct C2NSale.Participation)","numberOfBytes":"32","value":"t_struct(Participation)9365_storage"},"t_struct(Participation)9365_storage":{"encoding":"inplace","label":"struct C2NSale.Participation","members":[{"astId":9357,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"amountBought","offset":0,"slot":"0","type":"t_uint256"},{"astId":9359,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"amountETHPaid","offset":0,"slot":"1","type":"t_uint256"},{"astId":9361,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"timeParticipated","offset":0,"slot":"2","type":"t_uint256"},{"astId":9364,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"isPortionWithdrawn","offset":0,"slot":"3","type":"t_array(t_bool)dyn_storage"}],"numberOfBytes":"128"},"t_struct(Registration)9372_storage":{"encoding":"inplace","label":"struct C2NSale.Registration","members":[{"astId":9367,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"registrationTimeStarts","offset":0,"slot":"0","type":"t_uint256"},{"astId":9369,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"registrationTimeEnds","offset":0,"slot":"1","type":"t_uint256"},{"astId":9371,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"numberOfRegistrants","offset":0,"slot":"2","type":"t_uint256"}],"numberOfBytes":"96"},"t_struct(Sale)9355_storage":{"encoding":"inplace","label":"struct C2NSale.Sale","members":[{"astId":9328,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"token","offset":0,"slot":"0","type":"t_contract(IERC20)1466"},{"astId":9330,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"isCreated","offset":20,"slot":"0","type":"t_bool"},{"astId":9332,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"earningsWithdrawn","offset":21,"slot":"0","type":"t_bool"},{"astId":9334,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"leftoverWithdrawn","offset":22,"slot":"0","type":"t_bool"},{"astId":9336,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"tokensDeposited","offset":23,"slot":"0","type":"t_bool"},{"astId":9338,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"saleOwner","offset":0,"slot":"1","type":"t_address"},{"astId":9340,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"tokenPriceInETH","offset":0,"slot":"2","type":"t_uint256"},{"astId":9342,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"amountOfTokensToSell","offset":0,"slot":"3","type":"t_uint256"},{"astId":9344,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"totalTokensSold","offset":0,"slot":"4","type":"t_uint256"},{"astId":9346,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"totalETHRaised","offset":0,"slot":"5","type":"t_uint256"},{"astId":9348,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"saleStart","offset":0,"slot":"6","type":"t_uint256"},{"astId":9350,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"saleEnd","offset":0,"slot":"7","type":"t_uint256"},{"astId":9352,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"tokensUnlockTime","offset":0,"slot":"8","type":"t_uint256"},{"astId":9354,"contract":"contracts/sales/C2NSale.sol:C2NSale","label":"maxParticipation","offset":0,"slot":"9","type":"t_uint256"}],"numberOfBytes":"320"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/sales/SalesFactory.sol":{"SalesFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_adminContract","type":"address"},{"internalType":"address","name":"_allocationStaking","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"saleContract","type":"address"}],"name":"SaleDeployed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sale","type":"address"},{"indexed":false,"internalType":"address","name":"saleOwner","type":"address"},{"indexed":false,"internalType":"address","name":"saleToken","type":"address"}],"name":"SaleOwnerAndTokenSetInFactory","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"contract IAdmin","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allSales","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allocationStaking","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deploySale","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"startIndex","type":"uint256"},{"internalType":"uint256","name":"endIndex","type":"uint256"}],"name":"getAllSales","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastDeployedSale","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumberOfSalesDeployed","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"isSaleCreatedThroughFactory","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"saleOwnerToSale","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_allocationStaking","type":"address"}],"name":"setAllocationStaking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"tokenToSale","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":161,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608034608657601f6139aa38819003918201601f19168301916001600160401b03831184841017608b578084926040948552833981010312608657604b602060458360a1565b920160a1565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556040516138f590816100b58239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360865756fe608080604052600436101561001357600080fd5b60003560e01c908163135fb5041461057d57508063209a9f411461055f57806324be4a50146105195780635b30b428146104d75780639af2c4811461044b5780639c0ad5ed146104055780639e75cf45146102b3578063a00249e814610270578063b033342b14610243578063c050f3d4146100c65763f851a4401461009857600080fd5b346100c15760003660031901126100c1576000546040516001600160a01b039091168152602090f35b600080fd5b346100c15760003660031901126100c157600054604051630935e01b60e21b81523360048201526001600160a01b0390911690602081602481855afa80156102085761011a91600091610214575b506105f6565b600154604051919061322d90818401906001600160a01b031667ffffffffffffffff8211858310176101f25760409385936106938539825260208201520301906000f08015610208576001600160a01b03166000818152600260205260409020805460ff19166001179055600554680100000000000000008110156101f2577f65c0ac3f6aa97317ad1e9f6c73af709aad47dc12a97239e1b08a43a73195f7e0916101cd826001602094016005556105a1565b81546001600160a01b0360039290921b91821b19169083901b179055604051908152a1005b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b610236915060203d60201161023c575b61022e81836105bc565b8101906105de565b83610114565b503d610224565b346100c15760003660031901126100c157602061025e61065a565b6040516001600160a01b039091168152f35b346100c15760203660031901126100c1576004356001600160a01b038116908190036100c1576000526002602052602060ff604060002054166040519015158152f35b346100c15760403660031901126100c157600435602435818111156103d457818103918183116103a8576102ff6102e984610642565b936102f760405195866105bc565b808552610642565b602084019290601f190136843760005b8183106103645783856040519182916020830190602084525180915260408301919060005b818110610342575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610334565b61036d836105a1565b9054865160039290921b1c6001600160a01b0316908210156103be5760208260051b8701015260001981146103a8576001928301920161030f565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b8152602060048201526009602482015268109859081a5b9c1d5d60ba1b6044820152606490fd5b346100c15760203660031901126100c1576004356001600160a01b038116908190036100c1576000526004602052602060018060a01b0360406000205416604051908152f35b346100c15760203660031901126100c1576004356001600160a01b038116908190036100c157600054604051630935e01b60e21b815233600482015290602090829060249082906001600160a01b03165afa8015610208576104b49160009161021457506105f6565b80156100c1576bffffffffffffffffffffffff60a01b6001541617600155600080f35b346100c15760203660031901126100c1576004356005548110156100c1576105006020916105a1565b905460405160039290921b1c6001600160a01b03168152f35b346100c15760203660031901126100c1576004356001600160a01b038116908190036100c1576000526003602052602060018060a01b0360406000205416604051908152f35b346100c15760003660031901126100c1576020600554604051908152f35b346100c15760003660031901126100c1576001546001600160a01b03168152602090f35b6005548110156103be57600560005260206000200190600090565b90601f8019910116810190811067ffffffffffffffff8211176101f257604052565b908160209103126100c1575180151581036100c15790565b156105fd57565b60405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792041646d696e2063616e206465706c6f792073616c657300000000006044820152606490fd5b67ffffffffffffffff81116101f25760051b60200190565b600554806106685750600090565b60001981019081116103a85761067d906105a1565b905460039190911b1c6001600160a01b03169056fe60803460a757601f61322d38819003918201601f19168301916001600160401b0383118484101760ac57808492604094855283398101031260a757604b602060458360c2565b920160c2565b6001600160a01b0390911690811560a7576001600160a01b031690811560a757600280546001600160a01b0319908116929092179055600180548216331790556000805490911691909117905560405161315790816100d68239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360a75756fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163059ea17214612732575080631f11cb1e146126545780632a7c35de146126365780632f181f54146123e8578063315a095d14612261578063443bd1d01461222f57806347786d3714612153578063482a5dc7146121395780634897f4c31461210d5780635164d8711461203d5780635e7464f614611fe35780636ad1fe0214611f2d578063718af7e614611da3578063735deffa14611d545780637417040e14611d365780637843990a14611c705780637c4b414d14611b9e578063927f6aee14611b73578063931d81c9146115b8578063a29f481c14611522578063a525d237146114fc578063ab7589b5146114de578063abee6927146113b7578063b73c6ce914611389578063c3c5a5471461134a578063c45a015514611321578063c4fbe09114611076578063cad925ef14610989578063ccc171f51461096b578063cf5b8d4b1461092c578063d937d45614610694578063da4d4fbf1461065b578063dc25a30014610575578063e099cf64146103f8578063e9d8479e14610222578063f1ef7ff2146101e85763f851a4400361000f57346101e557806003193601126101e5576002546040516001600160a01b039091168152602090f35b80fd5b50346101e55760203660031901126101e557600435906014548210156101e557602061021383612884565b90549060031b1c604051908152f35b50346101e557610231366128e8565b90600d54421015806103ec575b156103a75761024e903390612be1565b1561036e57338252601260205260ff60408320541661032957338252601260205260408220805460ff191660011790558154600a546001600160a01b0391909116918391833b1561032557606483928360405196879485936339bc12b360e21b8552600485015233602485015260448401525af1801561031857610308575b6102d8600f54612d42565b600f557f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b96020604051338152a180f35b61031191612788565b38816102cd565b50604051903d90823e3d90fd5b8280fd5b60405162461bcd60e51b815260206004820152601c60248201527f557365722063616e206e6f742072656769737465722074776963652e000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e206761746520697320636c6f7365642e000000006044820152606490fd5b50600e5442111561023e565b50346101e55760403660031901126101e5576004356024356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa801561056a5761044f91859161053b575b506129db565b60ff60035460a01c161561032557600d54610325574282101580610532575b1561032557600a5481101561032557600954806104c2575b50816040917faf6e91c17885891414abbe7fa95074976b3e429980b0d8790034468e69650dd993600d5580600e5582519182526020820152a180f35b8110156104cf5738610486565b60405162461bcd60e51b815260206004820152603560248201527f726567697374726174696f6e54696d65456e6473203e3d2073616c652e73616c6044820152741954dd185c9d081a5cc81b9bdd08185b1b1bddd959605a1b6064820152608490fd5b5081811161046e565b61055d915060203d602011610563575b6105558183612788565b8101906129c3565b38610449565b503d61054b565b6040513d86823e3d90fd5b50346101e557806003193601126101e5576040516014548082528160208101601485526020852092855b8181106106425750506105b492500382612788565b60405160158054808352908452909260208401917f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475915b81811061062c5761061a856106288861060681890382612788565b60405193849360408552604085019061298f565b90838203602085015261298f565b0390f35b82548452602090930192600192830192016105eb565b845483526001948501948694506020909301920161059f565b50346101e557806003193601126101e55761068160018060a01b03600454163314612c5b565b610689612e99565b610691612ded565b80f35b50346101e55760603660031901126101e55760043567ffffffffffffffff8111610928576106c6903690600401612932565b60243567ffffffffffffffff8111610325576106e6903690600401612932565b600254604051630935e01b60e21b815233600482015260443591602090829060249082906001600160a01b03165afa801561091d5761072b91869161053b57506129db565b6015541580610913575b1561090f57825182510361090f57601654156108a45762278d00811161085f5760175582805b835185101561080f5761076e8585612d51565b51601454600160401b8110156107fb57906107948260016107ad940160145560146128d0565b90919082549060031b91821b91600019901b1916179055565b6107b78584612d51565b51601554600160401b8110156107fb57916107e26107f39261079485600180970160155560156128d0565b6107ec8786612d51565b5190612a76565b94019361075b565b634e487b7160e01b84526041600452602484fd5b6016540361081a5780f35b60405162461bcd60e51b815260206004820152601b60248201527f50657263656e7420646973747269627574696f6e2069737375652e00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f4d6178696d616c20736869667420697320333020646179732e000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152603960248201527f53616665677561726420666f72206d616b696e6720737572652073657453616c60448201527f65506172616d73206765742066697273742063616c6c65642e000000000000006064820152608490fd5b8380fd5b5060145415610735565b6040513d87823e3d90fd5b5080fd5b50346101e55760203660031901126101e55760209060ff906040906001600160a01b03610957612812565b168152601384522054166040519015158152f35b50346101e557806003193601126101e5576020601754604051908152f35b50346101e55760203660031901126101e5576001600160a01b036109ab612812565b16815260116020526040812090604051906109c582612756565b8254825260018301549060208301918252600360028501549460408501958652019260405190818260208754928381520180978652602086209286905b80601f830110610e8e57610b1d945491818110610e78575b818110610e5f575b818110610e46575b818110610e2d575b818110610e15575b818110610dfc575b818110610de3575b818110610dca575b818110610db1575b818110610d98575b818110610d7f575b818110610d66575b818110610d4d575b818110610d34575b818110610d1b575b818110610d02575b818110610ce9575b818110610cd0575b818110610cb7575b818110610c9e575b818110610c85575b818110610c6c575b818110610c53575b818110610c3a575b818110610c21575b818110610c08575b818110610bef575b818110610bd6575b818110610bbd575b818110610ba4575b818110610b8b575b10610b7b575b5097969593970387612788565b8560608201525190519351946040519586956080870193875260208701526040860152608060608601525180915260a0840192915b818110610b60575050500390f35b82511515845285945060209384019390920191600101610b52565b60f81c1515815260200138610b10565b92602060019160ff8560f01c1615158152019301610b0a565b92602060019160ff8560e81c1615158152019301610b02565b92602060019160ff8560e01c1615158152019301610afa565b92602060019160ff8560d81c1615158152019301610af2565b92602060019160ff8560d01c1615158152019301610aea565b92602060019160ff8560c81c1615158152019301610ae2565b92602060019160ff8560c01c1615158152019301610ada565b92602060019160ff8560b81c1615158152019301610ad2565b92602060019160ff8560b01c1615158152019301610aca565b92602060019160ff8560a81c1615158152019301610ac2565b92602060019160ff8560a01c1615158152019301610aba565b92602060019160ff8560981c1615158152019301610ab2565b92602060019160ff8560901c1615158152019301610aaa565b92602060019160ff8560881c1615158152019301610aa2565b92602060019160ff8560801c1615158152019301610a9a565b92602060019160ff8560781c1615158152019301610a92565b92602060019160ff8560701c1615158152019301610a8a565b92602060019160ff8560681c1615158152019301610a82565b92602060019160ff8560601c1615158152019301610a7a565b92602060019160ff8560581c1615158152019301610a72565b92602060019160ff8560501c1615158152019301610a6a565b92602060019160ff8560481c1615158152019301610a62565b92602060019160ff8560401c1615158152019301610a5a565b92602060019160ff8560381c1615158152019301610a52565b92602060019160ff8560301c1615158152019301610a4a565b92602060019160ff8560281c1615158152019301610a42565b92602060019160ff85831c1615158152019301610a3a565b92602060019160ff8560181c1615158152019301610a32565b92602060019160ff8560101c1615158152019301610a2a565b92602060019160ff8560081c1615158152019301610a22565b92602060019160ff851615158152019301610a1a565b916020919350610400600191865460ff81161515825260ff8160081c1615158583015260ff8160101c161515604083015260ff8160181c161515606083015260ff81861c161515608083015260ff8160281c16151560a083015260ff8160301c16151560c083015260ff8160381c16151560e083015260ff8160401c16151561010083015260ff8160481c16151561012083015260ff8160501c16151561014083015260ff8160581c16151561016083015260ff8160601c16151561018083015260ff8160681c1615156101a083015260ff8160701c1615156101c083015260ff8160781c1615156101e083015260ff8160801c16151561020083015260ff8160881c16151561022083015260ff8160901c16151561024083015260ff8160981c16151561026083015260ff8160a01c16151561028083015260ff8160a81c1615156102a083015260ff8160b01c1615156102c083015260ff8160b81c1615156102e083015260ff8160c01c16151561030083015260ff8160c81c16151561032083015260ff8160d01c16151561034083015260ff8160d81c16151561036083015260ff8160e01c16151561038083015260ff8160e81c1615156103a083015260ff8160f01c1615156103c083015260f81c15156103e0820152019401920185929391610a02565b50346101e5576101003660031901126101e557611091612812565b611099612828565b6044356064356084359060a4359260c43560e4356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa8015611316576110eb918b9161053b57506129db565b6003549660ff8860a01c166112c1576001600160a01b0316958615611264578315158061125b575b80611252575b80611249575b80611240575b156111fb57606483106111bd577f2cd2dfcdeb2b58c4b80527e9df5e12da537fa4f6c958a4fb623a83ab74eeab6398608098600160a01b9160018060a01b0316906affffffffffffffffffffff60a81b161717600355866001600160601b0360a01b6004541617600455836005558460065585600a55600b55600c55601655604051938452602084015260408301526060820152a180f35b60405162461bcd60e51b8152602060048201526016602482015275053686f756c64206265206174206c65617374203130360541b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f73657453616c65506172616d733a2042616420696e70757400000000000000006044820152606490fd5b50811515611125565b5042811161111f565b50428611611119565b50841515611113565b60405162461bcd60e51b815260206004820152602f60248201527f73657453616c65506172616d733a2053616c65206f776e65722061646472657360448201526e399031b0b7103737ba10313290181760891b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f73657453616c65506172616d733a2053616c6520697320616c726561647920636044820152663932b0ba32b21760c91b6064820152608490fd5b6040513d8c823e3d90fd5b50346101e557806003193601126101e5576001546040516001600160a01b039091168152602090f35b50346101e55760203660031901126101e55760209060ff906040906001600160a01b03611375612812565b168152601284522054166040519015158152f35b50346101e557806003193601126101e5576113af60018060a01b03600454163314612c5b565b610691612e99565b50346101e55760203660031901126101e557600435906024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa9081156114d3579061140d91839161053b57506129db565b811515806114c8575b1561145d5780601755805b601454811015611459578061145361144a8561143e600195612884565b90549060031b1c612a76565b61079483612884565b01611421565b5080f35b60405162461bcd60e51b815260206004820152603b60248201527f5368696674206d757374206265206e6f6e7a65726f20616e6420736d616c6c6560448201527f72207468616e206d617856657374696e6754696d6553686966742e00000000006064820152608490fd5b506017548210611416565b6040513d84823e3d90fd5b50346101e557806003193601126101e5576020600f54604051908152f35b50346101e557806003193601126101e55761068960018060a01b03600454163314612c5b565b50346101e55760203660031901126101e55761153c612812565b600254604051630935e01b60e21b815233600482015290602090829060249082906001600160a01b03165afa80156115ad5761157e91849161053b57506129db565b600354906001600160a01b038216610325576001600160a01b03166001600160a01b0319919091161760035580f35b6040513d85823e3d90fd5b506115c2366128e8565b90600c548211611b1a57338352601260205260ff60408420541615611ad557816115ed913390612aec565b15611a815760095442101580611a76575b15611a3257338252601360205260ff6040832054166119ed573233036119a85760035460405163313ce56760e01b815290602090829060049082906001600160a01b03165afa9081156115ad57839161196a575b5061166b61166560ff6116749316612ca7565b34612ab9565b60055490612acc565b9081156119305781116118ec5761168d81600754612a76565b60075561169c34600854612a76565b6008556014546116ab8161291a565b906116b96040519283612788565b8082526116c8601f199161291a565b0136602083013760036040516116dd81612756565b838152602081013481526040820190428252606083019485523387526011602052604087209251835551600183015551600282015501905180519067ffffffffffffffff82116118d857600160401b82116118d857825482845580831061187f575b50602001918452602084208160051c91855b83811061183a5750601f1981169003806117cf575b857f57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e6117c987338452601360205260408420600160ff198254161790556117ae601054612d42565b60105560408051338152602081019290925290918291820190565b0390a180f35b928593865b81811061180b5750505001556117c97f57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e3880611766565b90919460206118306001928489511515919060ff809160031b9316831b921b19161790565b96019291016117d4565b86875b60208110611852575083820155600101611751565b959060206118766001928985511515919060ff809160031b9316831b921b19161790565b9201960161183d565b83865260208620601f80850160051c8201920160051c0190601f8416806118bb575b505b8181106118b0575061173f565b8681556001016118a3565b6000198201908154906000199060200360031b1c169055386118a1565b634e487b7160e01b85526041600452602485fd5b606460405162461bcd60e51b815260206004820152602060248201527f547279696e6720746f20627579206d6f7265207468616e20616c6c6f7765642e6044820152fd5b60405162461bcd60e51b815260206004820152601260248201527143616e277420627579203020746f6b656e7360701b6044820152606490fd5b90506020813d6020116119a0575b8161198560209383612788565b81010312610325575160ff811681036103255761166b611652565b3d9150611978565b60405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792064697265637420636f6e74726163742063616c6c732e00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f557365722063616e207061727469636970617465206f6e6c79206f6e63652e006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f73616c65206469646e2774207374617274206f72206974277320656e6465642e6044820152fd5b50600a5442106115fe565b60405162461bcd60e51b815260206004820152602660248201527f496e76616c6964207369676e61747572652e20566572696669636174696f6e2060448201526519985a5b195960d21b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4e6f74207265676973746572656420666f7220746869732073616c652e0000006044820152606490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4f766572666c6f77696e67206d6178696d616c2070617274696369706174696f60448201526a37103337b91039b0b6329760a91b6064820152608490fd5b50346101e55760203660031901126101e557600435906015548210156101e5576020610213836128b5565b50346101e557806003193601126101e557611bc460018060a01b03600454163314612c5b565b60035460ff8160b81c16611c2b5760ff60b81b198116600160b81b176003556006546040516323b872dd60e01b602082015233602482015230604482015260648082019290925290815261069191611c1d608483612788565b6001600160a01b0316612f79565b60405162461bcd60e51b815260206004820152601d60248201527f4465706f7369742063616e20626520646f6e65206f6e6c79206f6e63650000006044820152606490fd5b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad57611cc391849161053b57506129db565b8015611cfb576020817f4b59d61d9ffdc3db926d0ce7e06ebabb6bd1bf9dcdae262667e48be36822721692600555604051908152a180f35b60405162461bcd60e51b8152602060048201526013602482015272283934b1b29031b0b7103737ba10313290181760691b6044820152606490fd5b50346101e557806003193601126101e5576020601054604051908152f35b50346101e55760403660031901126101e5576004359067ffffffffffffffff82116101e5576020611d99611d8b36600486016127c6565b611d93612828565b90612be1565b6040519015158152f35b50346101e55760203660031901126101e55760043567ffffffffffffffff8111610928573660238201121561092857806004013567ffffffffffffffff8111610325573660248260051b8401011161032557908233845260116020526040842091849060038401915b85811015611ed05760248160051b83010135601554811015611ecc5760ff611e348286612a99565b90549060031b1c161580611eb3575b611e51575b50600101611e0c565b60019194611ea6611e9d83611e83611e6c611eac968a612a99565b819291549060031b9060ff6001831b921b19161790565b9055611e908a54916128b5565b90549060031b1c90612ab9565b60165490612acc565b90612a76565b9390611e48565b50611ebd81612884565b90549060031b1c421015611e43565b8780fd5b868480611edb575080f35b6117c981611f157f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b933360018060a01b0360035416612d65565b60408051338152602081019290925290918291820190565b50346101e557806003193601126101e5576101c060035460018060a01b036004541660055460065460075460085460095491600a5493600b5495600c549760ff6040519a60018060a01b0381168c52818160a01c16151560208d0152818160a81c16151560408d0152818160b01c16151560608d015260b81c16151560808b015260a08a015260c089015260e08801526101008701526101208601526101408501526101608401526101808301526101a0820152f35b50346101e55760203660031901126101e5576040906001600160a01b03612008612812565b168152601160205220805461062860026001840154930154604051938493846040919493926060820195825260208201520152565b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad5761209091849161053b57506129db565b600e549061209e8183612a76565b60095411156120b6576120b091612a76565b600e5580f35b60405162461bcd60e51b815260206004820152602960248201527f526567697374726174696f6e20706572696f64206f766572666c6f777320736160448201526836329039ba30b93a1760b91b6064820152608490fd5b50346101e55760206121276121213661283e565b91612b66565b6040516001600160a01b039091168152f35b50346101e5576020611d9961214d3661283e565b91612aec565b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad576121a691849161053b57506129db565b6121b36009544210612a32565b80156121eb576020817f37cfb0744bdb923d0300a0c37fac13cfec5fc2ee313cb9b217d284122980bada92600c55604051908152a180f35b606460405162461bcd60e51b815260206004820152602060248201527f43616e277420736574206d61782070617274696369706174696f6e20746f20306044820152fd5b50346101e557806003193601126101e557600d54600e54600f5460408051938452602084019290925290820152606090f35b50346101e55760203660031901126101e557600435600b5442106123a45760155481101561235f57338252601160205260408220600381019160ff6122a68285612a99565b90549060031b1c161580612346575b156122e357611e90611e9d926122d1611e6c846122da97612a99565b905554916128b5565b80611edb575080f35b60405162461bcd60e51b815260206004820152603560248201527f546f6b656e7320616c72656164792077697468647261776e206f7220706f727460448201527434b7b7103737ba103ab73637b1b5b2b2103cb2ba1760591b6064820152608490fd5b5061235081612884565b4291549060031b1c11156122b5565b60405162461bcd60e51b815260206004820152601860248201527f506f7274696f6e206964206f7574206f662072616e67652e00000000000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f546f6b656e732063616e206e6f742062652077697468647261776e207965742e6044820152fd5b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad5761243b91849161053b57506129db565b60ff60035460a01c16156125fa576009546125a657600e5481111561254457600a548110156124ee5742811061249d576020817faad53c4362ef2fe5a5390cc046e71fd8423a0a8dceebc156ac9bbcd15997eec292600955604051908152a180f35b60405162461bcd60e51b815260206004820152602360248201527f73746172742074696d652073686f756c6420626520696e20746865206675747560448201526239329760e91b6064820152608490fd5b60405162461bcd60e51b815260206004820152602860248201527f73746172742074696d652073686f756c64206c657373207468616e2073616c65604482015267456e642074696d6560c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152603460248201527f73746172742074696d652073686f756c642067726561746572207468616e207260448201527332b3b4b9ba3930ba34b7b72a34b6b2a2b732399760611b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f73657453616c6553746172743a207374617254696d652069732073657420616c6044820152653932b0b23c9760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601460248201527339b0b6329034b9903737ba1031b932b0ba32b21760611b6044820152606490fd5b50346101e557806003193601126101e5576020601654604051908152f35b50346101e55760203660031901126101e5576024600435602060018060a01b036002541660405193848092630935e01b60e21b82523360048301525afa9182156115ad576126cc926126ac91859161053b57506129db565b6126c3816009546126be814210612a32565b612a76565b80600955612a76565b600a5411156126d85780f35b60405162461bcd60e51b815260206004820152602c60248201527f53746172742074696d652063616e206e6f74206265206772656174657220746860448201526b30b71032b732103a34b6b29760a11b6064820152608490fd5b90503461092857816003193601126109285790546001600160a01b03168152602090f35b6080810190811067ffffffffffffffff82111761277257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761277257604052565b67ffffffffffffffff811161277257601f01601f191660200190565b81601f8201121561280d578035906127dd826127aa565b926127eb6040519485612788565b8284526020838301011161280d57816000926020809301838601378301015290565b600080fd5b600435906001600160a01b038216820361280d57565b602435906001600160a01b038216820361280d57565b606060031982011261280d576004359067ffffffffffffffff821161280d57612869916004016127c6565b906024356001600160a01b038116810361280d579060443590565b60145481101561289f57601460005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60155481101561289f57601560005260206000200190600090565b805482101561289f5760005260206000200190600090565b604060031982011261280d576004359067ffffffffffffffff821161280d57612913916004016127c6565b9060243590565b67ffffffffffffffff81116127725760051b60200190565b9080601f8301121561280d5781356129498161291a565b926129576040519485612788565b81845260208085019260051b82010192831161280d57602001905b82821061297f5750505090565b8135815260209182019101612972565b906020808351928381520192019060005b8181106129ad5750505090565b82518452602093840193909201916001016129a0565b9081602091031261280d5751801515810361280d5790565b156129e257565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f604482015261371760f11b6064820152608490fd5b15612a3957565b60405162461bcd60e51b815260206004820152601560248201527439b0b6329030b63932b0b23c9039ba30b93a32b21760591b6044820152606490fd5b91908201809211612a8357565b634e487b7160e01b600052601160045260246000fd5b919091805483101561289f57600052601f60206000208360051c01921690565b81810292918115918404141715612a8357565b8115612ad6570490565b634e487b7160e01b600052601260045260246000fd5b6002546001600160a01b031692602092612b0592612b66565b604051630935e01b60e21b81526001600160a01b03909116600482015291829060249082905afa908115612b5a57600091612b3e575090565b612b57915060203d602011610563576105558183612788565b90565b6040513d6000823e3d90fd5b612bd891612b57936040519060208201926001600160601b03199060601b16835260348201523060601b605482015260488152612ba4606882612788565b5190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c600020612fd4565b90929192613010565b9060405160208101916001600160601b03199060601b1682523060601b603482015260288152612c12604882612788565b5190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c526020612b05612bd8603c6000209360018060a01b036002541694612fd4565b15612c6257565b60405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7953616c654f776e65723a3a20526573747269637465640000000000006044820152606490fd5b8015612d3c5760009060208110600116604e821060011617612d3457600a916001915b60018111612cf7575082600019048211612ce357500290565b634e487b7160e01b81526011600452602490fd5b9280600019048111612d205760018416612d17575b80029260011c612cca565b80920291612d0c565b634e487b7160e01b82526011600452602482fd5b9050600a0a90565b50600190565b6000198114612a835760010190565b805182101561289f5760209160051b010190565b60405163a9059cbb60e01b60208201526001600160a01b03929092166024830152604480830193909352918152612da691612da1606483612788565b612f79565b565b15612daf57565b60405162461bcd60e51b815260206004820152601660248201527539b0b6329034b9903737ba1032b73232b2103cb2ba1760511b6044820152606490fd5b612dfb600a54421015612da8565b60035460ff8160b01c16612e485760ff60b01b198116600160b01b1760035560065460075480820391808311612a835703612e34575050565b612da69133906001600160a01b0316612d65565b60405162461bcd60e51b815260206004820152602360248201527f6f776e65722063616e2774207769746864726177206c6566746f76657220747760448201526269636560e81b6064820152608490fd5b612ea7600a54421015612da8565b60035460ff8160a81c16612f285760ff60a81b1916600160a81b17600355600854604051602091600091829190612ede8582612788565b82815284810190601f1986013683375191335af1903d15612f225760003d91612f06836127aa565b92612f146040519485612788565b83523d92013e5b1561280d57565b50612f1b565b60405162461bcd60e51b815260206004820152602360248201527f6f776e65722063616e2774207769746864726177206561726e696e677320747760448201526269636560e81b6064820152608490fd5b906000602091828151910182855af115612b5a576000513d612fcb57506001600160a01b0381163b155b612faa5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415612fa3565b815191906041830361300557612ffe92506020820151906060604084015193015160001a90613098565b9192909190565b505060009160029190565b9190916004811015613082578061302657509050565b6000600182036130415763f645eedf60e01b60005260046000fd5b506002810361305f578263fce698f760e01b60005260045260246000fd5b909160036000921461306f575050565b6335e2f38360e21b825260045260249150fd5b634e487b7160e01b600052602160045260246000fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411613115579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15612b5a576000516001600160a01b038116156131095790600090600090565b50600090600190600090565b5050506000916003919056fea2646970667358221220f945a3bb5f19698ecafbffc5dd290e615e7304babe1627a49b5093e8bc538ae864736f6c634300081a0033a26469706673582212203ca5dbadd32d3517782a7abfa7d174d522e95257fb110bd06888ac17da6c629064736f6c634300081a0033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0x86 JUMPI PUSH1 0x1F PUSH2 0x39AA CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0x8B JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0x86 JUMPI PUSH1 0x4B PUSH1 0x20 PUSH1 0x45 DUP4 PUSH1 0xA1 JUMP JUMPDEST SWAP3 ADD PUSH1 0xA1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x38F5 SWAP1 DUP2 PUSH2 0xB5 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH1 0x86 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x135FB504 EQ PUSH2 0x57D JUMPI POP DUP1 PUSH4 0x209A9F41 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x24BE4A50 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x5B30B428 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x9AF2C481 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x9C0AD5ED EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x9E75CF45 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA00249E8 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xB033342B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xC050F3D4 EQ PUSH2 0xC6 JUMPI PUSH4 0xF851A440 EQ PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x208 JUMPI PUSH2 0x11A SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x214 JUMPI JUMPDEST POP PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH2 0x322D SWAP1 DUP2 DUP5 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP6 DUP4 LT OR PUSH2 0x1F2 JUMPI PUSH1 0x40 SWAP4 DUP6 SWAP4 PUSH2 0x693 DUP6 CODECOPY DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SUB ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH32 0x65C0AC3F6AA97317AD1E9F6C73AF709AAD47DC12A97239E1B08A43A73195F7E0 SWAP2 PUSH2 0x1CD DUP3 PUSH1 0x1 PUSH1 0x20 SWAP5 ADD PUSH1 0x5 SSTORE PUSH2 0x5A1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP4 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x236 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x23C JUMPI JUMPDEST PUSH2 0x22E DUP2 DUP4 PUSH2 0x5BC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x5DE JUMP JUMPDEST DUP4 PUSH2 0x114 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x224 JUMP JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x20 PUSH2 0x25E PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3D4 JUMPI DUP2 DUP2 SUB SWAP2 DUP2 DUP4 GT PUSH2 0x3A8 JUMPI PUSH2 0x2FF PUSH2 0x2E9 DUP5 PUSH2 0x642 JUMP JUMPDEST SWAP4 PUSH2 0x2F7 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x5BC JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x642 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP4 LT PUSH2 0x364 JUMPI DUP4 DUP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x342 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x334 JUMP JUMPDEST PUSH2 0x36D DUP4 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 SLOAD DUP7 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP8 ADD ADD MSTORE PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3A8 JUMPI PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x30F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x109859081A5B9C1D5D PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC1 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x208 JUMPI PUSH2 0x4B4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x214 JUMPI POP PUSH2 0x5F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xC1 JUMPI PUSH2 0x500 PUSH1 0x20 SWAP2 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1F2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xC1 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xC1 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x5FD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792041646D696E2063616E206465706C6F792073616C65730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1F2 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP1 PUSH2 0x668 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x3A8 JUMPI PUSH2 0x67D SWAP1 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP INVALID PUSH1 0x80 CALLVALUE PUSH1 0xA7 JUMPI PUSH1 0x1F PUSH2 0x322D CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xAC JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xA7 JUMPI PUSH1 0x4B PUSH1 0x20 PUSH1 0x45 DUP4 PUSH1 0xC2 JUMP JUMPDEST SWAP3 ADD PUSH1 0xC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH1 0xA7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH1 0xA7 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x3157 SWAP1 DUP2 PUSH2 0xD6 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH1 0xA7 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x59EA172 EQ PUSH2 0x2732 JUMPI POP DUP1 PUSH4 0x1F11CB1E EQ PUSH2 0x2654 JUMPI DUP1 PUSH4 0x2A7C35DE EQ PUSH2 0x2636 JUMPI DUP1 PUSH4 0x2F181F54 EQ PUSH2 0x23E8 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x2261 JUMPI DUP1 PUSH4 0x443BD1D0 EQ PUSH2 0x222F JUMPI DUP1 PUSH4 0x47786D37 EQ PUSH2 0x2153 JUMPI DUP1 PUSH4 0x482A5DC7 EQ PUSH2 0x2139 JUMPI DUP1 PUSH4 0x4897F4C3 EQ PUSH2 0x210D JUMPI DUP1 PUSH4 0x5164D871 EQ PUSH2 0x203D JUMPI DUP1 PUSH4 0x5E7464F6 EQ PUSH2 0x1FE3 JUMPI DUP1 PUSH4 0x6AD1FE02 EQ PUSH2 0x1F2D JUMPI DUP1 PUSH4 0x718AF7E6 EQ PUSH2 0x1DA3 JUMPI DUP1 PUSH4 0x735DEFFA EQ PUSH2 0x1D54 JUMPI DUP1 PUSH4 0x7417040E EQ PUSH2 0x1D36 JUMPI DUP1 PUSH4 0x7843990A EQ PUSH2 0x1C70 JUMPI DUP1 PUSH4 0x7C4B414D EQ PUSH2 0x1B9E JUMPI DUP1 PUSH4 0x927F6AEE EQ PUSH2 0x1B73 JUMPI DUP1 PUSH4 0x931D81C9 EQ PUSH2 0x15B8 JUMPI DUP1 PUSH4 0xA29F481C EQ PUSH2 0x1522 JUMPI DUP1 PUSH4 0xA525D237 EQ PUSH2 0x14FC JUMPI DUP1 PUSH4 0xAB7589B5 EQ PUSH2 0x14DE JUMPI DUP1 PUSH4 0xABEE6927 EQ PUSH2 0x13B7 JUMPI DUP1 PUSH4 0xB73C6CE9 EQ PUSH2 0x1389 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x134A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1321 JUMPI DUP1 PUSH4 0xC4FBE091 EQ PUSH2 0x1076 JUMPI DUP1 PUSH4 0xCAD925EF EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0xCCC171F5 EQ PUSH2 0x96B JUMPI DUP1 PUSH4 0xCF5B8D4B EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0xD937D456 EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xDA4D4FBF EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xDC25A300 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xE099CF64 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xE9D8479E EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xF1EF7FF2 EQ PUSH2 0x1E8 JUMPI PUSH4 0xF851A440 SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x14 SLOAD DUP3 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x213 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x231 CALLDATASIZE PUSH2 0x28E8 JUMP JUMPDEST SWAP1 PUSH1 0xD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x3EC JUMPI JUMPDEST ISZERO PUSH2 0x3A7 JUMPI PUSH2 0x24E SWAP1 CALLER SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST ISZERO PUSH2 0x36E JUMPI CALLER DUP3 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x329 JUMPI CALLER DUP3 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x325 JUMPI PUSH1 0x64 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x39BC12B3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE CALLER PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x318 JUMPI PUSH2 0x308 JUMPI JUMPDEST PUSH2 0x2D8 PUSH1 0xF SLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH32 0x54DB7A5CB4735E1AAC1F53DB512D3390390BB6637BD30AD4BF9FC98667D9B9B9 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0x311 SWAP2 PUSH2 0x2788 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x2CD JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722063616E206E6F742072656769737465722074776963652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E206761746520697320636C6F7365642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD TIMESTAMP GT ISZERO PUSH2 0x23E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x56A JUMPI PUSH2 0x44F SWAP2 DUP6 SWAP2 PUSH2 0x53B JUMPI JUMPDEST POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x325 JUMPI PUSH1 0xD SLOAD PUSH2 0x325 JUMPI TIMESTAMP DUP3 LT ISZERO DUP1 PUSH2 0x532 JUMPI JUMPDEST ISZERO PUSH2 0x325 JUMPI PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x9 SLOAD DUP1 PUSH2 0x4C2 JUMPI JUMPDEST POP DUP2 PUSH1 0x40 SWAP2 PUSH32 0xAF6E91C17885891414ABBE7FA95074976B3E429980B0D8790034468E69650DD9 SWAP4 PUSH1 0xD SSTORE DUP1 PUSH1 0xE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP2 LT ISZERO PUSH2 0x4CF JUMPI CODESIZE PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726567697374726174696F6E54696D65456E6473203E3D2073616C652E73616C PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1954DD185C9D081A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP2 DUP2 GT PUSH2 0x46E JUMP JUMPDEST PUSH2 0x55D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x563 JUMPI JUMPDEST PUSH2 0x555 DUP2 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29C3 JUMP JUMPDEST CODESIZE PUSH2 0x449 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH1 0x14 SLOAD DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 ADD PUSH1 0x14 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x642 JUMPI POP POP PUSH2 0x5B4 SWAP3 POP SUB DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x15 DUP1 SLOAD DUP1 DUP4 MSTORE SWAP1 DUP5 MSTORE SWAP1 SWAP3 PUSH1 0x20 DUP5 ADD SWAP2 PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x62C JUMPI PUSH2 0x61A DUP6 PUSH2 0x628 DUP9 PUSH2 0x606 DUP2 DUP10 SUB DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x298F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5EB JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x59F JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x681 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x689 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x691 PUSH2 0x2DED JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x928 JUMPI PUSH2 0x6C6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x325 JUMPI PUSH2 0x6E6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x91D JUMPI PUSH2 0x72B SWAP2 DUP7 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x15 SLOAD ISZERO DUP1 PUSH2 0x913 JUMPI JUMPDEST ISZERO PUSH2 0x90F JUMPI DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x90F JUMPI PUSH1 0x16 SLOAD ISZERO PUSH2 0x8A4 JUMPI PUSH3 0x278D00 DUP2 GT PUSH2 0x85F JUMPI PUSH1 0x17 SSTORE DUP3 DUP1 JUMPDEST DUP4 MLOAD DUP6 LT ISZERO PUSH2 0x80F JUMPI PUSH2 0x76E DUP6 DUP6 PUSH2 0x2D51 JUMP JUMPDEST MLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7FB JUMPI SWAP1 PUSH2 0x794 DUP3 PUSH1 0x1 PUSH2 0x7AD SWAP5 ADD PUSH1 0x14 SSTORE PUSH1 0x14 PUSH2 0x28D0 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7B7 DUP6 DUP5 PUSH2 0x2D51 JUMP JUMPDEST MLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7FB JUMPI SWAP2 PUSH2 0x7E2 PUSH2 0x7F3 SWAP3 PUSH2 0x794 DUP6 PUSH1 0x1 DUP1 SWAP8 ADD PUSH1 0x15 SSTORE PUSH1 0x15 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x7EC DUP8 DUP7 PUSH2 0x2D51 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A76 JUMP JUMPDEST SWAP5 ADD SWAP4 PUSH2 0x75B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x16 SLOAD SUB PUSH2 0x81A JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E7420646973747269627574696F6E2069737375652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D616C20736869667420697320333020646179732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665677561726420666F72206D616B696E6720737572652073657453616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65506172616D73206765742066697273742063616C6C65642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD ISZERO PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x957 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x13 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9AB PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9C5 DUP3 PUSH2 0x2756 JUMP JUMPDEST DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x2 DUP6 ADD SLOAD SWAP5 PUSH1 0x40 DUP6 ADD SWAP6 DUP7 MSTORE ADD SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP3 PUSH1 0x20 DUP8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP8 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0xE8E JUMPI PUSH2 0xB1D SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0xE78 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE5F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE46 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE2D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE15 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDFC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDE3 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDCA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDB1 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD98 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD7F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD66 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD4D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD34 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD1B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD02 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCE9 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCD0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCB7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC9E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC85 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC6C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC53 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC3A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC21 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC08 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBEF JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBD6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBBD JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBA4 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xB8B JUMPI JUMPDEST LT PUSH2 0xB7B JUMPI JUMPDEST POP SWAP8 SWAP7 SWAP6 SWAP4 SWAP8 SUB DUP8 PUSH2 0x2788 JUMP JUMPDEST DUP6 PUSH1 0x60 DUP3 ADD MSTORE MLOAD SWAP1 MLOAD SWAP4 MLOAD SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 ADD SWAP4 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xB60 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD ISZERO ISZERO DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0xF8 SHR ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD CODESIZE PUSH2 0xB10 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xF0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xB02 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAFA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAF2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAEA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xADA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xACA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xABA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x98 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAB2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x90 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAAA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x88 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x80 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA9A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x78 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA92 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x70 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA8A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x68 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA82 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x60 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA7A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x58 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA72 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x50 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA6A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x48 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x40 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA5A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x38 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA52 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x30 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA4A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x28 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA42 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 DUP4 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA3A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x18 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA32 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x10 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA2A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA1A JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 DUP7 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO DUP6 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x18 SHR AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x28 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x30 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x38 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x48 SHR AND ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x50 SHR AND ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x58 SHR AND ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x60 SHR AND ISZERO ISZERO PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x68 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x70 SHR AND ISZERO ISZERO PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x78 SHR AND ISZERO ISZERO PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x80 SHR AND ISZERO ISZERO PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x88 SHR AND ISZERO ISZERO PUSH2 0x220 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x90 SHR AND ISZERO ISZERO PUSH2 0x240 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x98 SHR AND ISZERO ISZERO PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x280 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH2 0x2A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND ISZERO ISZERO PUSH2 0x2C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND ISZERO ISZERO PUSH2 0x2E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC0 SHR AND ISZERO ISZERO PUSH2 0x300 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC8 SHR AND ISZERO ISZERO PUSH2 0x320 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH2 0x340 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD8 SHR AND ISZERO ISZERO PUSH2 0x360 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE0 SHR AND ISZERO ISZERO PUSH2 0x380 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE8 SHR AND ISZERO ISZERO PUSH2 0x3A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xF0 SHR AND ISZERO ISZERO PUSH2 0x3C0 DUP4 ADD MSTORE PUSH1 0xF8 SHR ISZERO ISZERO PUSH2 0x3E0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP3 ADD DUP6 SWAP3 SWAP4 SWAP2 PUSH2 0xA02 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1091 PUSH2 0x2812 JUMP JUMPDEST PUSH2 0x1099 PUSH2 0x2828 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0xE4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1316 JUMPI PUSH2 0x10EB SWAP2 DUP12 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP7 PUSH1 0xFF DUP9 PUSH1 0xA0 SHR AND PUSH2 0x12C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP7 ISZERO PUSH2 0x1264 JUMPI DUP4 ISZERO ISZERO DUP1 PUSH2 0x125B JUMPI JUMPDEST DUP1 PUSH2 0x1252 JUMPI JUMPDEST DUP1 PUSH2 0x1249 JUMPI JUMPDEST DUP1 PUSH2 0x1240 JUMPI JUMPDEST ISZERO PUSH2 0x11FB JUMPI PUSH1 0x64 DUP4 LT PUSH2 0x11BD JUMPI PUSH32 0x2CD2DFCDEB2B58C4B80527E9DF5E12DA537FA4F6C958A4FB623A83AB74EEAB63 SWAP9 PUSH1 0x80 SWAP9 PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR PUSH1 0x3 SSTORE DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP4 PUSH1 0x5 SSTORE DUP5 PUSH1 0x6 SSTORE DUP6 PUSH1 0xA SSTORE PUSH1 0xB SSTORE PUSH1 0xC SSTORE PUSH1 0x16 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x53686F756C64206265206174206C656173742031303 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2042616420696E7075740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x1125 JUMP JUMPDEST POP TIMESTAMP DUP2 GT PUSH2 0x111F JUMP JUMPDEST POP TIMESTAMP DUP7 GT PUSH2 0x1119 JUMP JUMPDEST POP DUP5 ISZERO ISZERO PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2053616C65206F776E657220616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x399031B0B7103737BA103132901817 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2053616C6520697320616C72656164792063 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3932B0BA32B217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1375 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x12 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x13AF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x691 PUSH2 0x2E99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x14D3 JUMPI SWAP1 PUSH2 0x140D SWAP2 DUP4 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x14C8 JUMPI JUMPDEST ISZERO PUSH2 0x145D JUMPI DUP1 PUSH1 0x17 SSTORE DUP1 JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP1 PUSH2 0x1453 PUSH2 0x144A DUP6 PUSH2 0x143E PUSH1 0x1 SWAP6 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH2 0x2A76 JUMP JUMPDEST PUSH2 0x794 DUP4 PUSH2 0x2884 JUMP JUMPDEST ADD PUSH2 0x1421 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368696674206D757374206265206E6F6E7A65726F20616E6420736D616C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207468616E206D617856657374696E6754696D6553686966742E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD DUP3 LT PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x689 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x153C PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x157E SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x325 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x15C2 CALLDATASIZE PUSH2 0x28E8 JUMP JUMPDEST SWAP1 PUSH1 0xC SLOAD DUP3 GT PUSH2 0x1B1A JUMPI CALLER DUP4 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AD5 JUMPI DUP2 PUSH2 0x15ED SWAP2 CALLER SWAP1 PUSH2 0x2AEC JUMP JUMPDEST ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x1A76 JUMPI JUMPDEST ISZERO PUSH2 0x1A32 JUMPI CALLER DUP3 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x19ED JUMPI ORIGIN CALLER SUB PUSH2 0x19A8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x15AD JUMPI DUP4 SWAP2 PUSH2 0x196A JUMPI JUMPDEST POP PUSH2 0x166B PUSH2 0x1665 PUSH1 0xFF PUSH2 0x1674 SWAP4 AND PUSH2 0x2CA7 JUMP JUMPDEST CALLVALUE PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0x2ACC JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1930 JUMPI DUP2 GT PUSH2 0x18EC JUMPI PUSH2 0x168D DUP2 PUSH1 0x7 SLOAD PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x169C CALLVALUE PUSH1 0x8 SLOAD PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x14 SLOAD PUSH2 0x16AB DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP1 PUSH2 0x16B9 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH2 0x16C8 PUSH1 0x1F NOT SWAP2 PUSH2 0x291A JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x3 PUSH1 0x40 MLOAD PUSH2 0x16DD DUP2 PUSH2 0x2756 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD CALLVALUE DUP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP5 DUP6 MSTORE CALLER DUP8 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18D8 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x18D8 JUMPI DUP3 SLOAD DUP3 DUP5 SSTORE DUP1 DUP4 LT PUSH2 0x187F JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 DUP6 JUMPDEST DUP4 DUP2 LT PUSH2 0x183A JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x17CF JUMPI JUMPDEST DUP6 PUSH32 0x57D61F3CCD4CCD25EC5D234D6049553A586FAC134C85C98D0B0D9D5724F4E43E PUSH2 0x17C9 DUP8 CALLER DUP5 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x17AE PUSH1 0x10 SLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP3 DUP6 SWAP4 DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x180B JUMPI POP POP POP ADD SSTORE PUSH2 0x17C9 PUSH32 0x57D61F3CCD4CCD25EC5D234D6049553A586FAC134C85C98D0B0D9D5724F4E43E CODESIZE DUP1 PUSH2 0x1766 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 PUSH1 0x20 PUSH2 0x1830 PUSH1 0x1 SWAP3 DUP5 DUP10 MLOAD ISZERO ISZERO SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x17D4 JUMP JUMPDEST DUP7 DUP8 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x1852 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x1751 JUMP JUMPDEST SWAP6 SWAP1 PUSH1 0x20 PUSH2 0x1876 PUSH1 0x1 SWAP3 DUP10 DUP6 MLOAD ISZERO ISZERO SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x183D JUMP JUMPDEST DUP4 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x1F DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 PUSH1 0x1F DUP5 AND DUP1 PUSH2 0x18BB JUMPI JUMPDEST POP JUMPDEST DUP2 DUP2 LT PUSH2 0x18B0 JUMPI POP PUSH2 0x173F JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x18A1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547279696E6720746F20627579206D6F7265207468616E20616C6C6F7765642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E277420627579203020746F6B656E73 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x19A0 JUMPI JUMPDEST DUP2 PUSH2 0x1985 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x325 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x325 JUMPI PUSH2 0x166B PUSH2 0x1652 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792064697265637420636F6E74726163742063616C6C732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722063616E207061727469636970617465206F6E6C79206F6E63652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65206469646E2774207374617274206F72206974277320656E6465642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xA SLOAD TIMESTAMP LT PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E61747572652E20566572696669636174696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x19985A5B1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207265676973746572656420666F7220746869732073616C652E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F77696E67206D6178696D616C2070617274696369706174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x37103337B91039B0B63297 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x15 SLOAD DUP3 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x213 DUP4 PUSH2 0x28B5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1BC4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND PUSH2 0x1C2B JUMPI PUSH1 0xFF PUSH1 0xB8 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xB8 SHL OR PUSH1 0x3 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 MSTORE PUSH2 0x691 SWAP2 PUSH2 0x1C1D PUSH1 0x84 DUP4 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F7369742063616E20626520646F6E65206F6E6C79206F6E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x1CC3 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CFB JUMPI PUSH1 0x20 DUP2 PUSH32 0x4B59D61D9FFDC3DB926D0CE7E06EBABB6BD1BF9DCDAE262667E48BE368227216 SWAP3 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x283934B1B29031B0B7103737BA103132901817 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x1D99 PUSH2 0x1D8B CALLDATASIZE PUSH1 0x4 DUP7 ADD PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x1D93 PUSH2 0x2828 JUMP JUMPDEST SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x928 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x928 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x325 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT PUSH2 0x325 JUMPI SWAP1 DUP3 CALLER DUP5 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP2 DUP5 SWAP1 PUSH1 0x3 DUP5 ADD SWAP2 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x24 DUP2 PUSH1 0x5 SHL DUP4 ADD ADD CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x1ECC JUMPI PUSH1 0xFF PUSH2 0x1E34 DUP3 DUP7 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND ISZERO DUP1 PUSH2 0x1EB3 JUMPI JUMPDEST PUSH2 0x1E51 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP5 PUSH2 0x1EA6 PUSH2 0x1E9D DUP4 PUSH2 0x1E83 PUSH2 0x1E6C PUSH2 0x1EAC SWAP7 DUP11 PUSH2 0x2A99 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH1 0xFF PUSH1 0x1 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1E90 DUP11 SLOAD SWAP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 PUSH2 0x2ACC JUMP JUMPDEST SWAP1 PUSH2 0x2A76 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP PUSH2 0x1EBD DUP2 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR TIMESTAMP LT ISZERO PUSH2 0x1E43 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP5 DUP1 PUSH2 0x1EDB JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x1F15 PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B SWAP4 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1C0 PUSH1 0x3 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP2 PUSH1 0xA SLOAD SWAP4 PUSH1 0xB SLOAD SWAP6 PUSH1 0xC SLOAD SWAP8 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP13 MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP14 ADD MSTORE DUP2 DUP2 PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP14 ADD MSTORE DUP2 DUP2 PUSH1 0xB0 SHR AND ISZERO ISZERO PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0xB8 SHR AND ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2008 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH2 0x628 PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x2090 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 PUSH2 0x209E DUP2 DUP4 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x9 SLOAD GT ISZERO PUSH2 0x20B6 JUMPI PUSH2 0x20B0 SWAP2 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0xE SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20706572696F64206F766572666C6F7773207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x36329039BA30B93A17 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x2127 PUSH2 0x2121 CALLDATASIZE PUSH2 0x283E JUMP JUMPDEST SWAP2 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x1D99 PUSH2 0x214D CALLDATASIZE PUSH2 0x283E JUMP JUMPDEST SWAP2 PUSH2 0x2AEC JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x21A6 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH2 0x21B3 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x2A32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21EB JUMPI PUSH1 0x20 DUP2 PUSH32 0x37CFB0744BDB923D0300A0C37FAC13CFEC5FC2EE313CB9B217D284122980BADA SWAP3 PUSH1 0xC SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574206D61782070617274696369706174696F6E20746F2030 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD TIMESTAMP LT PUSH2 0x23A4 JUMPI PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x235F JUMPI CALLER DUP3 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP2 PUSH1 0xFF PUSH2 0x22A6 DUP3 DUP6 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND ISZERO DUP1 PUSH2 0x2346 JUMPI JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH2 0x1E90 PUSH2 0x1E9D SWAP3 PUSH2 0x22D1 PUSH2 0x1E6C DUP5 PUSH2 0x22DA SWAP8 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH2 0x28B5 JUMP JUMPDEST DUP1 PUSH2 0x1EDB JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320616C72656164792077697468647261776E206F7220706F7274 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x34B7B7103737BA103AB73637B1B5B2B2103CB2BA17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x2350 DUP2 PUSH2 0x2884 JUMP JUMPDEST TIMESTAMP SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR GT ISZERO PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F7274696F6E206964206F7574206F662072616E67652E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E732063616E206E6F742062652077697468647261776E207965742E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x243B SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x25FA JUMPI PUSH1 0x9 SLOAD PUSH2 0x25A6 JUMPI PUSH1 0xE SLOAD DUP2 GT ISZERO PUSH2 0x2544 JUMPI PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x24EE JUMPI TIMESTAMP DUP2 LT PUSH2 0x249D JUMPI PUSH1 0x20 DUP2 PUSH32 0xAAD53C4362EF2FE5A5390CC046E71FD8423A0A8DCEEBC156AC9BBCD15997EEC2 SWAP3 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C6420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x393297 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C64206C657373207468616E2073616C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x456E642074696D65 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C642067726561746572207468616E2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x32B3B4B9BA3930BA34B7B72A34B6B2A2B7323997 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C6553746172743A207374617254696D652069732073657420616C PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3932B0B23C97 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x39B0B6329034B9903737BA1031B932B0BA32B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x26CC SWAP3 PUSH2 0x26AC SWAP2 DUP6 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH2 0x26C3 DUP2 PUSH1 0x9 SLOAD PUSH2 0x26BE DUP2 TIMESTAMP LT PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x2A76 JUMP JUMPDEST DUP1 PUSH1 0x9 SSTORE PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0xA SLOAD GT ISZERO PUSH2 0x26D8 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D652063616E206E6F742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x30B71032B732103A34B6B297 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x928 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x928 JUMPI SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2772 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x280D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x27DD DUP3 PUSH2 0x27AA JUMP JUMPDEST SWAP3 PUSH2 0x27EB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x280D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x280D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x280D JUMPI PUSH2 0x2869 SWAP2 PUSH1 0x4 ADD PUSH2 0x27C6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x280D JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x14 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x15 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x280D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x280D JUMPI PUSH2 0x2913 SWAP2 PUSH1 0x4 ADD PUSH2 0x27C6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2772 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x280D JUMPI DUP2 CALLDATALOAD PUSH2 0x2949 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP3 PUSH2 0x2957 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x280D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x297F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x29AD JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x29A0 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x280D JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x280D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x29E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A39 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x39B0B6329030B63932B0B23C9039BA30B93A32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2A83 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x5 SHR ADD SWAP3 AND SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2A83 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2AD6 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x2B05 SWAP3 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2B3E JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x2B57 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x563 JUMPI PUSH2 0x555 DUP2 DUP4 PUSH2 0x2788 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x2BD8 SWAP2 PUSH2 0x2B57 SWAP4 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP4 MSTORE PUSH1 0x34 DUP3 ADD MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x48 DUP2 MSTORE PUSH2 0x2BA4 PUSH1 0x68 DUP3 PUSH2 0x2788 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 PUSH2 0x2FD4 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x3010 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x28 DUP2 MSTORE PUSH2 0x2C12 PUSH1 0x48 DUP3 PUSH2 0x2788 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x20 PUSH2 0x2B05 PUSH2 0x2BD8 PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP5 PUSH2 0x2FD4 JUMP JUMPDEST ISZERO PUSH2 0x2C62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7953616C654F776E65723A3A2052657374726963746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2D3C JUMPI PUSH1 0x0 SWAP1 PUSH1 0x20 DUP2 LT PUSH1 0x1 AND PUSH1 0x4E DUP3 LT PUSH1 0x1 AND OR PUSH2 0x2D34 JUMPI PUSH1 0xA SWAP2 PUSH1 0x1 SWAP2 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x2CF7 JUMPI POP DUP3 PUSH1 0x0 NOT DIV DUP3 GT PUSH2 0x2CE3 JUMPI POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 DUP1 PUSH1 0x0 NOT DIV DUP2 GT PUSH2 0x2D20 JUMPI PUSH1 0x1 DUP5 AND PUSH2 0x2D17 JUMPI JUMPDEST DUP1 MUL SWAP3 PUSH1 0x1 SHR PUSH2 0x2CCA JUMP JUMPDEST DUP1 SWAP3 MUL SWAP2 PUSH2 0x2D0C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP PUSH1 0xA EXP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2A83 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x2DA6 SWAP2 PUSH2 0x2DA1 PUSH1 0x64 DUP4 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x2F79 JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x2DAF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x39B0B6329034B9903737BA1032B73232B2103CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2DFB PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND PUSH2 0x2E48 JUMPI PUSH1 0xFF PUSH1 0xB0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xB0 SHL OR PUSH1 0x3 SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD DUP1 DUP3 SUB SWAP2 DUP1 DUP4 GT PUSH2 0x2A83 JUMPI SUB PUSH2 0x2E34 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2DA6 SWAP2 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E2774207769746864726177206C6566746F766572207477 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2EA7 PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH2 0x2F28 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH2 0x2EDE DUP6 DUP3 PUSH2 0x2788 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 PUSH1 0x1F NOT DUP7 ADD CALLDATASIZE DUP4 CALLDATACOPY MLOAD SWAP2 CALLER GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x2F22 JUMPI PUSH1 0x0 RETURNDATASIZE SWAP2 PUSH2 0x2F06 DUP4 PUSH2 0x27AA JUMP JUMPDEST SWAP3 PUSH2 0x2F14 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x280D JUMPI JUMP JUMPDEST POP PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E2774207769746864726177206561726E696E6773207477 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x2FCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2FAA JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2FA3 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x3005 JUMPI PUSH2 0x2FFE SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x3098 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x3082 JUMPI DUP1 PUSH2 0x3026 JUMPI POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SUB PUSH2 0x3041 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP2 SUB PUSH2 0x305F JUMPI DUP3 PUSH4 0xFCE698F7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x3 PUSH1 0x0 SWAP3 EQ PUSH2 0x306F JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x3115 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x3109 JUMPI SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 GASLIMIT LOG3 0xBB PUSH0 NOT PUSH10 0x8ECAFBFFC5DD290E615E PUSH20 0x4BABE1627A49B5093E8BC538AE864736F6C6343 STOP ADDMOD BYTE STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xA5 0xDB 0xAD 0xD3 0x2D CALLDATALOAD OR PUSH25 0x2A7ABFA7D174D522E95257FB110BD06888AC17DA6C62906473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"124:2126:29:-:0;;;;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;124:2126:29;;-1:-1:-1;;;;;124:2126:29;;;-1:-1:-1;;;;;;124:2126:29;;;;;;;-1:-1:-1;124:2126:29;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;124:2126:29;;;;;;-1:-1:-1;124:2126:29;;;;;-1:-1:-1;124:2126:29;;;;-1:-1:-1;;;;;124:2126:29;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_bool_fromMemory":{"entryPoint":1502,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_address_dyn":{"entryPoint":1602,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1468,"id":null,"parameterSlots":2,"returnSlots":0},"fun_getLastDeployedSale":{"entryPoint":1626,"id":11024,"parameterSlots":0,"returnSlots":1},"require_helper_stringliteral_24a5":{"entryPoint":1526,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":1441,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c908163135fb5041461057d57508063209a9f411461055f57806324be4a50146105195780635b30b428146104d75780639af2c4811461044b5780639c0ad5ed146104055780639e75cf45146102b3578063a00249e814610270578063b033342b14610243578063c050f3d4146100c65763f851a4401461009857600080fd5b346100c15760003660031901126100c1576000546040516001600160a01b039091168152602090f35b600080fd5b346100c15760003660031901126100c157600054604051630935e01b60e21b81523360048201526001600160a01b0390911690602081602481855afa80156102085761011a91600091610214575b506105f6565b600154604051919061322d90818401906001600160a01b031667ffffffffffffffff8211858310176101f25760409385936106938539825260208201520301906000f08015610208576001600160a01b03166000818152600260205260409020805460ff19166001179055600554680100000000000000008110156101f2577f65c0ac3f6aa97317ad1e9f6c73af709aad47dc12a97239e1b08a43a73195f7e0916101cd826001602094016005556105a1565b81546001600160a01b0360039290921b91821b19169083901b179055604051908152a1005b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b610236915060203d60201161023c575b61022e81836105bc565b8101906105de565b83610114565b503d610224565b346100c15760003660031901126100c157602061025e61065a565b6040516001600160a01b039091168152f35b346100c15760203660031901126100c1576004356001600160a01b038116908190036100c1576000526002602052602060ff604060002054166040519015158152f35b346100c15760403660031901126100c157600435602435818111156103d457818103918183116103a8576102ff6102e984610642565b936102f760405195866105bc565b808552610642565b602084019290601f190136843760005b8183106103645783856040519182916020830190602084525180915260408301919060005b818110610342575050500390f35b82516001600160a01b0316845285945060209384019390920191600101610334565b61036d836105a1565b9054865160039290921b1c6001600160a01b0316908210156103be5760208260051b8701015260001981146103a8576001928301920161030f565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60405162461bcd60e51b8152602060048201526009602482015268109859081a5b9c1d5d60ba1b6044820152606490fd5b346100c15760203660031901126100c1576004356001600160a01b038116908190036100c1576000526004602052602060018060a01b0360406000205416604051908152f35b346100c15760203660031901126100c1576004356001600160a01b038116908190036100c157600054604051630935e01b60e21b815233600482015290602090829060249082906001600160a01b03165afa8015610208576104b49160009161021457506105f6565b80156100c1576bffffffffffffffffffffffff60a01b6001541617600155600080f35b346100c15760203660031901126100c1576004356005548110156100c1576105006020916105a1565b905460405160039290921b1c6001600160a01b03168152f35b346100c15760203660031901126100c1576004356001600160a01b038116908190036100c1576000526003602052602060018060a01b0360406000205416604051908152f35b346100c15760003660031901126100c1576020600554604051908152f35b346100c15760003660031901126100c1576001546001600160a01b03168152602090f35b6005548110156103be57600560005260206000200190600090565b90601f8019910116810190811067ffffffffffffffff8211176101f257604052565b908160209103126100c1575180151581036100c15790565b156105fd57565b60405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792041646d696e2063616e206465706c6f792073616c657300000000006044820152606490fd5b67ffffffffffffffff81116101f25760051b60200190565b600554806106685750600090565b60001981019081116103a85761067d906105a1565b905460039190911b1c6001600160a01b03169056fe60803460a757601f61322d38819003918201601f19168301916001600160401b0383118484101760ac57808492604094855283398101031260a757604b602060458360c2565b920160c2565b6001600160a01b0390911690811560a7576001600160a01b031690811560a757600280546001600160a01b0319908116929092179055600180548216331790556000805490911691909117905560405161315790816100d68239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b038216820360a75756fe608080604052600436101561001d575b50361561001b57600080fd5b005b600090813560e01c908163059ea17214612732575080631f11cb1e146126545780632a7c35de146126365780632f181f54146123e8578063315a095d14612261578063443bd1d01461222f57806347786d3714612153578063482a5dc7146121395780634897f4c31461210d5780635164d8711461203d5780635e7464f614611fe35780636ad1fe0214611f2d578063718af7e614611da3578063735deffa14611d545780637417040e14611d365780637843990a14611c705780637c4b414d14611b9e578063927f6aee14611b73578063931d81c9146115b8578063a29f481c14611522578063a525d237146114fc578063ab7589b5146114de578063abee6927146113b7578063b73c6ce914611389578063c3c5a5471461134a578063c45a015514611321578063c4fbe09114611076578063cad925ef14610989578063ccc171f51461096b578063cf5b8d4b1461092c578063d937d45614610694578063da4d4fbf1461065b578063dc25a30014610575578063e099cf64146103f8578063e9d8479e14610222578063f1ef7ff2146101e85763f851a4400361000f57346101e557806003193601126101e5576002546040516001600160a01b039091168152602090f35b80fd5b50346101e55760203660031901126101e557600435906014548210156101e557602061021383612884565b90549060031b1c604051908152f35b50346101e557610231366128e8565b90600d54421015806103ec575b156103a75761024e903390612be1565b1561036e57338252601260205260ff60408320541661032957338252601260205260408220805460ff191660011790558154600a546001600160a01b0391909116918391833b1561032557606483928360405196879485936339bc12b360e21b8552600485015233602485015260448401525af1801561031857610308575b6102d8600f54612d42565b600f557f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b96020604051338152a180f35b61031191612788565b38816102cd565b50604051903d90823e3d90fd5b8280fd5b60405162461bcd60e51b815260206004820152601c60248201527f557365722063616e206e6f742072656769737465722074776963652e000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f526567697374726174696f6e206761746520697320636c6f7365642e000000006044820152606490fd5b50600e5442111561023e565b50346101e55760403660031901126101e5576004356024356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa801561056a5761044f91859161053b575b506129db565b60ff60035460a01c161561032557600d54610325574282101580610532575b1561032557600a5481101561032557600954806104c2575b50816040917faf6e91c17885891414abbe7fa95074976b3e429980b0d8790034468e69650dd993600d5580600e5582519182526020820152a180f35b8110156104cf5738610486565b60405162461bcd60e51b815260206004820152603560248201527f726567697374726174696f6e54696d65456e6473203e3d2073616c652e73616c6044820152741954dd185c9d081a5cc81b9bdd08185b1b1bddd959605a1b6064820152608490fd5b5081811161046e565b61055d915060203d602011610563575b6105558183612788565b8101906129c3565b38610449565b503d61054b565b6040513d86823e3d90fd5b50346101e557806003193601126101e5576040516014548082528160208101601485526020852092855b8181106106425750506105b492500382612788565b60405160158054808352908452909260208401917f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475915b81811061062c5761061a856106288861060681890382612788565b60405193849360408552604085019061298f565b90838203602085015261298f565b0390f35b82548452602090930192600192830192016105eb565b845483526001948501948694506020909301920161059f565b50346101e557806003193601126101e55761068160018060a01b03600454163314612c5b565b610689612e99565b610691612ded565b80f35b50346101e55760603660031901126101e55760043567ffffffffffffffff8111610928576106c6903690600401612932565b60243567ffffffffffffffff8111610325576106e6903690600401612932565b600254604051630935e01b60e21b815233600482015260443591602090829060249082906001600160a01b03165afa801561091d5761072b91869161053b57506129db565b6015541580610913575b1561090f57825182510361090f57601654156108a45762278d00811161085f5760175582805b835185101561080f5761076e8585612d51565b51601454600160401b8110156107fb57906107948260016107ad940160145560146128d0565b90919082549060031b91821b91600019901b1916179055565b6107b78584612d51565b51601554600160401b8110156107fb57916107e26107f39261079485600180970160155560156128d0565b6107ec8786612d51565b5190612a76565b94019361075b565b634e487b7160e01b84526041600452602484fd5b6016540361081a5780f35b60405162461bcd60e51b815260206004820152601b60248201527f50657263656e7420646973747269627574696f6e2069737375652e00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f4d6178696d616c20736869667420697320333020646179732e000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152603960248201527f53616665677561726420666f72206d616b696e6720737572652073657453616c60448201527f65506172616d73206765742066697273742063616c6c65642e000000000000006064820152608490fd5b8380fd5b5060145415610735565b6040513d87823e3d90fd5b5080fd5b50346101e55760203660031901126101e55760209060ff906040906001600160a01b03610957612812565b168152601384522054166040519015158152f35b50346101e557806003193601126101e5576020601754604051908152f35b50346101e55760203660031901126101e5576001600160a01b036109ab612812565b16815260116020526040812090604051906109c582612756565b8254825260018301549060208301918252600360028501549460408501958652019260405190818260208754928381520180978652602086209286905b80601f830110610e8e57610b1d945491818110610e78575b818110610e5f575b818110610e46575b818110610e2d575b818110610e15575b818110610dfc575b818110610de3575b818110610dca575b818110610db1575b818110610d98575b818110610d7f575b818110610d66575b818110610d4d575b818110610d34575b818110610d1b575b818110610d02575b818110610ce9575b818110610cd0575b818110610cb7575b818110610c9e575b818110610c85575b818110610c6c575b818110610c53575b818110610c3a575b818110610c21575b818110610c08575b818110610bef575b818110610bd6575b818110610bbd575b818110610ba4575b818110610b8b575b10610b7b575b5097969593970387612788565b8560608201525190519351946040519586956080870193875260208701526040860152608060608601525180915260a0840192915b818110610b60575050500390f35b82511515845285945060209384019390920191600101610b52565b60f81c1515815260200138610b10565b92602060019160ff8560f01c1615158152019301610b0a565b92602060019160ff8560e81c1615158152019301610b02565b92602060019160ff8560e01c1615158152019301610afa565b92602060019160ff8560d81c1615158152019301610af2565b92602060019160ff8560d01c1615158152019301610aea565b92602060019160ff8560c81c1615158152019301610ae2565b92602060019160ff8560c01c1615158152019301610ada565b92602060019160ff8560b81c1615158152019301610ad2565b92602060019160ff8560b01c1615158152019301610aca565b92602060019160ff8560a81c1615158152019301610ac2565b92602060019160ff8560a01c1615158152019301610aba565b92602060019160ff8560981c1615158152019301610ab2565b92602060019160ff8560901c1615158152019301610aaa565b92602060019160ff8560881c1615158152019301610aa2565b92602060019160ff8560801c1615158152019301610a9a565b92602060019160ff8560781c1615158152019301610a92565b92602060019160ff8560701c1615158152019301610a8a565b92602060019160ff8560681c1615158152019301610a82565b92602060019160ff8560601c1615158152019301610a7a565b92602060019160ff8560581c1615158152019301610a72565b92602060019160ff8560501c1615158152019301610a6a565b92602060019160ff8560481c1615158152019301610a62565b92602060019160ff8560401c1615158152019301610a5a565b92602060019160ff8560381c1615158152019301610a52565b92602060019160ff8560301c1615158152019301610a4a565b92602060019160ff8560281c1615158152019301610a42565b92602060019160ff85831c1615158152019301610a3a565b92602060019160ff8560181c1615158152019301610a32565b92602060019160ff8560101c1615158152019301610a2a565b92602060019160ff8560081c1615158152019301610a22565b92602060019160ff851615158152019301610a1a565b916020919350610400600191865460ff81161515825260ff8160081c1615158583015260ff8160101c161515604083015260ff8160181c161515606083015260ff81861c161515608083015260ff8160281c16151560a083015260ff8160301c16151560c083015260ff8160381c16151560e083015260ff8160401c16151561010083015260ff8160481c16151561012083015260ff8160501c16151561014083015260ff8160581c16151561016083015260ff8160601c16151561018083015260ff8160681c1615156101a083015260ff8160701c1615156101c083015260ff8160781c1615156101e083015260ff8160801c16151561020083015260ff8160881c16151561022083015260ff8160901c16151561024083015260ff8160981c16151561026083015260ff8160a01c16151561028083015260ff8160a81c1615156102a083015260ff8160b01c1615156102c083015260ff8160b81c1615156102e083015260ff8160c01c16151561030083015260ff8160c81c16151561032083015260ff8160d01c16151561034083015260ff8160d81c16151561036083015260ff8160e01c16151561038083015260ff8160e81c1615156103a083015260ff8160f01c1615156103c083015260f81c15156103e0820152019401920185929391610a02565b50346101e5576101003660031901126101e557611091612812565b611099612828565b6044356064356084359060a4359260c43560e4356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa8015611316576110eb918b9161053b57506129db565b6003549660ff8860a01c166112c1576001600160a01b0316958615611264578315158061125b575b80611252575b80611249575b80611240575b156111fb57606483106111bd577f2cd2dfcdeb2b58c4b80527e9df5e12da537fa4f6c958a4fb623a83ab74eeab6398608098600160a01b9160018060a01b0316906affffffffffffffffffffff60a81b161717600355866001600160601b0360a01b6004541617600455836005558460065585600a55600b55600c55601655604051938452602084015260408301526060820152a180f35b60405162461bcd60e51b8152602060048201526016602482015275053686f756c64206265206174206c65617374203130360541b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f73657453616c65506172616d733a2042616420696e70757400000000000000006044820152606490fd5b50811515611125565b5042811161111f565b50428611611119565b50841515611113565b60405162461bcd60e51b815260206004820152602f60248201527f73657453616c65506172616d733a2053616c65206f776e65722061646472657360448201526e399031b0b7103737ba10313290181760891b6064820152608490fd5b60405162461bcd60e51b815260206004820152602760248201527f73657453616c65506172616d733a2053616c6520697320616c726561647920636044820152663932b0ba32b21760c91b6064820152608490fd5b6040513d8c823e3d90fd5b50346101e557806003193601126101e5576001546040516001600160a01b039091168152602090f35b50346101e55760203660031901126101e55760209060ff906040906001600160a01b03611375612812565b168152601284522054166040519015158152f35b50346101e557806003193601126101e5576113af60018060a01b03600454163314612c5b565b610691612e99565b50346101e55760203660031901126101e557600435906024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa9081156114d3579061140d91839161053b57506129db565b811515806114c8575b1561145d5780601755805b601454811015611459578061145361144a8561143e600195612884565b90549060031b1c612a76565b61079483612884565b01611421565b5080f35b60405162461bcd60e51b815260206004820152603b60248201527f5368696674206d757374206265206e6f6e7a65726f20616e6420736d616c6c6560448201527f72207468616e206d617856657374696e6754696d6553686966742e00000000006064820152608490fd5b506017548210611416565b6040513d84823e3d90fd5b50346101e557806003193601126101e5576020600f54604051908152f35b50346101e557806003193601126101e55761068960018060a01b03600454163314612c5b565b50346101e55760203660031901126101e55761153c612812565b600254604051630935e01b60e21b815233600482015290602090829060249082906001600160a01b03165afa80156115ad5761157e91849161053b57506129db565b600354906001600160a01b038216610325576001600160a01b03166001600160a01b0319919091161760035580f35b6040513d85823e3d90fd5b506115c2366128e8565b90600c548211611b1a57338352601260205260ff60408420541615611ad557816115ed913390612aec565b15611a815760095442101580611a76575b15611a3257338252601360205260ff6040832054166119ed573233036119a85760035460405163313ce56760e01b815290602090829060049082906001600160a01b03165afa9081156115ad57839161196a575b5061166b61166560ff6116749316612ca7565b34612ab9565b60055490612acc565b9081156119305781116118ec5761168d81600754612a76565b60075561169c34600854612a76565b6008556014546116ab8161291a565b906116b96040519283612788565b8082526116c8601f199161291a565b0136602083013760036040516116dd81612756565b838152602081013481526040820190428252606083019485523387526011602052604087209251835551600183015551600282015501905180519067ffffffffffffffff82116118d857600160401b82116118d857825482845580831061187f575b50602001918452602084208160051c91855b83811061183a5750601f1981169003806117cf575b857f57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e6117c987338452601360205260408420600160ff198254161790556117ae601054612d42565b60105560408051338152602081019290925290918291820190565b0390a180f35b928593865b81811061180b5750505001556117c97f57d61f3ccd4ccd25ec5d234d6049553a586fac134c85c98d0b0d9d5724f4e43e3880611766565b90919460206118306001928489511515919060ff809160031b9316831b921b19161790565b96019291016117d4565b86875b60208110611852575083820155600101611751565b959060206118766001928985511515919060ff809160031b9316831b921b19161790565b9201960161183d565b83865260208620601f80850160051c8201920160051c0190601f8416806118bb575b505b8181106118b0575061173f565b8681556001016118a3565b6000198201908154906000199060200360031b1c169055386118a1565b634e487b7160e01b85526041600452602485fd5b606460405162461bcd60e51b815260206004820152602060248201527f547279696e6720746f20627579206d6f7265207468616e20616c6c6f7765642e6044820152fd5b60405162461bcd60e51b815260206004820152601260248201527143616e277420627579203020746f6b656e7360701b6044820152606490fd5b90506020813d6020116119a0575b8161198560209383612788565b81010312610325575160ff811681036103255761166b611652565b3d9150611978565b60405162461bcd60e51b815260206004820152601b60248201527f4f6e6c792064697265637420636f6e74726163742063616c6c732e00000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f557365722063616e207061727469636970617465206f6e6c79206f6e63652e006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f73616c65206469646e2774207374617274206f72206974277320656e6465642e6044820152fd5b50600a5442106115fe565b60405162461bcd60e51b815260206004820152602660248201527f496e76616c6964207369676e61747572652e20566572696669636174696f6e2060448201526519985a5b195960d21b6064820152608490fd5b60405162461bcd60e51b815260206004820152601d60248201527f4e6f74207265676973746572656420666f7220746869732073616c652e0000006044820152606490fd5b60405162461bcd60e51b815260206004820152602b60248201527f4f766572666c6f77696e67206d6178696d616c2070617274696369706174696f60448201526a37103337b91039b0b6329760a91b6064820152608490fd5b50346101e55760203660031901126101e557600435906015548210156101e5576020610213836128b5565b50346101e557806003193601126101e557611bc460018060a01b03600454163314612c5b565b60035460ff8160b81c16611c2b5760ff60b81b198116600160b81b176003556006546040516323b872dd60e01b602082015233602482015230604482015260648082019290925290815261069191611c1d608483612788565b6001600160a01b0316612f79565b60405162461bcd60e51b815260206004820152601d60248201527f4465706f7369742063616e20626520646f6e65206f6e6c79206f6e63650000006044820152606490fd5b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad57611cc391849161053b57506129db565b8015611cfb576020817f4b59d61d9ffdc3db926d0ce7e06ebabb6bd1bf9dcdae262667e48be36822721692600555604051908152a180f35b60405162461bcd60e51b8152602060048201526013602482015272283934b1b29031b0b7103737ba10313290181760691b6044820152606490fd5b50346101e557806003193601126101e5576020601054604051908152f35b50346101e55760403660031901126101e5576004359067ffffffffffffffff82116101e5576020611d99611d8b36600486016127c6565b611d93612828565b90612be1565b6040519015158152f35b50346101e55760203660031901126101e55760043567ffffffffffffffff8111610928573660238201121561092857806004013567ffffffffffffffff8111610325573660248260051b8401011161032557908233845260116020526040842091849060038401915b85811015611ed05760248160051b83010135601554811015611ecc5760ff611e348286612a99565b90549060031b1c161580611eb3575b611e51575b50600101611e0c565b60019194611ea6611e9d83611e83611e6c611eac968a612a99565b819291549060031b9060ff6001831b921b19161790565b9055611e908a54916128b5565b90549060031b1c90612ab9565b60165490612acc565b90612a76565b9390611e48565b50611ebd81612884565b90549060031b1c421015611e43565b8780fd5b868480611edb575080f35b6117c981611f157f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b933360018060a01b0360035416612d65565b60408051338152602081019290925290918291820190565b50346101e557806003193601126101e5576101c060035460018060a01b036004541660055460065460075460085460095491600a5493600b5495600c549760ff6040519a60018060a01b0381168c52818160a01c16151560208d0152818160a81c16151560408d0152818160b01c16151560608d015260b81c16151560808b015260a08a015260c089015260e08801526101008701526101208601526101408501526101608401526101808301526101a0820152f35b50346101e55760203660031901126101e5576040906001600160a01b03612008612812565b168152601160205220805461062860026001840154930154604051938493846040919493926060820195825260208201520152565b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad5761209091849161053b57506129db565b600e549061209e8183612a76565b60095411156120b6576120b091612a76565b600e5580f35b60405162461bcd60e51b815260206004820152602960248201527f526567697374726174696f6e20706572696f64206f766572666c6f777320736160448201526836329039ba30b93a1760b91b6064820152608490fd5b50346101e55760206121276121213661283e565b91612b66565b6040516001600160a01b039091168152f35b50346101e5576020611d9961214d3661283e565b91612aec565b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad576121a691849161053b57506129db565b6121b36009544210612a32565b80156121eb576020817f37cfb0744bdb923d0300a0c37fac13cfec5fc2ee313cb9b217d284122980bada92600c55604051908152a180f35b606460405162461bcd60e51b815260206004820152602060248201527f43616e277420736574206d61782070617274696369706174696f6e20746f20306044820152fd5b50346101e557806003193601126101e557600d54600e54600f5460408051938452602084019290925290820152606090f35b50346101e55760203660031901126101e557600435600b5442106123a45760155481101561235f57338252601160205260408220600381019160ff6122a68285612a99565b90549060031b1c161580612346575b156122e357611e90611e9d926122d1611e6c846122da97612a99565b905554916128b5565b80611edb575080f35b60405162461bcd60e51b815260206004820152603560248201527f546f6b656e7320616c72656164792077697468647261776e206f7220706f727460448201527434b7b7103737ba103ab73637b1b5b2b2103cb2ba1760591b6064820152608490fd5b5061235081612884565b4291549060031b1c11156122b5565b60405162461bcd60e51b815260206004820152601860248201527f506f7274696f6e206964206f7574206f662072616e67652e00000000000000006044820152606490fd5b606460405162461bcd60e51b815260206004820152602060248201527f546f6b656e732063616e206e6f742062652077697468647261776e207965742e6044820152fd5b50346101e55760203660031901126101e5576004356024602060018060a01b036002541660405192838092630935e01b60e21b82523360048301525afa80156115ad5761243b91849161053b57506129db565b60ff60035460a01c16156125fa576009546125a657600e5481111561254457600a548110156124ee5742811061249d576020817faad53c4362ef2fe5a5390cc046e71fd8423a0a8dceebc156ac9bbcd15997eec292600955604051908152a180f35b60405162461bcd60e51b815260206004820152602360248201527f73746172742074696d652073686f756c6420626520696e20746865206675747560448201526239329760e91b6064820152608490fd5b60405162461bcd60e51b815260206004820152602860248201527f73746172742074696d652073686f756c64206c657373207468616e2073616c65604482015267456e642074696d6560c01b6064820152608490fd5b60405162461bcd60e51b815260206004820152603460248201527f73746172742074696d652073686f756c642067726561746572207468616e207260448201527332b3b4b9ba3930ba34b7b72a34b6b2a2b732399760611b6064820152608490fd5b60405162461bcd60e51b815260206004820152602660248201527f73657453616c6553746172743a207374617254696d652069732073657420616c6044820152653932b0b23c9760d11b6064820152608490fd5b60405162461bcd60e51b815260206004820152601460248201527339b0b6329034b9903737ba1031b932b0ba32b21760611b6044820152606490fd5b50346101e557806003193601126101e5576020601654604051908152f35b50346101e55760203660031901126101e5576024600435602060018060a01b036002541660405193848092630935e01b60e21b82523360048301525afa9182156115ad576126cc926126ac91859161053b57506129db565b6126c3816009546126be814210612a32565b612a76565b80600955612a76565b600a5411156126d85780f35b60405162461bcd60e51b815260206004820152602c60248201527f53746172742074696d652063616e206e6f74206265206772656174657220746860448201526b30b71032b732103a34b6b29760a11b6064820152608490fd5b90503461092857816003193601126109285790546001600160a01b03168152602090f35b6080810190811067ffffffffffffffff82111761277257604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761277257604052565b67ffffffffffffffff811161277257601f01601f191660200190565b81601f8201121561280d578035906127dd826127aa565b926127eb6040519485612788565b8284526020838301011161280d57816000926020809301838601378301015290565b600080fd5b600435906001600160a01b038216820361280d57565b602435906001600160a01b038216820361280d57565b606060031982011261280d576004359067ffffffffffffffff821161280d57612869916004016127c6565b906024356001600160a01b038116810361280d579060443590565b60145481101561289f57601460005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60155481101561289f57601560005260206000200190600090565b805482101561289f5760005260206000200190600090565b604060031982011261280d576004359067ffffffffffffffff821161280d57612913916004016127c6565b9060243590565b67ffffffffffffffff81116127725760051b60200190565b9080601f8301121561280d5781356129498161291a565b926129576040519485612788565b81845260208085019260051b82010192831161280d57602001905b82821061297f5750505090565b8135815260209182019101612972565b906020808351928381520192019060005b8181106129ad5750505090565b82518452602093840193909201916001016129a0565b9081602091031261280d5751801515810361280d5790565b156129e257565b60405162461bcd60e51b815260206004820152602260248201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f604482015261371760f11b6064820152608490fd5b15612a3957565b60405162461bcd60e51b815260206004820152601560248201527439b0b6329030b63932b0b23c9039ba30b93a32b21760591b6044820152606490fd5b91908201809211612a8357565b634e487b7160e01b600052601160045260246000fd5b919091805483101561289f57600052601f60206000208360051c01921690565b81810292918115918404141715612a8357565b8115612ad6570490565b634e487b7160e01b600052601260045260246000fd5b6002546001600160a01b031692602092612b0592612b66565b604051630935e01b60e21b81526001600160a01b03909116600482015291829060249082905afa908115612b5a57600091612b3e575090565b612b57915060203d602011610563576105558183612788565b90565b6040513d6000823e3d90fd5b612bd891612b57936040519060208201926001600160601b03199060601b16835260348201523060601b605482015260488152612ba4606882612788565b5190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c52603c600020612fd4565b90929192613010565b9060405160208101916001600160601b03199060601b1682523060601b603482015260288152612c12604882612788565b5190207f19457468657265756d205369676e6564204d6573736167653a0a333200000000600052601c526020612b05612bd8603c6000209360018060a01b036002541694612fd4565b15612c6257565b60405162461bcd60e51b815260206004820152601a60248201527f4f6e6c7953616c654f776e65723a3a20526573747269637465640000000000006044820152606490fd5b8015612d3c5760009060208110600116604e821060011617612d3457600a916001915b60018111612cf7575082600019048211612ce357500290565b634e487b7160e01b81526011600452602490fd5b9280600019048111612d205760018416612d17575b80029260011c612cca565b80920291612d0c565b634e487b7160e01b82526011600452602482fd5b9050600a0a90565b50600190565b6000198114612a835760010190565b805182101561289f5760209160051b010190565b60405163a9059cbb60e01b60208201526001600160a01b03929092166024830152604480830193909352918152612da691612da1606483612788565b612f79565b565b15612daf57565b60405162461bcd60e51b815260206004820152601660248201527539b0b6329034b9903737ba1032b73232b2103cb2ba1760511b6044820152606490fd5b612dfb600a54421015612da8565b60035460ff8160b01c16612e485760ff60b01b198116600160b01b1760035560065460075480820391808311612a835703612e34575050565b612da69133906001600160a01b0316612d65565b60405162461bcd60e51b815260206004820152602360248201527f6f776e65722063616e2774207769746864726177206c6566746f76657220747760448201526269636560e81b6064820152608490fd5b612ea7600a54421015612da8565b60035460ff8160a81c16612f285760ff60a81b1916600160a81b17600355600854604051602091600091829190612ede8582612788565b82815284810190601f1986013683375191335af1903d15612f225760003d91612f06836127aa565b92612f146040519485612788565b83523d92013e5b1561280d57565b50612f1b565b60405162461bcd60e51b815260206004820152602360248201527f6f776e65722063616e2774207769746864726177206561726e696e677320747760448201526269636560e81b6064820152608490fd5b906000602091828151910182855af115612b5a576000513d612fcb57506001600160a01b0381163b155b612faa5750565b635274afe760e01b60009081526001600160a01b0391909116600452602490fd5b60011415612fa3565b815191906041830361300557612ffe92506020820151906060604084015193015160001a90613098565b9192909190565b505060009160029190565b9190916004811015613082578061302657509050565b6000600182036130415763f645eedf60e01b60005260046000fd5b506002810361305f578263fce698f760e01b60005260045260246000fd5b909160036000921461306f575050565b6335e2f38360e21b825260045260249150fd5b634e487b7160e01b600052602160045260246000fd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411613115579160209360809260ff60009560405194855216868401526040830152606082015282805260015afa15612b5a576000516001600160a01b038116156131095790600090600090565b50600090600190600090565b5050506000916003919056fea2646970667358221220f945a3bb5f19698ecafbffc5dd290e615e7304babe1627a49b5093e8bc538ae864736f6c634300081a0033a26469706673582212203ca5dbadd32d3517782a7abfa7d174d522e95257fb110bd06888ac17da6c629064736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x135FB504 EQ PUSH2 0x57D JUMPI POP DUP1 PUSH4 0x209A9F41 EQ PUSH2 0x55F JUMPI DUP1 PUSH4 0x24BE4A50 EQ PUSH2 0x519 JUMPI DUP1 PUSH4 0x5B30B428 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x9AF2C481 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x9C0AD5ED EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0x9E75CF45 EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0xA00249E8 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0xB033342B EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xC050F3D4 EQ PUSH2 0xC6 JUMPI PUSH4 0xF851A440 EQ PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x208 JUMPI PUSH2 0x11A SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x214 JUMPI JUMPDEST POP PUSH2 0x5F6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH2 0x322D SWAP1 DUP2 DUP5 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP6 DUP4 LT OR PUSH2 0x1F2 JUMPI PUSH1 0x40 SWAP4 DUP6 SWAP4 PUSH2 0x693 DUP6 CODECOPY DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE SUB ADD SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1F2 JUMPI PUSH32 0x65C0AC3F6AA97317AD1E9F6C73AF709AAD47DC12A97239E1B08A43A73195F7E0 SWAP2 PUSH2 0x1CD DUP3 PUSH1 0x1 PUSH1 0x20 SWAP5 ADD PUSH1 0x5 SSTORE PUSH2 0x5A1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SWAP2 DUP3 SHL NOT AND SWAP1 DUP4 SWAP1 SHL OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x236 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x23C JUMPI JUMPDEST PUSH2 0x22E DUP2 DUP4 PUSH2 0x5BC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x5DE JUMP JUMPDEST DUP4 PUSH2 0x114 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x224 JUMP JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x20 PUSH2 0x25E PUSH2 0x65A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3D4 JUMPI DUP2 DUP2 SUB SWAP2 DUP2 DUP4 GT PUSH2 0x3A8 JUMPI PUSH2 0x2FF PUSH2 0x2E9 DUP5 PUSH2 0x642 JUMP JUMPDEST SWAP4 PUSH2 0x2F7 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x5BC JUMP JUMPDEST DUP1 DUP6 MSTORE PUSH2 0x642 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 PUSH1 0x1F NOT ADD CALLDATASIZE DUP5 CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 DUP4 LT PUSH2 0x364 JUMPI DUP4 DUP6 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD SWAP1 PUSH1 0x20 DUP5 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP2 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x342 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x334 JUMP JUMPDEST PUSH2 0x36D DUP4 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 SLOAD DUP7 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP8 ADD ADD MSTORE PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3A8 JUMPI PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x30F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x109859081A5B9C1D5D PUSH1 0xBA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC1 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x208 JUMPI PUSH2 0x4B4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x214 JUMPI POP PUSH2 0x5F6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC1 JUMPI PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xC1 JUMPI PUSH2 0x500 PUSH1 0x20 SWAP2 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0xC1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x20 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xC1 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xC1 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x3BE JUMPI PUSH1 0x5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1F2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xC1 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0xC1 JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x5FD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792041646D696E2063616E206465706C6F792073616C65730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1F2 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP1 PUSH2 0x668 JUMPI POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP1 DUP2 GT PUSH2 0x3A8 JUMPI PUSH2 0x67D SWAP1 PUSH2 0x5A1 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x3 SWAP2 SWAP1 SWAP2 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP INVALID PUSH1 0x80 CALLVALUE PUSH1 0xA7 JUMPI PUSH1 0x1F PUSH2 0x322D CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0xAC JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0xA7 JUMPI PUSH1 0x4B PUSH1 0x20 PUSH1 0x45 DUP4 PUSH1 0xC2 JUMP JUMPDEST SWAP3 ADD PUSH1 0xC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH1 0xA7 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH1 0xA7 JUMPI PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x3157 SWAP1 DUP2 PUSH2 0xD6 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH1 0xA7 JUMPI JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x59EA172 EQ PUSH2 0x2732 JUMPI POP DUP1 PUSH4 0x1F11CB1E EQ PUSH2 0x2654 JUMPI DUP1 PUSH4 0x2A7C35DE EQ PUSH2 0x2636 JUMPI DUP1 PUSH4 0x2F181F54 EQ PUSH2 0x23E8 JUMPI DUP1 PUSH4 0x315A095D EQ PUSH2 0x2261 JUMPI DUP1 PUSH4 0x443BD1D0 EQ PUSH2 0x222F JUMPI DUP1 PUSH4 0x47786D37 EQ PUSH2 0x2153 JUMPI DUP1 PUSH4 0x482A5DC7 EQ PUSH2 0x2139 JUMPI DUP1 PUSH4 0x4897F4C3 EQ PUSH2 0x210D JUMPI DUP1 PUSH4 0x5164D871 EQ PUSH2 0x203D JUMPI DUP1 PUSH4 0x5E7464F6 EQ PUSH2 0x1FE3 JUMPI DUP1 PUSH4 0x6AD1FE02 EQ PUSH2 0x1F2D JUMPI DUP1 PUSH4 0x718AF7E6 EQ PUSH2 0x1DA3 JUMPI DUP1 PUSH4 0x735DEFFA EQ PUSH2 0x1D54 JUMPI DUP1 PUSH4 0x7417040E EQ PUSH2 0x1D36 JUMPI DUP1 PUSH4 0x7843990A EQ PUSH2 0x1C70 JUMPI DUP1 PUSH4 0x7C4B414D EQ PUSH2 0x1B9E JUMPI DUP1 PUSH4 0x927F6AEE EQ PUSH2 0x1B73 JUMPI DUP1 PUSH4 0x931D81C9 EQ PUSH2 0x15B8 JUMPI DUP1 PUSH4 0xA29F481C EQ PUSH2 0x1522 JUMPI DUP1 PUSH4 0xA525D237 EQ PUSH2 0x14FC JUMPI DUP1 PUSH4 0xAB7589B5 EQ PUSH2 0x14DE JUMPI DUP1 PUSH4 0xABEE6927 EQ PUSH2 0x13B7 JUMPI DUP1 PUSH4 0xB73C6CE9 EQ PUSH2 0x1389 JUMPI DUP1 PUSH4 0xC3C5A547 EQ PUSH2 0x134A JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1321 JUMPI DUP1 PUSH4 0xC4FBE091 EQ PUSH2 0x1076 JUMPI DUP1 PUSH4 0xCAD925EF EQ PUSH2 0x989 JUMPI DUP1 PUSH4 0xCCC171F5 EQ PUSH2 0x96B JUMPI DUP1 PUSH4 0xCF5B8D4B EQ PUSH2 0x92C JUMPI DUP1 PUSH4 0xD937D456 EQ PUSH2 0x694 JUMPI DUP1 PUSH4 0xDA4D4FBF EQ PUSH2 0x65B JUMPI DUP1 PUSH4 0xDC25A300 EQ PUSH2 0x575 JUMPI DUP1 PUSH4 0xE099CF64 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xE9D8479E EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0xF1EF7FF2 EQ PUSH2 0x1E8 JUMPI PUSH4 0xF851A440 SUB PUSH2 0xF JUMPI CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x14 SLOAD DUP3 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x213 DUP4 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x231 CALLDATASIZE PUSH2 0x28E8 JUMP JUMPDEST SWAP1 PUSH1 0xD SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x3EC JUMPI JUMPDEST ISZERO PUSH2 0x3A7 JUMPI PUSH2 0x24E SWAP1 CALLER SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST ISZERO PUSH2 0x36E JUMPI CALLER DUP3 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x329 JUMPI CALLER DUP3 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 DUP4 EXTCODESIZE ISZERO PUSH2 0x325 JUMPI PUSH1 0x64 DUP4 SWAP3 DUP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP5 DUP6 SWAP4 PUSH4 0x39BC12B3 PUSH1 0xE2 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE CALLER PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x318 JUMPI PUSH2 0x308 JUMPI JUMPDEST PUSH2 0x2D8 PUSH1 0xF SLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0xF SSTORE PUSH32 0x54DB7A5CB4735E1AAC1F53DB512D3390390BB6637BD30AD4BF9FC98667D9B9B9 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH2 0x311 SWAP2 PUSH2 0x2788 JUMP JUMPDEST CODESIZE DUP2 PUSH2 0x2CD JUMP JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722063616E206E6F742072656769737465722074776963652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E206761746520697320636C6F7365642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD TIMESTAMP GT ISZERO PUSH2 0x23E JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x56A JUMPI PUSH2 0x44F SWAP2 DUP6 SWAP2 PUSH2 0x53B JUMPI JUMPDEST POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x325 JUMPI PUSH1 0xD SLOAD PUSH2 0x325 JUMPI TIMESTAMP DUP3 LT ISZERO DUP1 PUSH2 0x532 JUMPI JUMPDEST ISZERO PUSH2 0x325 JUMPI PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x325 JUMPI PUSH1 0x9 SLOAD DUP1 PUSH2 0x4C2 JUMPI JUMPDEST POP DUP2 PUSH1 0x40 SWAP2 PUSH32 0xAF6E91C17885891414ABBE7FA95074976B3E429980B0D8790034468E69650DD9 SWAP4 PUSH1 0xD SSTORE DUP1 PUSH1 0xE SSTORE DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST DUP2 LT ISZERO PUSH2 0x4CF JUMPI CODESIZE PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x726567697374726174696F6E54696D65456E6473203E3D2073616C652E73616C PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x1954DD185C9D081A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x5A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP DUP2 DUP2 GT PUSH2 0x46E JUMP JUMPDEST PUSH2 0x55D SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x563 JUMPI JUMPDEST PUSH2 0x555 DUP2 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x29C3 JUMP JUMPDEST CODESIZE PUSH2 0x449 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP7 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD PUSH1 0x14 SLOAD DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 DUP2 ADD PUSH1 0x14 DUP6 MSTORE PUSH1 0x20 DUP6 KECCAK256 SWAP3 DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0x642 JUMPI POP POP PUSH2 0x5B4 SWAP3 POP SUB DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x15 DUP1 SLOAD DUP1 DUP4 MSTORE SWAP1 DUP5 MSTORE SWAP1 SWAP3 PUSH1 0x20 DUP5 ADD SWAP2 PUSH32 0x55F448FDEA98C4D29EB340757EF0A66CD03DBB9538908A6A81D96026B71EC475 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x62C JUMPI PUSH2 0x61A DUP6 PUSH2 0x628 DUP9 PUSH2 0x606 DUP2 DUP10 SUB DUP3 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH1 0x40 DUP6 MSTORE PUSH1 0x40 DUP6 ADD SWAP1 PUSH2 0x298F JUMP JUMPDEST SWAP1 DUP4 DUP3 SUB PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x298F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP3 SLOAD DUP5 MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x5EB JUMP JUMPDEST DUP5 SLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 DUP6 ADD SWAP5 DUP7 SWAP5 POP PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 ADD PUSH2 0x59F JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x681 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x689 PUSH2 0x2E99 JUMP JUMPDEST PUSH2 0x691 PUSH2 0x2DED JUMP JUMPDEST DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x928 JUMPI PUSH2 0x6C6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x325 JUMPI PUSH2 0x6E6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2932 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x91D JUMPI PUSH2 0x72B SWAP2 DUP7 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x15 SLOAD ISZERO DUP1 PUSH2 0x913 JUMPI JUMPDEST ISZERO PUSH2 0x90F JUMPI DUP3 MLOAD DUP3 MLOAD SUB PUSH2 0x90F JUMPI PUSH1 0x16 SLOAD ISZERO PUSH2 0x8A4 JUMPI PUSH3 0x278D00 DUP2 GT PUSH2 0x85F JUMPI PUSH1 0x17 SSTORE DUP3 DUP1 JUMPDEST DUP4 MLOAD DUP6 LT ISZERO PUSH2 0x80F JUMPI PUSH2 0x76E DUP6 DUP6 PUSH2 0x2D51 JUMP JUMPDEST MLOAD PUSH1 0x14 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7FB JUMPI SWAP1 PUSH2 0x794 DUP3 PUSH1 0x1 PUSH2 0x7AD SWAP5 ADD PUSH1 0x14 SSTORE PUSH1 0x14 PUSH2 0x28D0 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x7B7 DUP6 DUP5 PUSH2 0x2D51 JUMP JUMPDEST MLOAD PUSH1 0x15 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x7FB JUMPI SWAP2 PUSH2 0x7E2 PUSH2 0x7F3 SWAP3 PUSH2 0x794 DUP6 PUSH1 0x1 DUP1 SWAP8 ADD PUSH1 0x15 SSTORE PUSH1 0x15 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x7EC DUP8 DUP7 PUSH2 0x2D51 JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2A76 JUMP JUMPDEST SWAP5 ADD SWAP4 PUSH2 0x75B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST PUSH1 0x16 SLOAD SUB PUSH2 0x81A JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50657263656E7420646973747269627574696F6E2069737375652E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6178696D616C20736869667420697320333020646179732E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53616665677561726420666F72206D616B696E6720737572652073657453616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65506172616D73206765742066697273742063616C6C65642E00000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP PUSH1 0x14 SLOAD ISZERO PUSH2 0x735 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x957 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x13 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x17 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x9AB PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x9C5 DUP3 PUSH2 0x2756 JUMP JUMPDEST DUP3 SLOAD DUP3 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x3 PUSH1 0x2 DUP6 ADD SLOAD SWAP5 PUSH1 0x40 DUP6 ADD SWAP6 DUP7 MSTORE ADD SWAP3 PUSH1 0x40 MLOAD SWAP1 DUP2 DUP3 PUSH1 0x20 DUP8 SLOAD SWAP3 DUP4 DUP2 MSTORE ADD DUP1 SWAP8 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 SWAP3 DUP7 SWAP1 JUMPDEST DUP1 PUSH1 0x1F DUP4 ADD LT PUSH2 0xE8E JUMPI PUSH2 0xB1D SWAP5 SLOAD SWAP2 DUP2 DUP2 LT PUSH2 0xE78 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE5F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE46 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE2D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xE15 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDFC JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDE3 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDCA JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xDB1 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD98 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD7F JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD66 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD4D JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD34 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD1B JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xD02 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCE9 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCD0 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xCB7 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC9E JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC85 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC6C JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC53 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC3A JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC21 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xC08 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBEF JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBD6 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBBD JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xBA4 JUMPI JUMPDEST DUP2 DUP2 LT PUSH2 0xB8B JUMPI JUMPDEST LT PUSH2 0xB7B JUMPI JUMPDEST POP SWAP8 SWAP7 SWAP6 SWAP4 SWAP8 SUB DUP8 PUSH2 0x2788 JUMP JUMPDEST DUP6 PUSH1 0x60 DUP3 ADD MSTORE MLOAD SWAP1 MLOAD SWAP4 MLOAD SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x80 DUP8 ADD SWAP4 DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP7 ADD MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0xA0 DUP5 ADD SWAP3 SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0xB60 JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD ISZERO ISZERO DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB52 JUMP JUMPDEST PUSH1 0xF8 SHR ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD CODESIZE PUSH2 0xB10 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xF0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xB0A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xB02 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xE0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAFA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAF2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xD0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAEA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAE2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xC0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xADA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAD2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xB0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xACA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAC2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0xA0 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xABA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x98 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAB2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x90 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAAA JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x88 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xAA2 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x80 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA9A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x78 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA92 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x70 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA8A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x68 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA82 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x60 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA7A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x58 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA72 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x50 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA6A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x48 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA62 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x40 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA5A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x38 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA52 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x30 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA4A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x28 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA42 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 DUP4 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA3A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x18 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA32 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x10 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA2A JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 PUSH1 0x8 SHR AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA22 JUMP JUMPDEST SWAP3 PUSH1 0x20 PUSH1 0x1 SWAP2 PUSH1 0xFF DUP6 AND ISZERO ISZERO DUP2 MSTORE ADD SWAP4 ADD PUSH2 0xA1A JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 SWAP4 POP PUSH2 0x400 PUSH1 0x1 SWAP2 DUP7 SLOAD PUSH1 0xFF DUP2 AND ISZERO ISZERO DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x8 SHR AND ISZERO ISZERO DUP6 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x18 SHR AND ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF DUP2 DUP7 SHR AND ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x28 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x30 SHR AND ISZERO ISZERO PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x38 SHR AND ISZERO ISZERO PUSH1 0xE0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x40 SHR AND ISZERO ISZERO PUSH2 0x100 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x48 SHR AND ISZERO ISZERO PUSH2 0x120 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x50 SHR AND ISZERO ISZERO PUSH2 0x140 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x58 SHR AND ISZERO ISZERO PUSH2 0x160 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x60 SHR AND ISZERO ISZERO PUSH2 0x180 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x68 SHR AND ISZERO ISZERO PUSH2 0x1A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x70 SHR AND ISZERO ISZERO PUSH2 0x1C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x78 SHR AND ISZERO ISZERO PUSH2 0x1E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x80 SHR AND ISZERO ISZERO PUSH2 0x200 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x88 SHR AND ISZERO ISZERO PUSH2 0x220 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x90 SHR AND ISZERO ISZERO PUSH2 0x240 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0x98 SHR AND ISZERO ISZERO PUSH2 0x260 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH2 0x280 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH2 0x2A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND ISZERO ISZERO PUSH2 0x2C0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND ISZERO ISZERO PUSH2 0x2E0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC0 SHR AND ISZERO ISZERO PUSH2 0x300 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xC8 SHR AND ISZERO ISZERO PUSH2 0x320 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD0 SHR AND ISZERO ISZERO PUSH2 0x340 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xD8 SHR AND ISZERO ISZERO PUSH2 0x360 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE0 SHR AND ISZERO ISZERO PUSH2 0x380 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xE8 SHR AND ISZERO ISZERO PUSH2 0x3A0 DUP4 ADD MSTORE PUSH1 0xFF DUP2 PUSH1 0xF0 SHR AND ISZERO ISZERO PUSH2 0x3C0 DUP4 ADD MSTORE PUSH1 0xF8 SHR ISZERO ISZERO PUSH2 0x3E0 DUP3 ADD MSTORE ADD SWAP5 ADD SWAP3 ADD DUP6 SWAP3 SWAP4 SWAP2 PUSH2 0xA02 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1091 PUSH2 0x2812 JUMP JUMPDEST PUSH2 0x1099 PUSH2 0x2828 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH1 0x84 CALLDATALOAD SWAP1 PUSH1 0xA4 CALLDATALOAD SWAP3 PUSH1 0xC4 CALLDATALOAD PUSH1 0xE4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x1316 JUMPI PUSH2 0x10EB SWAP2 DUP12 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP7 PUSH1 0xFF DUP9 PUSH1 0xA0 SHR AND PUSH2 0x12C1 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 DUP7 ISZERO PUSH2 0x1264 JUMPI DUP4 ISZERO ISZERO DUP1 PUSH2 0x125B JUMPI JUMPDEST DUP1 PUSH2 0x1252 JUMPI JUMPDEST DUP1 PUSH2 0x1249 JUMPI JUMPDEST DUP1 PUSH2 0x1240 JUMPI JUMPDEST ISZERO PUSH2 0x11FB JUMPI PUSH1 0x64 DUP4 LT PUSH2 0x11BD JUMPI PUSH32 0x2CD2DFCDEB2B58C4B80527E9DF5E12DA537FA4F6C958A4FB623A83AB74EEAB63 SWAP9 PUSH1 0x80 SWAP9 PUSH1 0x1 PUSH1 0xA0 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR PUSH1 0x3 SSTORE DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE DUP4 PUSH1 0x5 SSTORE DUP5 PUSH1 0x6 SSTORE DUP6 PUSH1 0xA SSTORE PUSH1 0xB SSTORE PUSH1 0xC SSTORE PUSH1 0x16 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x53686F756C64206265206174206C656173742031303 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2042616420696E7075740000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP DUP2 ISZERO ISZERO PUSH2 0x1125 JUMP JUMPDEST POP TIMESTAMP DUP2 GT PUSH2 0x111F JUMP JUMPDEST POP TIMESTAMP DUP7 GT PUSH2 0x1119 JUMP JUMPDEST POP DUP5 ISZERO ISZERO PUSH2 0x1113 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2053616C65206F776E657220616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x399031B0B7103737BA103132901817 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C65506172616D733A2053616C6520697320616C72656164792063 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x3932B0BA32B217 PUSH1 0xC9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1375 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x12 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x13AF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH2 0x691 PUSH2 0x2E99 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x14D3 JUMPI SWAP1 PUSH2 0x140D SWAP2 DUP4 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST DUP2 ISZERO ISZERO DUP1 PUSH2 0x14C8 JUMPI JUMPDEST ISZERO PUSH2 0x145D JUMPI DUP1 PUSH1 0x17 SSTORE DUP1 JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x1459 JUMPI DUP1 PUSH2 0x1453 PUSH2 0x144A DUP6 PUSH2 0x143E PUSH1 0x1 SWAP6 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR PUSH2 0x2A76 JUMP JUMPDEST PUSH2 0x794 DUP4 PUSH2 0x2884 JUMP JUMPDEST ADD PUSH2 0x1421 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5368696674206D757374206265206E6F6E7A65726F20616E6420736D616C6C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72207468616E206D617856657374696E6754696D6553686966742E0000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH1 0x17 SLOAD DUP3 LT PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x689 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x153C PUSH2 0x2812 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x157E SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x325 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND OR PUSH1 0x3 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x15C2 CALLDATASIZE PUSH2 0x28E8 JUMP JUMPDEST SWAP1 PUSH1 0xC SLOAD DUP3 GT PUSH2 0x1B1A JUMPI CALLER DUP4 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x1AD5 JUMPI DUP2 PUSH2 0x15ED SWAP2 CALLER SWAP1 PUSH2 0x2AEC JUMP JUMPDEST ISZERO PUSH2 0x1A81 JUMPI PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO DUP1 PUSH2 0x1A76 JUMPI JUMPDEST ISZERO PUSH2 0x1A32 JUMPI CALLER DUP3 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 DUP4 KECCAK256 SLOAD AND PUSH2 0x19ED JUMPI ORIGIN CALLER SUB PUSH2 0x19A8 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x4 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x15AD JUMPI DUP4 SWAP2 PUSH2 0x196A JUMPI JUMPDEST POP PUSH2 0x166B PUSH2 0x1665 PUSH1 0xFF PUSH2 0x1674 SWAP4 AND PUSH2 0x2CA7 JUMP JUMPDEST CALLVALUE PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 PUSH2 0x2ACC JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x1930 JUMPI DUP2 GT PUSH2 0x18EC JUMPI PUSH2 0x168D DUP2 PUSH1 0x7 SLOAD PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH2 0x169C CALLVALUE PUSH1 0x8 SLOAD PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x14 SLOAD PUSH2 0x16AB DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP1 PUSH2 0x16B9 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH2 0x16C8 PUSH1 0x1F NOT SWAP2 PUSH2 0x291A JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x3 PUSH1 0x40 MLOAD PUSH2 0x16DD DUP2 PUSH2 0x2756 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD CALLVALUE DUP2 MSTORE PUSH1 0x40 DUP3 ADD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x60 DUP4 ADD SWAP5 DUP6 MSTORE CALLER DUP8 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP8 KECCAK256 SWAP3 MLOAD DUP4 SSTORE MLOAD PUSH1 0x1 DUP4 ADD SSTORE MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP1 MLOAD DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x18D8 JUMPI PUSH1 0x1 PUSH1 0x40 SHL DUP3 GT PUSH2 0x18D8 JUMPI DUP3 SLOAD DUP3 DUP5 SSTORE DUP1 DUP4 LT PUSH2 0x187F JUMPI JUMPDEST POP PUSH1 0x20 ADD SWAP2 DUP5 MSTORE PUSH1 0x20 DUP5 KECCAK256 DUP2 PUSH1 0x5 SHR SWAP2 DUP6 JUMPDEST DUP4 DUP2 LT PUSH2 0x183A JUMPI POP PUSH1 0x1F NOT DUP2 AND SWAP1 SUB DUP1 PUSH2 0x17CF JUMPI JUMPDEST DUP6 PUSH32 0x57D61F3CCD4CCD25EC5D234D6049553A586FAC134C85C98D0B0D9D5724F4E43E PUSH2 0x17C9 DUP8 CALLER DUP5 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH2 0x17AE PUSH1 0x10 SLOAD PUSH2 0x2D42 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG1 DUP1 RETURN JUMPDEST SWAP3 DUP6 SWAP4 DUP7 JUMPDEST DUP2 DUP2 LT PUSH2 0x180B JUMPI POP POP POP ADD SSTORE PUSH2 0x17C9 PUSH32 0x57D61F3CCD4CCD25EC5D234D6049553A586FAC134C85C98D0B0D9D5724F4E43E CODESIZE DUP1 PUSH2 0x1766 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 PUSH1 0x20 PUSH2 0x1830 PUSH1 0x1 SWAP3 DUP5 DUP10 MLOAD ISZERO ISZERO SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP7 ADD SWAP3 SWAP2 ADD PUSH2 0x17D4 JUMP JUMPDEST DUP7 DUP8 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0x1852 JUMPI POP DUP4 DUP3 ADD SSTORE PUSH1 0x1 ADD PUSH2 0x1751 JUMP JUMPDEST SWAP6 SWAP1 PUSH1 0x20 PUSH2 0x1876 PUSH1 0x1 SWAP3 DUP10 DUP6 MLOAD ISZERO ISZERO SWAP2 SWAP1 PUSH1 0xFF DUP1 SWAP2 PUSH1 0x3 SHL SWAP4 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP3 ADD SWAP7 ADD PUSH2 0x183D JUMP JUMPDEST DUP4 DUP7 MSTORE PUSH1 0x20 DUP7 KECCAK256 PUSH1 0x1F DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 PUSH1 0x1F DUP5 AND DUP1 PUSH2 0x18BB JUMPI JUMPDEST POP JUMPDEST DUP2 DUP2 LT PUSH2 0x18B0 JUMPI POP PUSH2 0x173F JUMP JUMPDEST DUP7 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18A3 JUMP JUMPDEST PUSH1 0x0 NOT DUP3 ADD SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH1 0x3 SHL SHR AND SWAP1 SSTORE CODESIZE PUSH2 0x18A1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x547279696E6720746F20627579206D6F7265207468616E20616C6C6F7765642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x43616E277420627579203020746F6B656E73 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x19A0 JUMPI JUMPDEST DUP2 PUSH2 0x1985 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2788 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x325 JUMPI MLOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x325 JUMPI PUSH2 0x166B PUSH2 0x1652 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792064697265637420636F6E74726163742063616C6C732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x557365722063616E207061727469636970617465206F6E6C79206F6E63652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73616C65206469646E2774207374617274206F72206974277320656E6465642E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP PUSH1 0xA SLOAD TIMESTAMP LT PUSH2 0x15FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964207369676E61747572652E20566572696669636174696F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x19985A5B1959 PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F74207265676973746572656420666F7220746869732073616C652E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F766572666C6F77696E67206D6178696D616C2070617274696369706174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x37103337B91039B0B63297 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x15 SLOAD DUP3 LT ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x213 DUP4 PUSH2 0x28B5 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1BC4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND CALLER EQ PUSH2 0x2C5B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xB8 SHR AND PUSH2 0x1C2B JUMPI PUSH1 0xFF PUSH1 0xB8 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xB8 SHL OR PUSH1 0x3 SSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE ADDRESS PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP2 MSTORE PUSH2 0x691 SWAP2 PUSH2 0x1C1D PUSH1 0x84 DUP4 PUSH2 0x2788 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2F79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4465706F7369742063616E20626520646F6E65206F6E6C79206F6E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x1CC3 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1CFB JUMPI PUSH1 0x20 DUP2 PUSH32 0x4B59D61D9FFDC3DB926D0CE7E06EBABB6BD1BF9DCDAE262667E48BE368227216 SWAP3 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x283934B1B29031B0B7103737BA103132901817 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x1D99 PUSH2 0x1D8B CALLDATASIZE PUSH1 0x4 DUP7 ADD PUSH2 0x27C6 JUMP JUMPDEST PUSH2 0x1D93 PUSH2 0x2828 JUMP JUMPDEST SWAP1 PUSH2 0x2BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x928 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x928 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x325 JUMPI CALLDATASIZE PUSH1 0x24 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT PUSH2 0x325 JUMPI SWAP1 DUP3 CALLER DUP5 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP2 DUP5 SWAP1 PUSH1 0x3 DUP5 ADD SWAP2 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1ED0 JUMPI PUSH1 0x24 DUP2 PUSH1 0x5 SHL DUP4 ADD ADD CALLDATALOAD PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x1ECC JUMPI PUSH1 0xFF PUSH2 0x1E34 DUP3 DUP7 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND ISZERO DUP1 PUSH2 0x1EB3 JUMPI JUMPDEST PUSH2 0x1E51 JUMPI JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1E0C JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP5 PUSH2 0x1EA6 PUSH2 0x1E9D DUP4 PUSH2 0x1E83 PUSH2 0x1E6C PUSH2 0x1EAC SWAP7 DUP11 PUSH2 0x2A99 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP1 PUSH1 0xFF PUSH1 0x1 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1E90 DUP11 SLOAD SWAP2 PUSH2 0x28B5 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH1 0x16 SLOAD SWAP1 PUSH2 0x2ACC JUMP JUMPDEST SWAP1 PUSH2 0x2A76 JUMP JUMPDEST SWAP4 SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP PUSH2 0x1EBD DUP2 PUSH2 0x2884 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR TIMESTAMP LT ISZERO PUSH2 0x1E43 JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP7 DUP5 DUP1 PUSH2 0x1EDB JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x1F15 PUSH32 0x6352C5382C4A4578E712449CA65E83CDB392D045DFCF1CAD9615189DB2DA244B SWAP4 CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x3 SLOAD AND PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH2 0x1C0 PUSH1 0x3 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x4 SLOAD AND PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP2 PUSH1 0xA SLOAD SWAP4 PUSH1 0xB SLOAD SWAP6 PUSH1 0xC SLOAD SWAP8 PUSH1 0xFF PUSH1 0x40 MLOAD SWAP11 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND DUP13 MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP14 ADD MSTORE DUP2 DUP2 PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP14 ADD MSTORE DUP2 DUP2 PUSH1 0xB0 SHR AND ISZERO ISZERO PUSH1 0x60 DUP14 ADD MSTORE PUSH1 0xB8 SHR AND ISZERO ISZERO PUSH1 0x80 DUP12 ADD MSTORE PUSH1 0xA0 DUP11 ADD MSTORE PUSH1 0xC0 DUP10 ADD MSTORE PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x100 DUP8 ADD MSTORE PUSH2 0x120 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD MSTORE PUSH2 0x160 DUP5 ADD MSTORE PUSH2 0x180 DUP4 ADD MSTORE PUSH2 0x1A0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2008 PUSH2 0x2812 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE KECCAK256 DUP1 SLOAD PUSH2 0x628 PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x2090 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xE SLOAD SWAP1 PUSH2 0x209E DUP2 DUP4 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0x9 SLOAD GT ISZERO PUSH2 0x20B6 JUMPI PUSH2 0x20B0 SWAP2 PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0xE SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526567697374726174696F6E20706572696F64206F766572666C6F7773207361 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x36329039BA30B93A17 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x2127 PUSH2 0x2121 CALLDATASIZE PUSH2 0x283E JUMP JUMPDEST SWAP2 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH2 0x1D99 PUSH2 0x214D CALLDATASIZE PUSH2 0x283E JUMP JUMPDEST SWAP2 PUSH2 0x2AEC JUMP JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x21A6 SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH2 0x21B3 PUSH1 0x9 SLOAD TIMESTAMP LT PUSH2 0x2A32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x21EB JUMPI PUSH1 0x20 DUP2 PUSH32 0x37CFB0744BDB923D0300A0C37FAC13CFEC5FC2EE313CB9B217D284122980BADA SWAP3 PUSH1 0xC SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E277420736574206D61782070617274696369706174696F6E20746F2030 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD TIMESTAMP LT PUSH2 0x23A4 JUMPI PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x235F JUMPI CALLER DUP3 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP2 PUSH1 0xFF PUSH2 0x22A6 DUP3 DUP6 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR AND ISZERO DUP1 PUSH2 0x2346 JUMPI JUMPDEST ISZERO PUSH2 0x22E3 JUMPI PUSH2 0x1E90 PUSH2 0x1E9D SWAP3 PUSH2 0x22D1 PUSH2 0x1E6C DUP5 PUSH2 0x22DA SWAP8 PUSH2 0x2A99 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH2 0x28B5 JUMP JUMPDEST DUP1 PUSH2 0x1EDB JUMPI POP DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E7320616C72656164792077697468647261776E206F7220706F7274 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x34B7B7103737BA103AB73637B1B5B2B2103CB2BA17 PUSH1 0x59 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP PUSH2 0x2350 DUP2 PUSH2 0x2884 JUMP JUMPDEST TIMESTAMP SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SHR GT ISZERO PUSH2 0x22B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F7274696F6E206964206F7574206F662072616E67652E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E732063616E206E6F742062652077697468647261776E207965742E PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x243B SWAP2 DUP5 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH1 0xFF PUSH1 0x3 SLOAD PUSH1 0xA0 SHR AND ISZERO PUSH2 0x25FA JUMPI PUSH1 0x9 SLOAD PUSH2 0x25A6 JUMPI PUSH1 0xE SLOAD DUP2 GT ISZERO PUSH2 0x2544 JUMPI PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x24EE JUMPI TIMESTAMP DUP2 LT PUSH2 0x249D JUMPI PUSH1 0x20 DUP2 PUSH32 0xAAD53C4362EF2FE5A5390CC046E71FD8423A0A8DCEEBC156AC9BBCD15997EEC2 SWAP3 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C6420626520696E207468652066757475 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x393297 PUSH1 0xE9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C64206C657373207468616E2073616C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x456E642074696D65 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73746172742074696D652073686F756C642067726561746572207468616E2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x32B3B4B9BA3930BA34B7B72A34B6B2A2B7323997 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657453616C6553746172743A207374617254696D652069732073657420616C PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x3932B0B23C97 PUSH1 0xD1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x39B0B6329034B9903737BA1031B932B0BA32B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x20 PUSH1 0x16 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1E5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1E5 JUMPI PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x935E01B PUSH1 0xE2 SHL DUP3 MSTORE CALLER PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x15AD JUMPI PUSH2 0x26CC SWAP3 PUSH2 0x26AC SWAP2 DUP6 SWAP2 PUSH2 0x53B JUMPI POP PUSH2 0x29DB JUMP JUMPDEST PUSH2 0x26C3 DUP2 PUSH1 0x9 SLOAD PUSH2 0x26BE DUP2 TIMESTAMP LT PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x2A76 JUMP JUMPDEST DUP1 PUSH1 0x9 SSTORE PUSH2 0x2A76 JUMP JUMPDEST PUSH1 0xA SLOAD GT ISZERO PUSH2 0x26D8 JUMPI DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53746172742074696D652063616E206E6F742062652067726561746572207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x30B71032B732103A34B6B297 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x928 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x928 JUMPI SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2772 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2772 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x280D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x27DD DUP3 PUSH2 0x27AA JUMP JUMPDEST SWAP3 PUSH2 0x27EB PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x280D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x280D JUMPI JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x280D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x280D JUMPI PUSH2 0x2869 SWAP2 PUSH1 0x4 ADD PUSH2 0x27C6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x280D JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x14 SLOAD DUP2 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x14 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x15 SLOAD DUP2 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x15 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x280D JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x280D JUMPI PUSH2 0x2913 SWAP2 PUSH1 0x4 ADD PUSH2 0x27C6 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2772 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x280D JUMPI DUP2 CALLDATALOAD PUSH2 0x2949 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP3 PUSH2 0x2957 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x280D JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x297F JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2972 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x29AD JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x29A0 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x280D JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x280D JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x29E2 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2A39 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x39B0B6329030B63932B0B23C9039BA30B93A32B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2A83 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 SLOAD DUP4 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x0 MSTORE PUSH1 0x1F PUSH1 0x20 PUSH1 0x0 KECCAK256 DUP4 PUSH1 0x5 SHR ADD SWAP3 AND SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2A83 JUMPI JUMP JUMPDEST DUP2 ISZERO PUSH2 0x2AD6 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 PUSH1 0x20 SWAP3 PUSH2 0x2B05 SWAP3 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x935E01B PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2B3E JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x2B57 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x563 JUMPI PUSH2 0x555 DUP2 DUP4 PUSH2 0x2788 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x2BD8 SWAP2 PUSH2 0x2B57 SWAP4 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP4 MSTORE PUSH1 0x34 DUP3 ADD MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x54 DUP3 ADD MSTORE PUSH1 0x48 DUP2 MSTORE PUSH2 0x2BA4 PUSH1 0x68 DUP3 PUSH2 0x2788 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x3C PUSH1 0x0 KECCAK256 PUSH2 0x2FD4 JUMP JUMPDEST SWAP1 SWAP3 SWAP2 SWAP3 PUSH2 0x3010 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT SWAP1 PUSH1 0x60 SHL AND DUP3 MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x28 DUP2 MSTORE PUSH2 0x2C12 PUSH1 0x48 DUP3 PUSH2 0x2788 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x0 MSTORE PUSH1 0x1C MSTORE PUSH1 0x20 PUSH2 0x2B05 PUSH2 0x2BD8 PUSH1 0x3C PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND SWAP5 PUSH2 0x2FD4 JUMP JUMPDEST ISZERO PUSH2 0x2C62 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7953616C654F776E65723A3A2052657374726963746564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2D3C JUMPI PUSH1 0x0 SWAP1 PUSH1 0x20 DUP2 LT PUSH1 0x1 AND PUSH1 0x4E DUP3 LT PUSH1 0x1 AND OR PUSH2 0x2D34 JUMPI PUSH1 0xA SWAP2 PUSH1 0x1 SWAP2 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x2CF7 JUMPI POP DUP3 PUSH1 0x0 NOT DIV DUP3 GT PUSH2 0x2CE3 JUMPI POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP3 DUP1 PUSH1 0x0 NOT DIV DUP2 GT PUSH2 0x2D20 JUMPI PUSH1 0x1 DUP5 AND PUSH2 0x2D17 JUMPI JUMPDEST DUP1 MUL SWAP3 PUSH1 0x1 SHR PUSH2 0x2CCA JUMP JUMPDEST DUP1 SWAP3 MUL SWAP2 PUSH2 0x2D0C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP1 POP PUSH1 0xA EXP SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2A83 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x289F JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH2 0x2DA6 SWAP2 PUSH2 0x2DA1 PUSH1 0x64 DUP4 PUSH2 0x2788 JUMP JUMPDEST PUSH2 0x2F79 JUMP JUMPDEST JUMP JUMPDEST ISZERO PUSH2 0x2DAF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x39B0B6329034B9903737BA1032B73232B2103CB2BA17 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x2DFB PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xB0 SHR AND PUSH2 0x2E48 JUMPI PUSH1 0xFF PUSH1 0xB0 SHL NOT DUP2 AND PUSH1 0x1 PUSH1 0xB0 SHL OR PUSH1 0x3 SSTORE PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD DUP1 DUP3 SUB SWAP2 DUP1 DUP4 GT PUSH2 0x2A83 JUMPI SUB PUSH2 0x2E34 JUMPI POP POP JUMP JUMPDEST PUSH2 0x2DA6 SWAP2 CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2D65 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E2774207769746864726177206C6566746F766572207477 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0x2EA7 PUSH1 0xA SLOAD TIMESTAMP LT ISZERO PUSH2 0x2DA8 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF DUP2 PUSH1 0xA8 SHR AND PUSH2 0x2F28 JUMPI PUSH1 0xFF PUSH1 0xA8 SHL NOT AND PUSH1 0x1 PUSH1 0xA8 SHL OR PUSH1 0x3 SSTORE PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 SWAP2 PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH2 0x2EDE DUP6 DUP3 PUSH2 0x2788 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 PUSH1 0x1F NOT DUP7 ADD CALLDATASIZE DUP4 CALLDATACOPY MLOAD SWAP2 CALLER GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x2F22 JUMPI PUSH1 0x0 RETURNDATASIZE SWAP2 PUSH2 0x2F06 DUP4 PUSH2 0x27AA JUMP JUMPDEST SWAP3 PUSH2 0x2F14 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2788 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x280D JUMPI JUMP JUMPDEST POP PUSH2 0x2F1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65722063616E2774207769746864726177206561726E696E6773207477 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x696365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 DUP2 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 MLOAD RETURNDATASIZE PUSH2 0x2FCB JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2FAA JUMPI POP JUMP JUMPDEST PUSH4 0x5274AFE7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x1 EQ ISZERO PUSH2 0x2FA3 JUMP JUMPDEST DUP2 MLOAD SWAP2 SWAP1 PUSH1 0x41 DUP4 SUB PUSH2 0x3005 JUMPI PUSH2 0x2FFE SWAP3 POP PUSH1 0x20 DUP3 ADD MLOAD SWAP1 PUSH1 0x60 PUSH1 0x40 DUP5 ADD MLOAD SWAP4 ADD MLOAD PUSH1 0x0 BYTE SWAP1 PUSH2 0x3098 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 PUSH1 0x2 SWAP2 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x3082 JUMPI DUP1 PUSH2 0x3026 JUMPI POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 SUB PUSH2 0x3041 JUMPI PUSH4 0xF645EEDF PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 DUP2 SUB PUSH2 0x305F JUMPI DUP3 PUSH4 0xFCE698F7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0x3 PUSH1 0x0 SWAP3 EQ PUSH2 0x306F JUMPI POP POP JUMP JUMPDEST PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 SWAP2 POP REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT PUSH2 0x3115 JUMPI SWAP2 PUSH1 0x20 SWAP4 PUSH1 0x80 SWAP3 PUSH1 0xFF PUSH1 0x0 SWAP6 PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE AND DUP7 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE DUP3 DUP1 MSTORE PUSH1 0x1 GAS STATICCALL ISZERO PUSH2 0x2B5A JUMPI PUSH1 0x0 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0x3109 JUMPI SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP2 PUSH1 0x3 SWAP2 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 GASLIMIT LOG3 0xBB PUSH0 NOT PUSH10 0x8ECAFBFFC5DD290E615E PUSH20 0x4BABE1627A49B5093E8BC538AE864736F6C6343 STOP ADDMOD BYTE STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xA5 0xDB 0xAD 0xD3 0x2D CALLDATALOAD OR PUSH25 0x2A7ABFA7D174D522E95257FB110BD06888AC17DA6C62906473 PUSH16 0x6C634300081A00330000000000000000 ","sourceMap":"124:2126:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;;;;-1:-1:-1;;;667:25:29;;681:10;124:2126;667:25;;124:2126;-1:-1:-1;;;;;124:2126:29;;;;;;667:25;124:2126;;667:25;;;;;;659:65;667:25;124:2126;667:25;;;124:2126;659:65;;:::i;:::-;124:2126;;;;;;1229:46;;;;;;-1:-1:-1;;;;;124:2126:29;1229:46;;;;;;;;;124:2126;1229:46;;;;;;124:2126;;;;;;1229:46;;;124:2126;1229:46;;;;;-1:-1:-1;;;;;124:2126:29;;;;;1286:27;124:2126;;;;;;;-1:-1:-1;;124:2126:29;;;;;1345:8;124:2126;;;;;;;1389:27;124:2126;;;1257:17;124:2126;;;1345:8;124:2126;;:::i;:::-;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;;;;;;;;;;;;;;1389:27;124:2126;;;;;;;;;;667:25;124:2126;;1229:46;124:2126;;;;;;;;;667:25;;;;124:2126;667:25;124:2126;667:25;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;124:2126;;;;;;-1:-1:-1;;124:2126:29;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;;217:60;124:2126;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;;;;1960:21;;;124:2126;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;124:2126:29;;;;;2127:12;;;;;;124:2126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;124:2126:29;;;;;-1:-1:-1;124:2126:29;;;;;;;;;;;;;2141:3;2175:11;;;:::i;:::-;124:2126;;;;;;;;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;2175:8;124:2126;;;;;;;;;;;;;;;;;2106:19;;124:2126;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;124:2126:29;;;;;;;;;;;;-1:-1:-1;;;124:2126:29;;;;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;;;;-1:-1:-1;;;667:25:29;;681:10;124:2126;667:25;;124:2126;;;;;;667:25;;124:2126;;-1:-1:-1;;;;;124:2126:29;667:25;;;;;;659:65;667:25;124:2126;667:25;;;659:65;;:::i;:::-;1056:32;;124:2126;;;;;1099:38;124:2126;;;1099:38;124:2126;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;;457:26;124:2126;457:26;;;;;;124:2126;457:26;;:::i;:::-;124:2126;;;;;;;;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;;-1:-1:-1;;;;;124:2126:29;;;;;;;;;;284:50;124:2126;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;1562:8;124:2126;;;;;;;;;;;;;-1:-1:-1;;124:2126:29;;;;;;-1:-1:-1;;;;;124:2126:29;;;;;;;457:26;124:2126;;;;;;457:26;-1:-1:-1;124:2126:29;;-1:-1:-1;124:2126:29;;;-1:-1:-1;124:2126:29;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;124:2126:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1606:202::-;1693:8;124:2126;1693:19;1690:85;;1784:17;124:2126;1606:202;:::o;1690:85::-;-1:-1:-1;;124:2126:29;;;;;;;1735:29;;;:::i;:::-;124:2126;;;;;;;;-1:-1:-1;;;;;124:2126:29;;1728:36::o"},"methodIdentifiers":{"admin()":"f851a440","allSales(uint256)":"5b30b428","allocationStaking()":"135fb504","deploySale()":"c050f3d4","getAllSales(uint256,uint256)":"9e75cf45","getLastDeployedSale()":"b033342b","getNumberOfSalesDeployed()":"209a9f41","isSaleCreatedThroughFactory(address)":"a00249e8","saleOwnerToSale(address)":"24be4a50","setAllocationStaking(address)":"9af2c481","tokenToSale(address)":"9c0ad5ed"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_adminContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_allocationStaking\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleContract\",\"type\":\"address\"}],\"name\":\"SaleDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sale\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"saleToken\",\"type\":\"address\"}],\"name\":\"SaleOwnerAndTokenSetInFactory\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"contract IAdmin\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allSales\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationStaking\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploySale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endIndex\",\"type\":\"uint256\"}],\"name\":\"getAllSales\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastDeployedSale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfSalesDeployed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isSaleCreatedThroughFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"saleOwnerToSale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_allocationStaking\",\"type\":\"address\"}],\"name\":\"setAllocationStaking\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenToSale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sales/SalesFactory.sol\":\"SalesFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x00c23b80f74717a6765b606001c5c633116020d488ee8f53600685b8200e4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73d0bd5ff47377a97d52149a805d82112f88c9f4ae853ef246a536bd31ce1da\",\"dweb:/ipfs/QmagG3Yup65JQPSMZScubYTCeyuUyvKLxBM3X1er6xWWxf\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x44f87e91783e88415bde66f1a63f6c7f0076f2d511548820407d5c95643ac56c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13a51bc2b23827744dcf5bad10c69e72528cf015a6fe48c93632cdb2c0eb1251\",\"dweb:/ipfs/QmZwPA47Yqgje1qtkdEFEja8ntTahMStYzKf5q3JRnaR7d\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/interfaces/IAdmin.sol\":{\"keccak256\":\"0x2d2739983345ed7a53de2c007704877d198de574c0b405e2dc93518189c42cbc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ccee90c17b4de2e7aa7d041302c03a1f0761cd431b4c1d13efdc7b9aabf48c7b\",\"dweb:/ipfs/QmNksD3G6SxU9qDP3oFBP5iQYAGk3YAppJQK8gPsJXGcvN\"]},\"contracts/interfaces/IAllocationStaking.sol\":{\"keccak256\":\"0xfc71214fdf8b8f9e02eadeecabaf2ff7b87d06b3b31525d4aa83cd65c1f5bed8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9d46e23c611c581fee00fe8921376998a0736804d4210f9eec8767d18560144a\",\"dweb:/ipfs/QmcsTt1RpoE68LzqQhYLRn73SoRM1v1pEBgFdiioujM4qh\"]},\"contracts/interfaces/ISalesFactory.sol\":{\"keccak256\":\"0x3edbcf61a2b14b34b0135456b1bf1a7d4d4ca9a16964eaf7b7f94b30fa55edb7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://263ef46c15246701be0c6bdc278c6d7aa5e11d45ec9e72be98704ba73c520fbd\",\"dweb:/ipfs/QmQp5t5m4ZQPz4v4QYDAt5vDxB5z1jsyCdMopupmsiFRTc\"]},\"contracts/sales/C2NSale.sol\":{\"keccak256\":\"0xa969981c011765cb4b2b8f62a47c4d9f51b62c0ba3cdeadd8214d5a796afeb80\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4dfc7d7046290048a6087923113b88dd002517929b91eecc3447958913743e16\",\"dweb:/ipfs/QmVakwk6eruZqrAa8zsyRSFcEe3Z9nT2q8KCYqBL1R7eVg\"]},\"contracts/sales/SalesFactory.sol\":{\"keccak256\":\"0xccf8b963f62a13ae10c077a52a0a5413989e242a5fa7aa5b5b6bd2f5afcfc4d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ae54aef0e47cb4493daeee42d44eb34c56d3f57be6321718e9d8ad9962f0b6cb\",\"dweb:/ipfs/QmNgR5ZA7B6DXK5rDVJbj9gi7pJUCYAWYCC5sPTGoii1T6\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":10866,"contract":"contracts/sales/SalesFactory.sol:SalesFactory","label":"admin","offset":0,"slot":"0","type":"t_contract(IAdmin)8133"},{"astId":10868,"contract":"contracts/sales/SalesFactory.sol:SalesFactory","label":"allocationStaking","offset":0,"slot":"1","type":"t_address"},{"astId":10872,"contract":"contracts/sales/SalesFactory.sol:SalesFactory","label":"isSaleCreatedThroughFactory","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"},{"astId":10876,"contract":"contracts/sales/SalesFactory.sol:SalesFactory","label":"saleOwnerToSale","offset":0,"slot":"3","type":"t_mapping(t_address,t_address)"},{"astId":10880,"contract":"contracts/sales/SalesFactory.sol:SalesFactory","label":"tokenToSale","offset":0,"slot":"4","type":"t_mapping(t_address,t_address)"},{"astId":10883,"contract":"contracts/sales/SalesFactory.sol:SalesFactory","label":"allSales","offset":0,"slot":"5","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IAdmin)8133":{"encoding":"inplace","label":"contract IAdmin","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"}}}}},"contracts/token/Airdrop.sol":{"Airdrop":{"abi":[{"inputs":[{"internalType":"address","name":"_airdropToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"beneficiary","type":"address"}],"name":"TokensAirdropped","type":"event"},{"inputs":[],"name":"TOKENS_PER_CLAIM","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"airdropToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalTokensWithdrawn","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"wasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608034607557601f61040638819003918201601f19168301916001600160401b03831184841017607a57808492602094604052833981010312607557516001600160a01b038116908190036075578015607557600080546001600160a01b03191691909117905560405161037590816100918239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c9081634d06068a1461031b575080638d8f2adb146100e0578063bd8d8c321461009d578063cac37f931461007f5763ccfff6791461005657600080fd5b3461007a57600036600319011261007a57602060405168056bc75e2d631000008152f35b600080fd5b3461007a57600036600319011261007a576020600154604051908152f35b3461007a57602036600319011261007a576004356001600160a01b0381169081900361007a576000526002602052602060ff604060002054166040519015158152f35b3461007a57600036600319011261007a573233036102c45733600052600260205260ff6040600020541661028c573360005260026020526040600020600160ff198254161790556000602060018060a01b0382541660446040518094819363a9059cbb60e01b835233600484015268056bc75e2d6310000060248401525af190811561028057600091610214575b50156101cf5760015468056bc75e2d6310000081018091116101b9576001557fdf23082d2b28b19078bc48141d3fdbfd14390048297d149755a09e7edd8129a96020604051338152a1005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601f60248201527f546f6b656e207472616e73666572207374617475732069732066616c73652e006044820152606490fd5b60203d602011610279575b601f8101601f1916820167ffffffffffffffff81118382101761026557602091839160405281010312610261575190811515820361025e57508161016e565b80fd5b5080fd5b634e487b7160e01b84526041600452602484fd5b503d61021f565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f416c726561647920636c61696d65642160801b6044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f526571756972652074686174206d6573736167652073656e64657220697320746044820152683c16b7b934b3b4b71760b91b6064820152608490fd5b3461007a57600036600319011261007a576000546001600160a01b03168152602090f3fea264697066735822122022d0d527cc0996f460e1a259ec34b6a5083d3e0a38d7341635ea0bc7c7099c9964736f6c634300081a0033","opcodes":"PUSH1 0x80 CALLVALUE PUSH1 0x75 JUMPI PUSH1 0x1F PUSH2 0x406 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH1 0x7A JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH1 0x75 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH1 0x75 JUMPI DUP1 ISZERO PUSH1 0x75 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x375 SWAP1 DUP2 PUSH2 0x91 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4D06068A EQ PUSH2 0x31B JUMPI POP DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xBD8D8C32 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xCAC37F93 EQ PUSH2 0x7F JUMPI PUSH4 0xCCFFF679 EQ PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x7A JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI ORIGIN CALLER SUB PUSH2 0x2C4 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x28C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x214 JUMPI JUMPDEST POP ISZERO PUSH2 0x1CF JUMPI PUSH1 0x1 SLOAD PUSH9 0x56BC75E2D63100000 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B9 JUMPI PUSH1 0x1 SSTORE PUSH32 0xDF23082D2B28B19078BC48141D3FDBFD14390048297D149755A09E7EDD8129A9 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E73666572207374617475732069732066616C73652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x279 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x265 JUMPI PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x40 MSTORE DUP2 ADD SUB SLT PUSH2 0x261 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x25E JUMPI POP DUP2 PUSH2 0x16E JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416C726561647920636C61696D656421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526571756972652074686174206D6573736167652073656E6465722069732074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3C16B7B934B3B4B717 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xD0 0xD5 0x27 0xCC MULMOD SWAP7 DELEGATECALL PUSH1 0xE1 LOG2 MSIZE 0xEC CALLVALUE 0xB6 0xA5 ADDMOD RETURNDATASIZE RETURNDATACOPY EXP CODESIZE 0xD7 CALLVALUE AND CALLDATALOAD 0xEA SIGNEXTEND 0xC7 0xC7 MULMOD SWAP13 SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"123:999:30:-:0;;;;;;;;;;;;;-1:-1:-1;;123:999:30;;;;-1:-1:-1;;;;;123:999:30;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;123:999:30;;;;;;;;470:27;;123:999;;-1:-1:-1;123:999:30;;-1:-1:-1;;;;;;123:999:30;;;;;;;;;;;;;;;;;-1:-1:-1;123:999:30;;;;;;-1:-1:-1;123:999:30;;;;;-1:-1:-1;123:999:30"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c9081634d06068a1461031b575080638d8f2adb146100e0578063bd8d8c321461009d578063cac37f931461007f5763ccfff6791461005657600080fd5b3461007a57600036600319011261007a57602060405168056bc75e2d631000008152f35b600080fd5b3461007a57600036600319011261007a576020600154604051908152f35b3461007a57602036600319011261007a576004356001600160a01b0381169081900361007a576000526002602052602060ff604060002054166040519015158152f35b3461007a57600036600319011261007a573233036102c45733600052600260205260ff6040600020541661028c573360005260026020526040600020600160ff198254161790556000602060018060a01b0382541660446040518094819363a9059cbb60e01b835233600484015268056bc75e2d6310000060248401525af190811561028057600091610214575b50156101cf5760015468056bc75e2d6310000081018091116101b9576001557fdf23082d2b28b19078bc48141d3fdbfd14390048297d149755a09e7edd8129a96020604051338152a1005b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152601f60248201527f546f6b656e207472616e73666572207374617475732069732066616c73652e006044820152606490fd5b60203d602011610279575b601f8101601f1916820167ffffffffffffffff81118382101761026557602091839160405281010312610261575190811515820361025e57508161016e565b80fd5b5080fd5b634e487b7160e01b84526041600452602484fd5b503d61021f565b6040513d6000823e3d90fd5b60405162461bcd60e51b815260206004820152601060248201526f416c726561647920636c61696d65642160801b6044820152606490fd5b60405162461bcd60e51b815260206004820152602960248201527f526571756972652074686174206d6573736167652073656e64657220697320746044820152683c16b7b934b3b4b71760b91b6064820152608490fd5b3461007a57600036600319011261007a576000546001600160a01b03168152602090f3fea264697066735822122022d0d527cc0996f460e1a259ec34b6a5083d3e0a38d7341635ea0bc7c7099c9964736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4D06068A EQ PUSH2 0x31B JUMPI POP DUP1 PUSH4 0x8D8F2ADB EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xBD8D8C32 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0xCAC37F93 EQ PUSH2 0x7F JUMPI PUSH4 0xCCFFF679 EQ PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x56BC75E2D63100000 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI PUSH1 0x20 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x7A JUMPI PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI ORIGIN CALLER SUB PUSH2 0x2C4 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x28C JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND PUSH1 0x44 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x214 JUMPI JUMPDEST POP ISZERO PUSH2 0x1CF JUMPI PUSH1 0x1 SLOAD PUSH9 0x56BC75E2D63100000 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B9 JUMPI PUSH1 0x1 SSTORE PUSH32 0xDF23082D2B28B19078BC48141D3FDBFD14390048297D149755A09E7EDD8129A9 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E73666572207374617475732069732066616C73652E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x279 JUMPI JUMPDEST PUSH1 0x1F DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x265 JUMPI PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x40 MSTORE DUP2 ADD SUB SLT PUSH2 0x261 JUMPI MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x25E JUMPI POP DUP2 PUSH2 0x16E JUMP JUMPDEST DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x416C726561647920636C61696D656421 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526571756972652074686174206D6573736167652073656E6465722069732074 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3C16B7B934B3B4B717 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7A JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7A JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 0xD0 0xD5 0x27 0xCC MULMOD SWAP7 DELEGATECALL PUSH1 0xE1 LOG2 MSIZE 0xEC CALLVALUE 0xB6 0xA5 ADDMOD RETURNDATASIZE RETURNDATACOPY EXP CODESIZE 0xD7 CALLVALUE AND CALLDATALOAD 0xEA SIGNEXTEND 0xC7 0xC7 MULMOD SWAP13 SWAP10 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ","sourceMap":"123:999:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;123:999:30;;;;;;;314:12;123:999;;;;;;;;;;;;;-1:-1:-1;;123:999:30;;;;;180:35;123:999;;;;;;;;;;;;;-1:-1:-1;;123:999:30;;;;;;-1:-1:-1;;;;;123:999:30;;;;;;;;;;222:43;123:999;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;123:999:30;;;;659:9;645:10;:23;123:999;;645:10;123:999;;777:10;123:999;;;;;;;;;;645:10;123:999;;777:10;123:999;;;;;856:4;123:999;;;;;;;;;;;;;;;;;;885:52;123:999;;;;;;;;;885:52;;645:10;123:999;885:52;;123:999;314:12;123:999;;;;885:52;;;;;;;123:999;885:52;;;123:999;;;;;856:4;123:999;314:12;123:999;;;;;;;856:4;123:999;1083:29;123:999;;;645:10;123:999;;1083:29;123:999;;;;;;;;;;;;;;;;-1:-1:-1;;;123:999:30;;;;;;;;;;;;;885:52;123:999;;;;;;885:52;123:999;885:52;123:999;885:52;;;;123:999;;;-1:-1:-1;;123:999:30;;;;;;;;;;;;;;;;;;885:52;;123:999;;;;;;;;;;;;;885:52;;;;123:999;;;;;;;;-1:-1:-1;;;123:999:30;;;;;;;;885:52;;;;;;123:999;;;;;;;;;;;;-1:-1:-1;;;123:999:30;;;;;;;;;;;;-1:-1:-1;;;123:999:30;;;;;;;;;;-1:-1:-1;;;123:999:30;;;;;;;;;;;;;;;;;-1:-1:-1;;;123:999:30;;;;;;;;;;;;;-1:-1:-1;;123:999:30;;;;;;-1:-1:-1;;;;;123:999:30;;;;;"},"methodIdentifiers":{"TOKENS_PER_CLAIM()":"ccfff679","airdropToken()":"4d06068a","totalTokensWithdrawn()":"cac37f93","wasClaimed(address)":"bd8d8c32","withdrawTokens()":"8d8f2adb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_airdropToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"TokensAirdropped\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKENS_PER_CLAIM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"airdropToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"wasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/Airdrop.sol\":\"Airdrop\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"contracts/token/Airdrop.sol\":{\"keccak256\":\"0x3933663c070e88411598ae8ae9b875845c2396f3481ef20f4e5fa8263aa442fa\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3505d4e2d454ba5cb5f2c17873ff45c30a33776326ece93b07714229242bbf7a\",\"dweb:/ipfs/QmPTMnMfd8kAykwvLJnCaKZB4zqtR8fkCPKrxssmzU8TnL\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":11091,"contract":"contracts/token/Airdrop.sol:Airdrop","label":"airdropToken","offset":0,"slot":"0","type":"t_contract(IERC20)1466"},{"astId":11093,"contract":"contracts/token/Airdrop.sol:Airdrop","label":"totalTokensWithdrawn","offset":0,"slot":"1","type":"t_uint256"},{"astId":11097,"contract":"contracts/token/Airdrop.sol:Airdrop","label":"wasClaimed","offset":0,"slot":"2","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_contract(IERC20)1466":{"encoding":"inplace","label":"contract IERC20","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}}}},"contracts/token/C2NToken.sol":{"C2NToken":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"uint256","name":"totalSupply_","type":"uint256"},{"internalType":"uint8","name":"decimals_","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":1015,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":978,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"6080604052346103cd57610be680380380610019816103d2565b9283398101906080818303126103cd5780516001600160401b0381116103cd57826100459183016103f7565b602082015190926001600160401b0382116103cd576100659183016103f7565b906060604082015191015160ff81168091036103cd5783516001600160401b0381116102d657600354600181811c911680156103c3575b60208210146102b657601f811161035e575b50602094601f82116001146102f7579481929394956000926102ec575b50508160011b916000199060031b1c1916176003555b82516001600160401b0381116102d657600454600181811c911680156102cc575b60208210146102b657601f8111610251575b506020601f82116001146101ea57819293946000926101df575b50508160011b916000199060031b1c1916176004555b60ff19600554161760055533156101c9576002548181018091116101b357600255600033815280602052604081208281540190556040519182527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a360405161078390816104638239f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b01519050388061012e565b601f198216906004600052806000209160005b81811061023957509583600195969710610220575b505050811b01600455610144565b015160001960f88460031b161c19169055388080610212565b9192602060018192868b0151815501940192016101fd565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106102ac575b601f0160051c01905b8181106102a05750610114565b60008155600101610293565b909150819061028a565b634e487b7160e01b600052602260045260246000fd5b90607f1690610102565b634e487b7160e01b600052604160045260246000fd5b0151905038806100cb565b601f198216956003600052806000209160005b8881106103465750836001959697981061032d575b505050811b016003556100e1565b015160001960f88460031b161c1916905538808061031f565b9192602060018192868501518155019401920161030a565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106103b9575b601f0160051c01905b8181106103ad57506100ae565b600081556001016103a0565b9091508190610397565b90607f169061009c565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176102d657604052565b81601f820112156103cd578051906001600160401b0382116102d657610426601f8301601f19166020016103d2565b92828452602083830101116103cd5760005b82811061044d57505060206000918301015290565b8060208092840101518282870101520161043856fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461056c57508063095ea7b3146104e657806318160ddd146104c857806323b872dd146103db578063313ce567146103ba57806342966c681461031457806370a08231146102da57806395d89b41146101b9578063a0712d681461011f578063a9059cbb146100ee5763dd62ed3e1461009857600080fd5b346100e95760403660031901126100e9576100b1610688565b6100b961069e565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100e95760403660031901126100e95761011461010a610688565b60243590336106b4565b602060405160018152f35b346100e95760203660031901126100e95760043533156101a35760025481810180911161018d576002556000903382528160205260408220818154019055604051908152817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b346100e95760003660031901126100e95760405160006004548060011c906001811680156102d0575b6020831081146102bc578285529081156102a05750600114610249575b50819003601f01601f191681019067ffffffffffffffff8211818310176102335761022f8291826040528261063f565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b82821061028a575060209150820101826101ff565b6001816020925483858801015201910190610275565b90506020925060ff191682840152151560051b820101826101ff565b634e487b7160e01b84526022600452602484fd5b91607f16916101e2565b346100e95760203660031901126100e9576001600160a01b036102fb610688565b1660005260006020526020604060002054604051908152f35b346100e95760203660031901126100e95760043533156103a45760003381528060205260408120549180831061038b578082933384528360205203604083205580600254036002556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a380f35b60649263391434e360e21b835233600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b346100e95760003660031901126100e957602060ff60055416604051908152f35b346100e95760603660031901126100e9576103f4610688565b6103fc61069e565b6001600160a01b038216600081815260016020908152604080832033845290915290205490926044359291600019811061043c575b5061011493506106b4565b8381106104ab57841561049557331561047f57610114946000526001602052604060002060018060a01b0333166000526020528360406000209103905584610431565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100e95760003660031901126100e9576020600254604051908152f35b346100e95760403660031901126100e9576104ff610688565b602435903315610495576001600160a01b031690811561047f57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100e95760003660031901126100e95760006003548060011c90600181168015610635575b6020831081146102bc578285529081156102a057506001146105de5750819003601f01601f191681019067ffffffffffffffff8211818310176102335761022f8291826040528261063f565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b82821061061f575060209150820101826101ff565b600181602092548385880101520191019061060a565b91607f1691610592565b91909160208152825180602083015260005b818110610672575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201610651565b600435906001600160a01b03821682036100e957565b602435906001600160a01b03821682036100e957565b6001600160a01b03169081156103a4576001600160a01b03169182156101a35760008281528060205260408120548281106107335791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fdfea2646970667358221220817109cf48a2f54ce9dac23a5715e6d5f3028acb95321f84f6c8d9ddb6783dd664736f6c634300081a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3CD JUMPI PUSH2 0xBE6 DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x3D2 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0x3CD JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x3CD JUMPI DUP3 PUSH2 0x45 SWAP2 DUP4 ADD PUSH2 0x3F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x3CD JUMPI PUSH2 0x65 SWAP2 DUP4 ADD PUSH2 0x3F7 JUMP JUMPDEST SWAP1 PUSH1 0x60 PUSH1 0x40 DUP3 ADD MLOAD SWAP2 ADD MLOAD PUSH1 0xFF DUP2 AND DUP1 SWAP2 SUB PUSH2 0x3CD JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D6 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x3C3 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2B6 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x35E JUMPI JUMPDEST POP PUSH1 0x20 SWAP5 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2F7 JUMPI SWAP5 DUP2 SWAP3 SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x2EC JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D6 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2CC JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2B6 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x251 JUMPI JUMPDEST POP PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1EA JUMPI DUP2 SWAP3 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1DF JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST PUSH1 0xFF NOT PUSH1 0x5 SLOAD AND OR PUSH1 0x5 SSTORE CALLER ISZERO PUSH2 0x1C9 JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B3 JUMPI PUSH1 0x2 SSTORE PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0x783 SWAP1 DUP2 PUSH2 0x463 DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x12E JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x239 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x220 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x144 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x212 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP12 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x2AC JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x2A0 JUMPI POP PUSH2 0x114 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x293 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x28A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x102 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xCB JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP6 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP9 DUP2 LT PUSH2 0x346 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 SWAP9 LT PUSH2 0x32D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xE1 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x31F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x30A JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x3B9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3AD JUMPI POP PUSH2 0xAE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3A0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x397 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x9C JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2D6 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x3CD JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2D6 JUMPI PUSH2 0x426 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x3D2 JUMP JUMPDEST SWAP3 DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x3CD JUMPI PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x44D JUMPI POP POP PUSH1 0x20 PUSH1 0x0 SWAP2 DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP8 ADD ADD MSTORE ADD PUSH2 0x438 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x56C JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xEE JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0xB1 PUSH2 0x688 JUMP JUMPDEST PUSH2 0xB9 PUSH2 0x69E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x114 PUSH2 0x10A PUSH2 0x688 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x4 CALLDATALOAD CALLER ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x18D JUMPI PUSH1 0x2 SSTORE PUSH1 0x0 SWAP1 CALLER DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2D0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2BC JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x249 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x233 JUMPI PUSH2 0x22F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x63F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x28A JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x275 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E2 JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2FB PUSH2 0x688 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x4 CALLDATALOAD CALLER ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x38B JUMPI DUP1 DUP3 SWAP4 CALLER DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE SUB PUSH1 0x40 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x3F4 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x3FC PUSH2 0x69E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x43C JUMPI JUMPDEST POP PUSH2 0x114 SWAP4 POP PUSH2 0x6B4 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x4AB JUMPI DUP5 ISZERO PUSH2 0x495 JUMPI CALLER ISZERO PUSH2 0x47F JUMPI PUSH2 0x114 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x431 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x4FF PUSH2 0x688 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x495 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x47F JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x635 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2BC JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5DE JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x233 JUMPI PUSH2 0x22F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x61F JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x60A JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x592 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x672 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x651 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE9 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE9 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x733 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 PUSH18 0x9CF48A2F54CE9DAC23A5715E6D5F3028ACB SWAP6 ORIGIN 0x1F DUP5 0xF6 0xC8 0xD9 0xDD 0xB6 PUSH25 0x3DD664736F6C634300081A0033000000000000000000000000 ","sourceMap":"122:535:31:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:535:31;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;122:535:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:535:31;;;;1667:13:9;122:535:31;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;;;;;;1667:13:9;122:535:31;;;;;1667:13:9;122:535:31;;;;-1:-1:-1;;;;;122:535:31;;;;1690:17:9;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;;;;;;1667:13:9;122:535:31;;;;;1690:17:9;122:535:31;;;;315:19;122:535;;;315:19;122:535;735:10:13;7528:21:9;7524:91;;6233:21;122:535:31;;;;;;;;;6233:21:9;122:535:31;-1:-1:-1;735:10:13;122:535:31;;;;;;;;;;;;;;;;;;;7083:25:9;122:535:31;735:10:13;7083:25:9;;122:535:31;;;;;;;;;;;;;-1:-1:-1;122:535:31;;1690:17:9;122:535:31;;-1:-1:-1;122:535:31;7524:91:9;7572:32;;;-1:-1:-1;7572:32:9;-1:-1:-1;1690:17:9;122:535:31;;-1:-1:-1;7572:32:9;122:535:31;;;;-1:-1:-1;122:535:31;;;;;;;;;;1690:17:9;-1:-1:-1;122:535:31;;-1:-1:-1;122:535:31;;-1:-1:-1;122:535:31;;;;;;;;;;;;;;;;;;;;;;;1690:17:9;122:535:31;;;;;;;;;;1667:13:9;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:17:9;-1:-1:-1;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;-1:-1:-1;122:535:31;;1690:17:9;122:535:31;;-1:-1:-1;122:535:31;;;;;;;;;;;;-1:-1:-1;122:535:31;;1690:17:9;122:535:31;;-1:-1:-1;122:535:31;;;;;-1:-1:-1;122:535:31;;;;;;;;;;1667:13:9;-1:-1:-1;122:535:31;;-1:-1:-1;122:535:31;;-1:-1:-1;122:535:31;;;;;;;;;;;;;;;;;;;;;;;1667:13:9;122:535:31;;;;;;;;;;1667:13:9;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:9;-1:-1:-1;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;;-1:-1:-1;;122:535:31;;;-1:-1:-1;;;;;122:535:31;;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;122:535:31;;;;;;;;-1:-1:-1;;122:535:31;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;;;;;-1:-1:-1;122:535:31;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1694,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_3584":{"entryPoint":1672,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1599,"id":null,"parameterSlots":2,"returnSlots":1},"fun_transfer":{"entryPoint":1716,"id":1118,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461056c57508063095ea7b3146104e657806318160ddd146104c857806323b872dd146103db578063313ce567146103ba57806342966c681461031457806370a08231146102da57806395d89b41146101b9578063a0712d681461011f578063a9059cbb146100ee5763dd62ed3e1461009857600080fd5b346100e95760403660031901126100e9576100b1610688565b6100b961069e565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100e95760403660031901126100e95761011461010a610688565b60243590336106b4565b602060405160018152f35b346100e95760203660031901126100e95760043533156101a35760025481810180911161018d576002556000903382528160205260408220818154019055604051908152817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a380f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b346100e95760003660031901126100e95760405160006004548060011c906001811680156102d0575b6020831081146102bc578285529081156102a05750600114610249575b50819003601f01601f191681019067ffffffffffffffff8211818310176102335761022f8291826040528261063f565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b82821061028a575060209150820101826101ff565b6001816020925483858801015201910190610275565b90506020925060ff191682840152151560051b820101826101ff565b634e487b7160e01b84526022600452602484fd5b91607f16916101e2565b346100e95760203660031901126100e9576001600160a01b036102fb610688565b1660005260006020526020604060002054604051908152f35b346100e95760203660031901126100e95760043533156103a45760003381528060205260408120549180831061038b578082933384528360205203604083205580600254036002556040519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a380f35b60649263391434e360e21b835233600452602452604452fd5b634b637e8f60e11b600052600060045260246000fd5b346100e95760003660031901126100e957602060ff60055416604051908152f35b346100e95760603660031901126100e9576103f4610688565b6103fc61069e565b6001600160a01b038216600081815260016020908152604080832033845290915290205490926044359291600019811061043c575b5061011493506106b4565b8381106104ab57841561049557331561047f57610114946000526001602052604060002060018060a01b0333166000526020528360406000209103905584610431565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100e95760003660031901126100e9576020600254604051908152f35b346100e95760403660031901126100e9576104ff610688565b602435903315610495576001600160a01b031690811561047f57336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100e95760003660031901126100e95760006003548060011c90600181168015610635575b6020831081146102bc578285529081156102a057506001146105de5750819003601f01601f191681019067ffffffffffffffff8211818310176102335761022f8291826040528261063f565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b82821061061f575060209150820101826101ff565b600181602092548385880101520191019061060a565b91607f1691610592565b91909160208152825180602083015260005b818110610672575060409293506000838284010152601f8019910116010190565b8060208092870101516040828601015201610651565b600435906001600160a01b03821682036100e957565b602435906001600160a01b03821682036100e957565b6001600160a01b03169081156103a4576001600160a01b03169182156101a35760008281528060205260408120548281106107335791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fdfea2646970667358221220817109cf48a2f54ce9dac23a5715e6d5f3028acb95321f84f6c8d9ddb6783dd664736f6c634300081a0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x56C JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x314 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xEE JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0xB1 PUSH2 0x688 JUMP JUMPDEST PUSH2 0xB9 PUSH2 0x69E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x114 PUSH2 0x10A PUSH2 0x688 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x4 CALLDATALOAD CALLER ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x2 SLOAD DUP2 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x18D JUMPI PUSH1 0x2 SSTORE PUSH1 0x0 SWAP1 CALLER DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x2D0 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2BC JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x249 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x233 JUMPI PUSH2 0x22F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x63F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x28A JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x275 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1E2 JUMP JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2FB PUSH2 0x688 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x4 CALLDATALOAD CALLER ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 DUP1 DUP4 LT PUSH2 0x38B JUMPI DUP1 DUP3 SWAP4 CALLER DUP5 MSTORE DUP4 PUSH1 0x20 MSTORE SUB PUSH1 0x40 DUP4 KECCAK256 SSTORE DUP1 PUSH1 0x2 SLOAD SUB PUSH1 0x2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x64 SWAP3 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP4 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x5 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x3F4 PUSH2 0x688 JUMP JUMPDEST PUSH2 0x3FC PUSH2 0x69E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x43C JUMPI JUMPDEST POP PUSH2 0x114 SWAP4 POP PUSH2 0x6B4 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x4AB JUMPI DUP5 ISZERO PUSH2 0x495 JUMPI CALLER ISZERO PUSH2 0x47F JUMPI PUSH2 0x114 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x431 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH2 0x4FF PUSH2 0x688 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x495 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x47F JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE9 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x635 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x2BC JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x2A0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5DE JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x233 JUMPI PUSH2 0x22F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x63F JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x61F JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x1FF JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x60A JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x592 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x672 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x651 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE9 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE9 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x1A3 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x733 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 PUSH18 0x9CF48A2F54CE9DAC23A5715E6D5F3028ACB SWAP6 ORIGIN 0x1F DUP5 0xF6 0xC8 0xD9 0xDD 0xB6 PUSH25 0x3DD664736F6C634300081A0033000000000000000000000000 ","sourceMap":"122:535:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:535:31;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:535:31;;;;3459:5:9;122:535:31;;:::i;:::-;;;735:10:13;;3459:5:9;:::i;:::-;122:535:31;;;;;;;;;;;;;-1:-1:-1;;122:535:31;;;;;;735:10:13;7528:21:9;7524:91;;6233:21;122:535:31;;;;;;;;;6233:21:9;122:535:31;;735:10:13;;122:535:31;;;;;;;;;;;;;;;;;;;735:10:13;7083:25:9;122:535:31;735:10:13;7083:25:9;;122:535:31;;;;;;;;;;;;;;7524:91:9;7572:32;;;122:535:31;7572:32:9;122:535:31;;;;;7572:32:9;122:535:31;;;;;;-1:-1:-1;;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;-1:-1:-1;;122:535:31;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;122:535:31;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:535:31;;;;-1:-1:-1;;;;;122:535:31;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;122:535:31;;;;;;735:10:13;8054:21:9;8050:89;;122:535:31;735:10:13;122:535:31;;;;;;;;;6340:19:9;;;;6336:115;;735:10:13;;;;122:535:31;;;;;;;;;;;6810:21:9;122:535:31;;6810:21:9;122:535:31;;;;;;7083:25:9;122:535:31;735:10:13;7083:25:9;;122:535:31;;6336:115:9;122:535:31;6386:50:9;;;;;;735:10:13;122:535:31;;;;;;6386:50:9;8050:89;8098:30;;;122:535:31;8098:30:9;122:535:31;;;;;8098:30:9;122:535:31;;;;;;-1:-1:-1;;122:535:31;;;;;;463:9;122:535;;;;;;;;;;;;;;-1:-1:-1;;122:535:31;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;122:535:31;;;;;;;;;;;;;;;735:10:13;122:535:31;;;;;;;;;;;;;;-1:-1:-1;;10580:36:9;;10576:309;;122:535:31;4986:5:9;;;;;:::i;10576:309::-;10636:24;;;10632:130;;9813:19;;9809:89;;735:10:13;9911:21:9;9907:90;;4986:5;122:535:31;;;;;;;;;;;;;;735:10:13;122:535:31;-1:-1:-1;122:535:31;;;;;-1:-1:-1;122:535:31;;;;;10576:309:9;;;9907:90;9955:31;;;122:535:31;9955:31:9;122:535:31;;;;;9955:31:9;9809:89;9855:32;;;122:535:31;9855:32:9;122:535:31;;;;;9855:32:9;10632:130;10687:60;;;;;122:535:31;10687:60:9;735:10:13;122:535:31;;;;;;;;10687:60:9;122:535:31;;;;;;-1:-1:-1;;122:535:31;;;;;2927:12:9;122:535:31;;;;;;;;;;;;;-1:-1:-1;;122:535:31;;;;;;:::i;:::-;;;735:10:13;;9813:19:9;9809:89;;-1:-1:-1;;;;;122:535:31;;9911:21:9;;9907:90;;735:10:13;122:535:31;;;;;;;;;-1:-1:-1;122:535:31;;;;;-1:-1:-1;122:535:31;;;;;;;10085:31:9;122:535:31;735:10:13;10085:31:9;;122:535:31;;;;;;;;;;;;;-1:-1:-1;;122:535:31;;;;;1856:5:9;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;122:535:31;;;;;-1:-1:-1;;122:535:31;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1856:5:9;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;122:535:31;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;122:535:31;;;;;;:::o;5393:300:9:-;-1:-1:-1;;;;;122:535:31;;5476:18:9;;5472:86;;-1:-1:-1;;;;;122:535:31;;5571:16:9;;5567:86;;5492:1;122:535:31;;;;;;;;;;6340:19:9;;;6336:115;;122:535:31;;;;7083:25:9;122:535:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7083:25:9;5393:300::o;6336:115::-;6386:50;122:535:31;6386:50:9;;;;;;;;122:535:31;;;;;6386:50:9"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","decimals()":"313ce567","mint(uint256)":"a0712d68","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/C2NToken.sol\":\"C2NToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/token/C2NToken.sol\":{\"keccak256\":\"0x22f3f7a5f990258b801cea2ad36fdceb473f01d9319ba53a53f4d7db448e41ec\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://661334dd3c98c71026e1758575365db381834bcdfdae11699d495a4311f9dd7c\",\"dweb:/ipfs/QmPETpGAKsPLTi3xFks8sa55ajSZPZtWVWLetMAGmqQXrQ\"]}},\"version\":1}","storageLayout":{"storage":[{"astId":896,"contract":"contracts/token/C2NToken.sol:C2NToken","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":902,"contract":"contracts/token/C2NToken.sol:C2NToken","label":"_allowances","offset":0,"slot":"1","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":904,"contract":"contracts/token/C2NToken.sol:C2NToken","label":"_totalSupply","offset":0,"slot":"2","type":"t_uint256"},{"astId":906,"contract":"contracts/token/C2NToken.sol:C2NToken","label":"_name","offset":0,"slot":"3","type":"t_string_storage"},{"astId":908,"contract":"contracts/token/C2NToken.sol:C2NToken","label":"_symbol","offset":0,"slot":"4","type":"t_string_storage"},{"astId":11193,"contract":"contracts/token/C2NToken.sol:C2NToken","label":"_decimals","offset":0,"slot":"5","type":"t_uint8"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}}}}}}}